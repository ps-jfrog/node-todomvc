{"_id":"ember-modifier","_rev":"86-58eb6bec9ca78d799fdcb858c6ee513c","name":"ember-modifier","description":"A library for writing Ember modifiers","dist-tags":{"old":"1.0.5","beta":"4.0.0-beta.1","unstable":"4.0.0-unstable.640b9ff","latest":"4.2.0"},"versions":{"1.0.0":{"name":"ember-modifier","version":"1.0.0","keywords":["ember-addon"],"author":"","license":"MIT","_id":"ember-modifier@1.0.0","maintainers":[{"name":"pzuraq","email":"me@pzuraq.com"}],"dist":{"shasum":"03e332e77e22a1510c9dbf400371dea42508d82b","tarball":"https://registry.npmjs.org/ember-modifier/-/ember-modifier-1.0.0.tgz","fileCount":10,"integrity":"sha512-/E5e3Km9BsI/GK9XQZlkGhiNOGxaDAW5plQscGKVNUqo6H0+DynJLE8pi6ibIFQVRf+2TDAFEC5H2PYgyoWcGw==","signatures":[{"sig":"MEQCICmXZhjsVrmhAqDkedT2zS2MR8bj3LDkEPwMwpChuPwNAiAc4bls3o8ZPHg5JzCUSQ7U6XvKs/kpsBulciB0GDIa5A==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":24770,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdqLjNCRA9TVsSAnZWagAARrAP/iVYM4zrECWLfQjvbM0e\nEbHbX/8m/PrFrNtpX0yvbX2qooeMPHwED0qfEz/b8FhYnA/ARXIOQpWfygV4\nKd3ZtGArUxUF4GBnihW1RsK5yOrA7co2SkVPgtduXKad5wP1Vk0SVRlgE+0i\nS8Oy9AYdr7if1M3mcmLeCHHGET3E1Sfq6VmUyw/HKgqIzOORKQItcazHlkWp\nnI0H7xgzcbkkdD3mj/fgjMAG+g3w9awf3s5giCEkhdzSUy7jRcZvLQyb69JR\nl0L9JhYlJ7rxPZMf4dvNVkIkvX+Zk5rXMZB56qXA2hnunUNFQq0ATlwqfIF9\niI/XhzFsZs4lyZJsQOWVxJ+wJqSdBf5psqKXhsAev34O+epSp/3QMknfdpy5\nve5sFxN452RR3yKQ8oZaxrKTpK0nb74H3s12eDXfLqzQrkH1I0Z0yv55yenw\nRBd5M7lWr552bEdnxLoik4kBfxSIo+Mh1u80jaBH01B1RYU7iiwDUTQvf/UI\nRdlDpT2Ku7lFCSKdqjBG/vzzjZNk991cBdhTT6U6Y1Kn3TfpwWXI3WQu4xAI\n9PsuPXEyzB/q7dVEOzXoVJrfzfpcainYlOMowxHynMKa4q52f4MNSAFO6WQ6\nPnbHraFK7p//VrJQ+bBIiAbyYX3bWgeogS3274ehofpHrrP2882ahZwY6liN\nKScE\r\n=HLTm\r\n-----END PGP SIGNATURE-----\r\n"},"engines":{"node":"8.* || >= 10.*"},"gitHead":"d397ed8e99663e716b89c9985e7a9a38b5144ced","scripts":{"test":"ember test","build":"ember build","start":"ember serve","lint:js":"eslint .","lint:hbs":"ember-template-lint .","test:all":"ember try:each"},"_npmUser":{"name":"pzuraq","email":"me@pzuraq.com"},"repository":"","_npmVersion":"6.10.3","description":"The default blueprint for ember-cli addons.","directories":{"doc":"doc","test":"tests"},"ember-addon":{"configPath":"tests/dummy/config"},"_nodeVersion":"12.10.0","dependencies":{"ember-cli-babel":"^7.11.1","ember-modifier-manager-polyfill":"^1.2.0"},"_hasShrinkwrap":false,"devDependencies":{"ember-cli":"~3.13.1","ember-try":"^1.2.1","loader.js":"^4.7.0","qunit-dom":"^0.9.0","ember-qunit":"^4.5.1","babel-eslint":"^10.0.3","ember-source":"~3.13.0","ember-cli-sri":"^2.1.1","ember-resolver":"^5.3.0","ember-cli-eslint":"^5.1.0","ember-cli-uglify":"^3.0.0","broccoli-asset-rev":"^3.0.0","ember-cli-htmlbars":"^4.0.0","eslint-plugin-node":"^10.0.0","eslint-plugin-ember":"^7.1.0","ember-cli-template-lint":"^1.0.0-beta.3","ember-load-initializers":"^2.1.0","@ember/optional-features":"^1.0.0","ember-source-channel-url":"^2.0.1","ember-decorators-polyfill":"^1.0.6","ember-cli-dependency-checker":"^3.1.0","ember-cli-inject-live-reload":"^2.0.1","ember-maybe-import-regenerator":"^0.1.6","ember-export-application-global":"^2.0.0","ember-disable-prototype-extensions":"^1.1.3"},"_npmOperationalInternal":{"tmp":"tmp/ember-modifier_1.0.0_1571338444419_0.31924331638141834","host":"s3://npm-registry-packages"}},"1.0.1":{"name":"ember-modifier","version":"1.0.1","keywords":["ember-addon"],"author":"","license":"MIT","_id":"ember-modifier@1.0.1","maintainers":[{"name":"pzuraq","email":"me@pzuraq.com"}],"homepage":"https://github.com/ember-modifier/ember-modifier#readme","bugs":{"url":"https://github.com/ember-modifier/ember-modifier/issues"},"dist":{"shasum":"1143fc8f7c18c344c81a87232a7858a9a960428b","tarball":"https://registry.npmjs.org/ember-modifier/-/ember-modifier-1.0.1.tgz","fileCount":10,"integrity":"sha512-gaomI3YPu1vbaJF1x1IOGCgmZrlpdQ218OPQOZDfJ0ITni6M5QFYouy/k1ZrZzt/4gGGUH1JerAoHcCt/r+89Q==","signatures":[{"sig":"MEUCIQD72Bmfvy/6l0TVuiD8iQqQ7/yHhtlXRPMbCC2DvgM61wIgKNhCAWxJDKSv/DNVbwbrvsmR4+A33QEBnTtdWw0Sf4A=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":24812,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdqLkUCRA9TVsSAnZWagAA/f0P/3L7WVKe04MeC7wWCQNS\nvPl7vrLhGXQPu2kWOFcOQzDEvceuxJfbdGmL6459Evp+l+QvZfxVt7Q1e2Gd\nR4cXafOE5uXbqeotm/ERSBYNlEMB6ABnHflb+bypYG24eJFdSPGeqrzcyi3a\nFBj1x/MzLgxZnCZ4+Vkhs/lOhNYDD4qgu4bjm+VJmflFp5zUmYTKDbbJe6xV\nRtLVKfJdYIot/mwXWtdYyz53//mXx7KWUOPbPPWqaT4ieUUoXTVDvbIumdOb\nOT0D8JATTd2CmKhs3R/2zqZqykOPFmtcVGxRcsrBS0UVUPQWDrtZqABvp3v6\n/khL2/1PkogQr1b8oH5H0XbB/utj6YQf4uzWeFi5g5kyl+svz6Kk8/8dpOKR\nHB0zhNQ+JILehXyCcY1rpYnVvuqIANG4wkfMfAAWotL6phbyI4H9dNZlPn6U\nfJtRSx6pNaxFNtmeiU+p/ws/6upAPFyIpaq7TB7NRUxkWfG3b0SKN1jX6D2F\nVGawlDY6+VxVpab/+OQTnTGa9l6mTST5yOC82rz0FvS828Hh1UONBLZ7gRrr\ny73S/LnhpmNtC86izh7SsbOdwuOm52lzjvq2+ny5R5X4LQkNqzS2v/6ijWDa\nO9h2dGl8d2nINUur2w0WM6nUx4FYdoTUl0sJcDQXYCrsUn/zgmQMSMbLxH/N\nq0XU\r\n=AWwU\r\n-----END PGP SIGNATURE-----\r\n"},"engines":{"node":"8.* || >= 10.*"},"gitHead":"467edeba26300114ceaebf7f277f3c7ab91a7a37","scripts":{"test":"ember test","build":"ember build","start":"ember serve","lint:js":"eslint .","lint:hbs":"ember-template-lint .","test:all":"ember try:each"},"_npmUser":{"name":"pzuraq","email":"me@pzuraq.com"},"repository":{"url":"git+https://github.com/ember-modifier/ember-modifier.git","type":"git"},"_npmVersion":"6.10.3","description":"A library for writing Ember modifiers","directories":{"doc":"doc","test":"tests"},"ember-addon":{"configPath":"tests/dummy/config"},"_nodeVersion":"12.10.0","dependencies":{"ember-cli-babel":"^7.11.1","ember-modifier-manager-polyfill":"^1.2.0"},"_hasShrinkwrap":false,"devDependencies":{"ember-cli":"~3.13.1","ember-try":"^1.2.1","loader.js":"^4.7.0","qunit-dom":"^0.9.0","ember-qunit":"^4.5.1","babel-eslint":"^10.0.3","ember-source":"~3.13.0","ember-cli-sri":"^2.1.1","ember-resolver":"^5.3.0","ember-cli-eslint":"^5.1.0","ember-cli-uglify":"^3.0.0","broccoli-asset-rev":"^3.0.0","ember-cli-htmlbars":"^4.0.0","eslint-plugin-node":"^10.0.0","eslint-plugin-ember":"^7.1.0","ember-cli-template-lint":"^1.0.0-beta.3","ember-load-initializers":"^2.1.0","@ember/optional-features":"^1.0.0","ember-source-channel-url":"^2.0.1","ember-decorators-polyfill":"^1.0.6","ember-cli-dependency-checker":"^3.1.0","ember-cli-inject-live-reload":"^2.0.1","ember-maybe-import-regenerator":"^0.1.6","ember-export-application-global":"^2.0.0","ember-disable-prototype-extensions":"^1.1.3"},"_npmOperationalInternal":{"tmp":"tmp/ember-modifier_1.0.1_1571338515843_0.09879607805133728","host":"s3://npm-registry-packages"}},"1.0.2":{"name":"ember-modifier","version":"1.0.2","keywords":["ember-addon"],"author":"","license":"MIT","_id":"ember-modifier@1.0.2","maintainers":[{"name":"pzuraq","email":"me@pzuraq.com"}],"homepage":"https://github.com/ember-modifier/ember-modifier#readme","bugs":{"url":"https://github.com/ember-modifier/ember-modifier/issues"},"dist":{"shasum":"475ca6d0a5b47cde8077903328ad1ec99e562be8","tarball":"https://registry.npmjs.org/ember-modifier/-/ember-modifier-1.0.2.tgz","fileCount":19,"integrity":"sha512-YyZ6etJpeMTcrtNJvP+NmyJ+uA2DsYAIg4Mxg9ndYPbe6oXnNTnYQbvF7VIIUuY0Z7zfZ0CwCukFVQESBlJ6Eg==","signatures":[{"sig":"MEQCIBCNcJcMMSgbKq/1CClg7JKyN3xxsEsv0NT2ioZx/L9XAiArq1zzqVoVwReNjBLWw1qkUMPZaS7WE42hK0BZlsgHbg==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":31259,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdu1nsCRA9TVsSAnZWagAAH3QP/j785mxbiNIoJTezAJwm\nv3Pw+wK+e6+cRb8G2MXepuWQlBVFNGeZY8BgNZKvvRxPAfYgEXk85rdA5YSu\n8kVHzQTGFlSZ4Xp/7y7tJvzCxPTNOIByYLK3m0uuHy8PZDYF1ZR9vZcf5UIb\nhyeEnPxKAGhd7XhU3LNAPn+uiwKsax+attsMA/A0dQFh6RSnKzr0W4UZc9Es\no3A3SN1Wfp7CYen9YhAUQAEqy9fvyzDyGdM9S/XYATu3nSOIksl7MEVvSI4I\nwbByvKEk5BmrA5SPbsr8jf7xUCwzrfsr9B/sTzJuFxZtlfDuP6QoY0emM8Lm\nhLfvNr2H7Ubzy+Kgg5AfhDwCU2UgPEbNHFzmqvIsCQ0B2u82BIbdS18uvvPC\nY9TLjBTxNEtRCX5uT43kdgXgSHmKFhyGnnICiKzpvNVrMdSNzzURF/WgA32r\nj5b7Qzs7aggmsB/6dxnluI1N4Syrr2uJL/Gt6Jh9l+wB16l2xkpuS495UcSs\n7tqjIQ7TN5MQYUAm0p8yZ+SVVWMpSBR782TYxjAaGBa/xbPWjbdkl94o1f17\nPSgdb4NxVp0lmjh6y7zEAGPqo8gah8cQ2eg+AN3hp1Pu8bFIPdGCjHaV8poo\nRsmgMv/MgSoUo7c+Snv2NVzRiNQxFBrytfy+IhsA0rZl70EZDCuXGxs8J+Xo\nYg6k\r\n=8L5L\r\n-----END PGP SIGNATURE-----\r\n"},"engines":{"node":"8.* || >= 10.*"},"gitHead":"b59b5e519944306b3f16858105e7a71917dd322c","scripts":{"test":"ember test","build":"ember build","start":"ember serve","lint:js":"eslint .","lint:hbs":"ember-template-lint .","test:all":"ember try:each"},"_npmUser":{"name":"pzuraq","email":"me@pzuraq.com"},"repository":{"url":"git+https://github.com/ember-modifier/ember-modifier.git","type":"git"},"_npmVersion":"6.10.3","description":"A library for writing Ember modifiers","directories":{"doc":"doc","test":"tests"},"ember-addon":{"configPath":"tests/dummy/config"},"_nodeVersion":"12.10.0","dependencies":{"ember-cli-babel":"^7.11.1","ember-cli-string-utils":"^1.1.0","ember-cli-is-package-missing":"^1.0.0","ember-cli-normalize-entity-name":"^1.0.0","ember-modifier-manager-polyfill":"^1.2.0"},"_hasShrinkwrap":false,"devDependencies":{"ember-cli":"~3.13.1","ember-try":"^1.2.1","loader.js":"^4.7.0","qunit-dom":"^0.9.0","ember-qunit":"^4.5.1","babel-eslint":"^10.0.3","ember-source":"~3.13.0","ember-cli-sri":"^2.1.1","ember-resolver":"^5.3.0","ember-cli-eslint":"^5.1.0","ember-cli-uglify":"^3.0.0","broccoli-asset-rev":"^3.0.0","ember-cli-htmlbars":"^4.0.0","eslint-plugin-node":"^10.0.0","eslint-plugin-ember":"^7.1.0","ember-cli-template-lint":"^1.0.0-beta.3","ember-load-initializers":"^2.1.0","@ember/optional-features":"^1.0.0","ember-source-channel-url":"^2.0.1","ember-decorators-polyfill":"^1.0.6","ember-cli-dependency-checker":"^3.1.0","ember-cli-inject-live-reload":"^2.0.1","ember-maybe-import-regenerator":"^0.1.6","ember-export-application-global":"^2.0.0","ember-disable-prototype-extensions":"^1.1.3"},"_npmOperationalInternal":{"tmp":"tmp/ember-modifier_1.0.2_1572559339790_0.6518892445599866","host":"s3://npm-registry-packages"}},"1.0.3":{"name":"ember-modifier","version":"1.0.3","keywords":["ember-addon"],"author":"","license":"MIT","_id":"ember-modifier@1.0.3","maintainers":[{"name":"pzuraq","email":"me@pzuraq.com"}],"homepage":"https://github.com/ember-modifier/ember-modifier#readme","bugs":{"url":"https://github.com/ember-modifier/ember-modifier/issues"},"dist":{"shasum":"ab18250666aad17c0d9170feb178e954148eb4ed","tarball":"https://registry.npmjs.org/ember-modifier/-/ember-modifier-1.0.3.tgz","fileCount":20,"integrity":"sha512-vWuFyvdkULUyasvEXxe5lcfuPZV/Uqe+b0IQ1yU+TY1RSJnFdVUu/CVHT8Bu4HUJInqzAihwPMTwty7fypzi5Q==","signatures":[{"sig":"MEQCIGDjsSm/CDDKlfixZRAhv3DI4+5uKKLiaTwTX0Q0/vslAiB43WjWFhLWaPDFWEkZd1Fsiscw/3OB9dj98QBP9KY/2A==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":31846,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeKgz2CRA9TVsSAnZWagAA/D4P/iDQdAcUHxO1qDTnKqmK\nUMuGS7jQOia/VSsuhtPDiHt7Yero8DVbcO4DnxbDjtnX22WH7w4sLmLw+jTT\n7+WPFEAloEoAcKGhnnhaIz6iSWO80J1EBMgmdoqPDSYr8czfJHON49Daz8xa\nUycOn+Z+F8OZsOp0BQAYXbUK5zjWKBWUg4GjCxdA5tSV07ksTbo7IlitXx9z\n3IVUskFDaFqSoLWJQj1hVGHJcSxdxmTvOLgKcli3esZdpsrTIwcq22kmXAMh\nfInmIIE0zy8Ihk3QE8ha+x+kOTUk1SCGDyOsrq4kS2BCJyn6uW/vUeaorwv+\n+BiXo1l6+dv21e/2y73vBsphzAZ0VP6ld2mIV0ZoIB93+8a9KBJt3+gj037j\nt/r9prZ5xp3YpLnqhW2Y6iGhslyoA2GVbRCAGjC4RXCmamptp/yNcPe1jIwk\nvF9kv/OWQ0xiZfWj0Mg1B7qHccIkGnhbxdf8bStlbSEB1tZ0VfeK8moq/oyf\n0zZdCFLLb3O3OzWuBZVQSnQ89PNWbKwTcDOzKrp9ptGRNoikyYySqyWaXJRM\nPzQDRbW27sjoEjLjKv0NZBKG5CXjB1FPuw3/lPhbmvFoeGK9dTGmpDHMCX4S\nE3LU0oqzuQBxJoQZStKsbVzRy+F4oExPy9fYD9hHr1hLGkBjfjzSp8INM6X4\nOCjr\r\n=sRVR\r\n-----END PGP SIGNATURE-----\r\n"},"engines":{"node":"8.* || >= 10.*"},"gitHead":"be784cc9bd78b6223a7c6ce812f9788846100b29","scripts":{"test":"ember test","build":"ember build","start":"ember serve","lint:js":"eslint .","lint:hbs":"ember-template-lint .","test:all":"ember try:each"},"_npmUser":{"name":"pzuraq","email":"me@pzuraq.com"},"repository":{"url":"git+https://github.com/ember-modifier/ember-modifier.git","type":"git"},"_npmVersion":"6.10.3","description":"A library for writing Ember modifiers","directories":{"doc":"doc","test":"tests"},"ember-addon":{"configPath":"tests/dummy/config"},"_nodeVersion":"12.10.0","dependencies":{"ember-cli-babel":"^7.11.1","ember-cli-string-utils":"^1.1.0","ember-cli-is-package-missing":"^1.0.0","ember-cli-normalize-entity-name":"^1.0.0","ember-modifier-manager-polyfill":"^1.2.0"},"_hasShrinkwrap":false,"devDependencies":{"ember-cli":"~3.13.1","ember-try":"^1.2.1","loader.js":"^4.7.0","qunit-dom":"^0.9.0","ember-qunit":"^4.5.1","babel-eslint":"^10.0.3","ember-source":"~3.13.0","ember-cli-sri":"^2.1.1","ember-resolver":"^5.3.0","ember-cli-eslint":"^5.1.0","ember-cli-uglify":"^3.0.0","broccoli-asset-rev":"^3.0.0","ember-cli-htmlbars":"^4.0.0","eslint-plugin-node":"^10.0.0","eslint-plugin-ember":"^7.1.0","ember-cli-template-lint":"^1.0.0-beta.3","ember-load-initializers":"^2.1.0","@ember/optional-features":"^1.0.0","ember-source-channel-url":"^2.0.1","ember-decorators-polyfill":"^1.0.6","ember-cli-dependency-checker":"^3.1.0","ember-cli-inject-live-reload":"^2.0.1","ember-maybe-import-regenerator":"^0.1.6","ember-export-application-global":"^2.0.0","ember-disable-prototype-extensions":"^1.1.3"},"_npmOperationalInternal":{"tmp":"tmp/ember-modifier_1.0.3_1579814134185_0.9025497828674374","host":"s3://npm-registry-packages"}},"1.0.4":{"name":"ember-modifier","version":"1.0.4","keywords":["ember-addon"],"author":"","license":"MIT","_id":"ember-modifier@1.0.4","maintainers":[{"name":"pzuraq","email":"me@pzuraq.com"},{"name":"rwjblue","email":"me@rwjblue.com"}],"homepage":"https://github.com/ember-modifier/ember-modifier#readme","bugs":{"url":"https://github.com/ember-modifier/ember-modifier/issues"},"dist":{"shasum":"9ad1e16f83d4d315daf7a0b828fe96cbd67925f5","tarball":"https://registry.npmjs.org/ember-modifier/-/ember-modifier-1.0.4.tgz","fileCount":21,"integrity":"sha512-AkflmmMn1iLEwCNvavdtoyuZGLPtujypAyNW/0+aN9uCGqOEtpIxaLqz5E9SII8OVGuFTHJ8a6GwpLNGfuauYA==","signatures":[{"sig":"MEYCIQDdY0BdIlvSyhxnoaVnqiWuGis+gLq57wJF/3m01s2EAAIhAPlZ9E+Nv6ueTqROXa7QDkRXNHtLE3bxpWhga1fE7lRC","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":33449,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfI1DiCRA9TVsSAnZWagAAeswP/1O7byCbNiMjH+Blusm3\nueT7Fwnj/F0JaVZQhie9o78Wmm8PbLcS0HtPS4KTU09Cqa8VVHPtT52k1p3A\nT/IC00E8+OWQTvd2uQc4X4S9ZgjbeSVdd4NjzDTB6FkwXY0BPMNH+i8mR7OY\ndXigjz+P+xKEDnPG706PgZZgAaHqDCKadJrz7gZVCJodI9PTQHruN8NceYAh\nK4frsG9Jmu5kuHFbF3FqiUrImUTLLhQIExLtbKNgRMrOn6Y9Z30AGn38T41Y\nCacbWBfx5TKObzZmdJI6Wz/9Nwl7jUxBWNZWVe1gLElqeLxt6wGPtgIQP0FU\nHbiSgYjLpkdvBMVx4dMurf7SGS4reRZO5YCSTlD2WRqJlYxAJw7Y0b8UPCTX\nkSQuaXK+IFabdeTvAs4ejkt2eSrbFpjl29RIh+XDEAkwxgpxPFA1bWmBXF6E\nF2S8LFlS0LRp37aojQKB0xs+lu4+nBlPU3hiE+689lE1YFNoCX/f54BdK5mg\nJWLJqNG9B93iVazX5P8mvE2BjK2XQM3FkdpUp4FnEQDs1KmwATkfGnjR6adv\n6xmQ98yNaeO53KWtCvxfXL1T7gk7pswxr3rEEGsj3kCAy3Cy9GW4rfNGtJ8G\nYYc3dTdMnIA3wIQ8bh/K+3THIpgjwMbKVupxj4zN7Y/SbkA3CS2uJxjecGdZ\nYXPi\r\n=iFVo\r\n-----END PGP SIGNATURE-----\r\n"},"engines":{"node":"8.* || >= 10.*"},"gitHead":"dee7f3a32a79d17f3095422aa34d42261c49b6de","scripts":{"test":"ember test","build":"ember build","start":"ember serve","lint:js":"eslint .","lint:hbs":"ember-template-lint .","test:all":"ember try:each"},"_npmUser":{"name":"rwjblue","email":"me@rwjblue.com"},"repository":{"url":"git+https://github.com/ember-modifier/ember-modifier.git","type":"git"},"_npmVersion":"6.14.6","description":"A library for writing Ember modifiers","directories":{"doc":"doc","test":"tests"},"ember-addon":{"configPath":"tests/dummy/config"},"_nodeVersion":"14.6.0","dependencies":{"ember-cli-babel":"^7.11.1","ember-cli-string-utils":"^1.1.0","ember-compatibility-helpers":"^1.2.1","ember-cli-is-package-missing":"^1.0.0","ember-cli-normalize-entity-name":"^1.0.0","ember-modifier-manager-polyfill":"^1.2.0"},"_hasShrinkwrap":false,"devDependencies":{"ember-cli":"~3.13.1","ember-try":"^1.2.1","loader.js":"^4.7.0","qunit-dom":"^0.9.0","ember-qunit":"^4.5.1","babel-eslint":"^10.0.3","ember-source":"~3.13.0","ember-cli-sri":"^2.1.1","ember-resolver":"^5.3.0","ember-cli-eslint":"^5.1.0","ember-cli-uglify":"^3.0.0","broccoli-asset-rev":"^3.0.0","ember-cli-htmlbars":"^4.0.0","eslint-plugin-node":"^10.0.0","eslint-plugin-ember":"^7.1.0","ember-cli-template-lint":"^1.0.0-beta.3","ember-load-initializers":"^2.1.0","@ember/optional-features":"^1.0.0","ember-source-channel-url":"^2.0.1","ember-decorators-polyfill":"^1.0.6","ember-cli-dependency-checker":"^3.1.0","ember-cli-inject-live-reload":"^2.0.1","ember-maybe-import-regenerator":"^0.1.6","ember-export-application-global":"^2.0.0","ember-disable-prototype-extensions":"^1.1.3"},"_npmOperationalInternal":{"tmp":"tmp/ember-modifier_1.0.4_1596149985834_0.28196654252762565","host":"s3://npm-registry-packages"}},"2.0.0":{"name":"ember-modifier","version":"2.0.0","keywords":["ember-addon"],"author":"","license":"MIT","_id":"ember-modifier@2.0.0","maintainers":[{"name":"pzuraq","email":"me@pzuraq.com"},{"name":"rwjblue","email":"me@rwjblue.com"}],"homepage":"https://github.com/ember-modifier/ember-modifier#readme","bugs":{"url":"https://github.com/ember-modifier/ember-modifier/issues"},"dist":{"shasum":"097c9a76f96adecf7639ac5426957c3d05a269df","tarball":"https://registry.npmjs.org/ember-modifier/-/ember-modifier-2.0.0.tgz","fileCount":53,"integrity":"sha512-k5MYZ3XQBMDjUDC8Rhw/B/kQBLY3TUnmqVPwiXZC3Xe6ptSuMvzAAAuv82YEF5jtalHJsEudtS9ZD5Sx/prZKA==","signatures":[{"sig":"MEQCIAqLPg5xyyRKpO24cZUtubsmBUy/IclQ9PEkpAWUtfBNAiBtNlWeoBQ6t4Cl2ZU3/IcaCKzhXvQkSWPO2IVdaSKIqQ==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":74915,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfI1SvCRA9TVsSAnZWagAAtQkP/R01OzJUWe1l0Xe0uh9S\nUvT1UzBBOmD8sdOX0bmvzVdysfKTglRMN3/6fq/V3l3OPUmMk/qOuSXggwWj\n6f4tMEJdLvsao1zTU5XvLneSc28q7kZPZ1HF9MEjJQSSH5IIECr/4U1aGXgW\nh4n85zPqS5Z40lkzDqSN+uFCkaMuqqfOfld0ga2i1bzDIdnDrnWkFlTmsfpg\nUJw5Esw9CsCVrC76hj8p3EMinFiKWnbJrU49ebPplp6ARhMKISaqVy2CcSYl\nimT9uPcTsWefZkKjpx1+uBzfhe0mlUc35C0dSp2ceusl27xkMT9hXX7/Gv9N\n/gM4Mzug0P8hIwZfzJw/MyfKkiy057x6fK7V7pMLniZqbQkOXi2oyhmjRNJo\nDGpELe6Mc4aDd15DgGlFWdJ/WphOHnUCoDP/taYKjckZ7aRLGxOjSPViDkhi\nE1blZgCKoY0D+144RDV4zkgr9Y8rOA6jskh5UOvdCQNGPfjj/3VfyFCtwwc6\nhq3m0xkLPbADc1GlukJiQJwhe333I8TB7Z8K5T+u6dTqoFlpLaro17Dtowgd\nptht3Qp5MufsDd6Hau4vRqlIHglF3I4ebuwwz/j7M4DwHAzLuWMPpve58U6o\nYXbfuCG2uZpZxamUJklPnUOt4BElldEKT2Wob0L5NyjEG11MpNnSGH/c1hgU\n7UMz\r\n=n8MS\r\n-----END PGP SIGNATURE-----\r\n"},"ember":{"edition":"octane"},"types":"index.d.ts","engines":{"node":"10.* || >= 12"},"gitHead":"d12187680cfaea3e9b5743bc76742980d92eea25","scripts":{"lint":"npm-run-all --aggregate-output --continue-on-error --parallel 'lint:!(fix)'","test":"npm-run-all lint:* test:*","build":"ember build --environment=production","clean":"npm-run-all --aggregate-output --parallel clean:*","start":"ember serve","lint:js":"eslint .","lint:ts":"tsc --noEmit","pretest":"npm-run-all prepublish:*","clean:ts":"ember ts:clean","lint:fix":"npm-run-all --aggregate-output --continue-on-error --parallel lint:*:fix","lint:hbs":"ember-template-lint .","posttest":"npm run clean","test:ember":"ember test","test:types":"ember try:each --config-path=./config/ember-try-typescript.js","lint:js:fix":"eslint . --fix","postpublish":"npm run clean","lint:hbs:fix":"ember-template-lint . --fix","prepublishOnly":"npm-run-all prepublish:*","clean:downlevel":"rimraf ./ts3.4","prepublish:types":"ember ts:precompile","prepublish:downlevel":"downlevel-dts . ts3.4","test:ember-compatibility":"ember try:each"},"_npmUser":{"name":"rwjblue","email":"me@rwjblue.com"},"prettier":{"singleQuote":true},"release-it":{"git":{"tagName":"v${version}"},"github":{"release":true,"tokenRef":"GITHUB_AUTH"},"plugins":{"release-it-lerna-changelog":{"infile":"CHANGELOG.md","launchEditor":true}}},"repository":{"url":"git+https://github.com/ember-modifier/ember-modifier.git","type":"git"},"_npmVersion":"6.14.6","description":"A library for writing Ember modifiers","directories":{"doc":"doc","test":"tests"},"ember-addon":{"configPath":"tests/dummy/config"},"_nodeVersion":"14.6.0","dependencies":{"ember-cli-babel":"^7.21.0","ember-cli-typescript":"^3.1.3","ember-cli-string-utils":"^1.1.0","ember-destroyable-polyfill":"^1.0.0","ember-cli-normalize-entity-name":"^1.0.0","ember-modifier-manager-polyfill":"^1.2.0"},"publishConfig":{"registry":"https://registry.npmjs.org"},"typesVersions":{"<3.9":{"*":"ts3.4/*"}},"_hasShrinkwrap":false,"devDependencies":{"eslint":"^7.5.0","rimraf":"^3.0.2","prettier":"^2.0.5","ember-cli":"~3.20.0","ember-try":"^1.4.0","loader.js":"^4.7.0","qunit-dom":"^1.2.0","release-it":"^13.6.0","typescript":"^3.9.3","@types/rsvp":"^4.0.3","ember-qunit":"^4.6.0","expect-type":"^0.7.3","npm-run-all":"^4.1.5","@types/ember":"^3.1.2","@types/qunit":"^2.9.1","babel-eslint":"^10.1.0","ember-source":"~3.20.2","downlevel-dts":"^0.4.0","ember-cli-sri":"^2.1.1","ember-resolver":"^8.0.0","ember-cli-uglify":"^3.0.0","@glimmer/tracking":"^1.0.0","ember-auto-import":"^1.6.0","@glimmer/component":"^1.0.1","@types/ember-qunit":"^3.4.8","broccoli-asset-rev":"^3.0.0","ember-cli-htmlbars":"^5.2.0","eslint-plugin-node":"^11.1.0","ember-template-lint":"^2.9.1","eslint-plugin-ember":"^8.9.1","eslint-config-prettier":"^6.11.0","eslint-plugin-prettier":"^3.1.3","ember-load-initializers":"^2.1.1","@ember/optional-features":"^1.3.0","ember-source-channel-url":"^2.0.1","@typescript-eslint/parser":"^2.34.0","ember-decorators-polyfill":"^1.0.6","@types/ember__test-helpers":"^0.7.10","release-it-lerna-changelog":"^2.3.0","ember-cli-dependency-checker":"^3.2.0","ember-cli-inject-live-reload":"^2.0.2","ember-maybe-import-regenerator":"^0.1.6","ember-cli-typescript-blueprints":"^3.0.0","ember-export-application-global":"^2.0.1","@typescript-eslint/eslint-plugin":"^2.34.0","ember-disable-prototype-extensions":"^1.1.3"},"_npmOperationalInternal":{"tmp":"tmp/ember-modifier_2.0.0_1596150959085_0.8386976736002671","host":"s3://npm-registry-packages"}},"2.0.1":{"name":"ember-modifier","version":"2.0.1","keywords":["ember-addon"],"author":"","license":"MIT","_id":"ember-modifier@2.0.1","maintainers":[{"name":"pzuraq","email":"me@pzuraq.com"},{"name":"rwjblue","email":"me@rwjblue.com"}],"homepage":"https://github.com/ember-modifier/ember-modifier#readme","bugs":{"url":"https://github.com/ember-modifier/ember-modifier/issues"},"dist":{"shasum":"026543864880bb3ce96c832493394ab35ebd764d","tarball":"https://registry.npmjs.org/ember-modifier/-/ember-modifier-2.0.1.tgz","fileCount":53,"integrity":"sha512-PgoY/RIfPjXRo4H1TjOxSLY/knpSdW5VnCPLQxgQMnz3j6SrAOjrW4EdFfWH85px/xNKADBpfReb26GnLQKyKQ==","signatures":[{"sig":"MEQCIBf+5UTBiXz9+idO6Vv3Y61k6BdS6HFbZa2UjuofuDTeAiAO2c0uTiJBWxN7wXWRMBk22sQauNkBD4NpNIpbjrVc6A==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":75206,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfJF7oCRA9TVsSAnZWagAAID0P/jOuJR1it53KYSn5MOrv\n625fQ8PGAeez74QrkRUosCkkLq4E1WWLIO5FXIQWkkynbzzk7CJ9KwSPi0Ad\nMugvSSdHGurf22nEYjx+30bijz36jLt3Xyg1/Da5Qo+R8Ox3Z7/3dbCyr4ae\nP7r0781K53ACOr3bsJxZkubHCHrnFfy7LslxDMru3gw/AIwdTgjC3MLu3vdV\nR3SywVUjIIp3hDkNCXwGCjP0ErX1dw0irL5F5SDVcXPUe/FkrWeZ9AeyBQHD\nobiibc7HEG7iwn2oDi8rfkixHZUUxMJWCp+67C07LKjFp7qPjvfjXOyBh88T\n51N6p3KGV33F26I6Bf7FomAvNf24vhYhQz+8FBsNj14lhtS4rN9mj5NSC8ld\nMCs7/0syfz9UsxD8awHaZa/8nDAssNBRPz0rIKTVmFAyWEA/ka9Q1y0rAg3r\nrFpWQM7bh1cZhPtrJK/AwC022i8lDQPxSOFK2Lb8eVhjERooDbOgelmdu3Dc\nHzCRWhiqbFnwye9MggnYbab3GOjoHHyV7+wqYy5+BAxImVnZa2GN+t1Ea3Wy\nIivMVV9vBaHLsHxqPTg8z8YUwFJAbv7JkaHJsz5gnVTIyrD7TgVJ18PF0X7Q\n5+vK1i7mpWemBegOoKZnQ2N4NY6OQieDPlPwI0bUE5uB+Uc8BfcYgP9B73gH\nDgWJ\r\n=bRfX\r\n-----END PGP SIGNATURE-----\r\n"},"ember":{"edition":"octane"},"types":"index.d.ts","engines":{"node":"10.* || >= 12"},"gitHead":"2b0831e1dba45ed5d273c74ee98561a986fab037","scripts":{"lint":"npm-run-all --aggregate-output --continue-on-error --parallel 'lint:!(fix)'","test":"npm-run-all lint:* test:*","build":"ember build --environment=production","clean":"npm-run-all --aggregate-output --parallel clean:*","start":"ember serve","lint:js":"eslint .","lint:ts":"tsc --noEmit","pretest":"npm-run-all prepublish:*","clean:ts":"ember ts:clean","lint:fix":"npm-run-all --aggregate-output --continue-on-error --parallel lint:*:fix","lint:hbs":"ember-template-lint .","posttest":"npm run clean","test:ember":"ember test","test:types":"ember try:each --config-path=./config/ember-try-typescript.js","lint:js:fix":"eslint . --fix","postpublish":"npm run clean","lint:hbs:fix":"ember-template-lint . --fix","prepublishOnly":"npm-run-all prepublish:*","clean:downlevel":"rimraf ./ts3.4","prepublish:types":"ember ts:precompile","prepublish:downlevel":"downlevel-dts . ts3.4","test:ember-compatibility":"ember try:each"},"_npmUser":{"name":"rwjblue","email":"me@rwjblue.com"},"prettier":{"singleQuote":true},"release-it":{"git":{"tagName":"v${version}"},"github":{"release":true,"tokenRef":"GITHUB_AUTH"},"plugins":{"release-it-lerna-changelog":{"infile":"CHANGELOG.md","launchEditor":true}}},"repository":{"url":"git+https://github.com/ember-modifier/ember-modifier.git","type":"git"},"_npmVersion":"6.14.6","description":"A library for writing Ember modifiers","directories":{"doc":"doc","test":"tests"},"ember-addon":{"configPath":"tests/dummy/config"},"_nodeVersion":"14.6.0","dependencies":{"ember-cli-babel":"^7.22.1","ember-cli-typescript":"^3.1.3","ember-cli-string-utils":"^1.1.0","ember-destroyable-polyfill":"^1.0.2","ember-cli-normalize-entity-name":"^1.0.0","ember-modifier-manager-polyfill":"^1.2.0"},"publishConfig":{"registry":"https://registry.npmjs.org"},"typesVersions":{"<3.9":{"*":"ts3.4/*"}},"_hasShrinkwrap":false,"devDependencies":{"eslint":"^7.5.0","rimraf":"^3.0.2","prettier":"^2.0.5","ember-cli":"~3.20.0","ember-try":"^1.4.0","loader.js":"^4.7.0","qunit-dom":"^1.2.0","release-it":"^13.6.0","typescript":"^3.9.3","@types/rsvp":"^4.0.3","ember-qunit":"^4.6.0","expect-type":"^0.7.3","npm-run-all":"^4.1.5","@types/ember":"^3.1.2","@types/qunit":"^2.9.1","babel-eslint":"^10.1.0","ember-source":"~3.20.2","downlevel-dts":"^0.4.0","ember-cli-sri":"^2.1.1","ember-resolver":"^8.0.0","ember-cli-uglify":"^3.0.0","@glimmer/tracking":"^1.0.0","ember-auto-import":"^1.6.0","@glimmer/component":"^1.0.1","@types/ember-qunit":"^3.4.8","broccoli-asset-rev":"^3.0.0","ember-cli-htmlbars":"^5.2.0","eslint-plugin-node":"^11.1.0","ember-template-lint":"^2.9.1","eslint-plugin-ember":"^8.9.1","eslint-config-prettier":"^6.11.0","eslint-plugin-prettier":"^3.1.3","ember-load-initializers":"^2.1.1","@ember/optional-features":"^1.3.0","ember-source-channel-url":"^2.0.1","@typescript-eslint/parser":"^2.34.0","ember-decorators-polyfill":"^1.0.6","@types/ember__test-helpers":"^0.7.10","release-it-lerna-changelog":"^2.3.0","ember-cli-dependency-checker":"^3.2.0","ember-cli-inject-live-reload":"^2.0.2","ember-maybe-import-regenerator":"^0.1.6","ember-cli-typescript-blueprints":"^3.0.0","ember-export-application-global":"^2.0.1","@typescript-eslint/eslint-plugin":"^2.34.0","ember-disable-prototype-extensions":"^1.1.3"},"_npmOperationalInternal":{"tmp":"tmp/ember-modifier_2.0.1_1596219112232_0.9121701723122233","host":"s3://npm-registry-packages"}},"2.1.0":{"name":"ember-modifier","version":"2.1.0","keywords":["ember-addon"],"author":"","license":"MIT","_id":"ember-modifier@2.1.0","maintainers":[{"name":"pzuraq","email":"me@pzuraq.com"},{"name":"rwjblue","email":"me@rwjblue.com"}],"homepage":"https://github.com/ember-modifier/ember-modifier#readme","bugs":{"url":"https://github.com/ember-modifier/ember-modifier/issues"},"dist":{"shasum":"99d85995caad8789220dc3208fb5ded45647dccf","tarball":"https://registry.npmjs.org/ember-modifier/-/ember-modifier-2.1.0.tgz","fileCount":54,"integrity":"sha512-tVmRcEloYg8AZHheEMhBhzX64r7n6AFLXG69L/jiHePvQzet9mjV18YiIPStQf+fdjTAO25S6yzNPDP3zQjWtQ==","signatures":[{"sig":"MEYCIQCNF3STn8NfmW4xLLioeiALvd538nUsP8FK4IEPfw+KOgIhAKCZRoDGZ6l/j/0qRjQtaR8Eq9ts3kAkISB/EfI9APeS","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":649244,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfJ0lrCRA9TVsSAnZWagAAlKYP/3MGZ1ND3zPWHNcjSX00\nRHNK+2vyOcmvTNZBjRn5it+bwwuyLo2sQWa/3VfRxjyhEX7/TNgG0J0ZYSS2\nj2q/I165928lDrYhTHEjYjbikBPPVZ1s61whNRiEcm2jqfDz3gUKVBR8a2hO\nul0PIooe3kvT67yeXFiSUeU1b4YpmU5zgQNClV2Nw5jWFsJQb0NJjPLRcLsF\nxeqHQkMzZavqc9w4SdGWkqoIFtlfm9XlE4/ywm7kS8VqNfBBj9208Qxxh89e\nhCVFNcGMRAthLjEIdwKqSvD2NlXohI06QL1Pb68vZ6726XyhZWuh/sgkVRHM\nwov4VBO3tBgBJF83EpO2M66crEGK0SoDafVlQ4Ij6k1mmbg8MbDqN7kcWEj7\n++L9E8W4cl49eJ4OkXwd80y5XOiAuMVCKkXabxopibkv6xwJEQ4O7HGgOJL/\nv/6To7Zc80n7GckR5z1n8grFJC0kR/RyvHFFFMmVCYkIzGfrMLqxanbcGlEH\noccfdfqG4++RJ97nF8PCAPWfm5t6FP/u1gI/YEUfWrfy75L3zefkoz5E7Haf\n75tmZAxFRt0D55+9D1GeCpF4MMco80BnallpsWWyqldMT/Ixs+L4zYeqkP5l\nlelKE7X7z5xTiNbkwWDPobaAYlq/ofdCPAgOT68F02vh5eYxg6+rex3jDpLU\nZY6T\r\n=kjbj\r\n-----END PGP SIGNATURE-----\r\n"},"ember":{"edition":"octane"},"types":"index.d.ts","engines":{"node":"10.* || >= 12"},"gitHead":"ebc96945631685ff26a5bc97c3d45e0c6f22be97","scripts":{"lint":"npm-run-all --aggregate-output --continue-on-error --parallel 'lint:!(fix)'","test":"npm-run-all lint:* test:*","build":"ember build --environment=production","clean":"npm-run-all --aggregate-output --parallel clean:*","start":"ember serve","lint:js":"eslint .","lint:ts":"tsc --noEmit","pretest":"npm-run-all prepublish:*","clean:ts":"ember ts:clean","lint:fix":"npm-run-all --aggregate-output --continue-on-error --parallel lint:*:fix","lint:hbs":"ember-template-lint .","posttest":"npm run clean","test:ember":"ember test","test:types":"ember try:each --config-path=./config/ember-try-typescript.js","lint:js:fix":"eslint . --fix","postpublish":"npm run clean","lint:hbs:fix":"ember-template-lint . --fix","prepublishOnly":"npm-run-all prepublish:*","clean:downlevel":"rimraf ./ts3.4","prepublish:types":"ember ts:precompile","prepublish:downlevel":"downlevel-dts . ts3.4","test:ember-compatibility":"ember try:each"},"_npmUser":{"name":"rwjblue","email":"me@rwjblue.com"},"prettier":{"singleQuote":true},"release-it":{"git":{"tagName":"v${version}"},"github":{"release":true,"tokenRef":"GITHUB_AUTH"},"plugins":{"release-it-lerna-changelog":{"infile":"CHANGELOG.md","launchEditor":true}}},"repository":{"url":"git+https://github.com/ember-modifier/ember-modifier.git","type":"git"},"_npmVersion":"6.14.6","description":"A library for writing Ember modifiers","directories":{"doc":"doc","test":"tests"},"ember-addon":{"configPath":"tests/dummy/config"},"_nodeVersion":"14.6.0","dependencies":{"ember-cli-babel":"^7.22.1","ember-cli-typescript":"^3.1.3","ember-cli-string-utils":"^1.1.0","ember-destroyable-polyfill":"^2.0.1","ember-cli-normalize-entity-name":"^1.0.0","ember-modifier-manager-polyfill":"^1.2.0"},"publishConfig":{"registry":"https://registry.npmjs.org"},"typesVersions":{"<3.9":{"*":"ts3.4/*"}},"_hasShrinkwrap":false,"devDependencies":{"eslint":"^7.5.0","rimraf":"^3.0.2","prettier":"^2.0.5","ember-cli":"~3.20.0","ember-try":"^1.4.0","loader.js":"^4.7.0","qunit-dom":"^1.2.0","release-it":"^13.6.0","typescript":"^3.9.3","@types/rsvp":"^4.0.3","ember-qunit":"^4.6.0","expect-type":"^0.7.3","npm-run-all":"^4.1.5","@types/ember":"^3.1.2","@types/qunit":"^2.9.1","babel-eslint":"^10.1.0","ember-source":"~3.20.2","downlevel-dts":"^0.4.0","ember-cli-sri":"^2.1.1","ember-resolver":"^8.0.0","ember-cli-uglify":"^3.0.0","@glimmer/tracking":"^1.0.0","ember-auto-import":"^1.6.0","@glimmer/component":"^1.0.1","@types/ember-qunit":"^3.4.8","broccoli-asset-rev":"^3.0.0","ember-cli-htmlbars":"^5.2.0","eslint-plugin-node":"^11.1.0","ember-template-lint":"^2.9.1","eslint-plugin-ember":"^8.9.1","eslint-config-prettier":"^6.11.0","eslint-plugin-prettier":"^3.1.3","ember-load-initializers":"^2.1.1","@ember/optional-features":"^1.3.0","ember-source-channel-url":"^2.0.1","@typescript-eslint/parser":"^2.34.0","ember-decorators-polyfill":"^1.0.6","@types/ember__test-helpers":"^0.7.10","release-it-lerna-changelog":"^2.3.0","ember-cli-dependency-checker":"^3.2.0","ember-cli-inject-live-reload":"^2.0.2","ember-maybe-import-regenerator":"^0.1.6","ember-cli-typescript-blueprints":"^3.0.0","ember-export-application-global":"^2.0.1","@typescript-eslint/eslint-plugin":"^2.34.0","ember-disable-prototype-extensions":"^1.1.3"},"_npmOperationalInternal":{"tmp":"tmp/ember-modifier_2.1.0_1596410218918_0.20773370463128593","host":"s3://npm-registry-packages"}},"1.0.5":{"name":"ember-modifier","version":"1.0.5","keywords":["ember-addon"],"author":"","license":"MIT","_id":"ember-modifier@1.0.5","maintainers":[{"name":"rwjblue","email":"me@rwjblue.com"},{"name":"pzuraq","email":"me@pzuraq.com"}],"homepage":"https://github.com/ember-modifier/ember-modifier#readme","bugs":{"url":"https://github.com/ember-modifier/ember-modifier/issues"},"dist":{"shasum":"b0152a4b81b72debbff48ff75f0ff0959afa1df2","tarball":"https://registry.npmjs.org/ember-modifier/-/ember-modifier-1.0.5.tgz","fileCount":22,"integrity":"sha512-bOqWyp6bEa8i/2c2Gay6b9CVB7CAROg2UuX+C3eDMOdGUEzrsBZ5ENul5zF4RHey2RuAqZ/qvQpY/85R2fQ94A==","signatures":[{"sig":"MEYCIQD2YA1HnHkuEQzb9NGm52e9bgd2pt1v4BD4ADjANlXtXQIhAOjkCOPQhBs5/x6FROAbBY0JUw8nZjmzDzEeTogXVtxR","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":607636,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfYQ3vCRA9TVsSAnZWagAA0F0P/36O4la4sJiz6c/FkNkO\nlfvyIRkBwBx1EFrIzkMKQICb0QuIyfzi/KQXqLjZ+EZaRYuQoU3wXhBi3g3n\nr1vsrdn8v2Xrsv8gSuppvoL2aWM9kS4g4l73VUOWLmwa1Wf3D3/MzOXi6cG3\nakRwJ2OKSsBT+z+0W6e17J1R0mosNmdw9EWrh7N5qRGPqfEEbUxTK1m7ml6z\n0OxzAx7DbSUn2nzoywSJs53AXN99XKiAYSG1hdseaQyS+Kti/ZBFE0zXDVOO\nFWeu9PMEByn62+SXGoj1Z6Rjwxh68HzCmttpPI4pwUD3i8OIAq71tJbAMub/\nOx46em2WwbvtprM7jJuX+ugSIlNS2QAJXFRCFEilC8G17glR8iXP0UWCqKX3\nSA3fqm9J6IbY9yY3nHbP+5XM8tG7eZf/sHxZjtJ4yziFYOHyKieJXb3tDpyK\nwUT4hMAukl1TBgrL+l5QPmzoP/qo3TgZ6gZ8MqKXdqlSg4Qx1KGZNhMkOMoJ\nCHrUhhV8Cn9EXejhmP6HsEQWuIQgCZbqVKoQSsQXr9/dWCyrb6HLosrC+PlI\nwA9SX04KrgIiaJbnB+lP5VbC8R66VS33aiytzhRlW0KcddEjXOljXXRbob+R\njbx7w8SSq9p5N0oWdkqb6pD+aXB+Z2gJopX3qhu4jcd3ALanMtDBC+6WiGjc\nBfIZ\r\n=Vleq\r\n-----END PGP SIGNATURE-----\r\n"},"readme":"ember-modifier\n==============================================================================\n\n> This addon is the next iteration of both\n> [ember-class-based-modifier](https://github.com/sukima/ember-class-based-modifier)\n> and [ember-functional-modifiers](https://github.com/spencer516/ember-functional-modifiers).\n> Some breaking changes to the APIs have been made, for a list of difference,\n> see the [API differences](#api-differences) section.\n\n> Huge thanks to @sukima and @spencer516 for their contributions! This project\n> is based on their work, and wouldn't have been possible without them.\n\n\nThis addon provides an API for authoring [element modifiers](https://blog.emberjs.com/2019/03/06/coming-soon-in-ember-octane-part-4.html)\nin Ember. It mirrors Ember's [helper](https://octane-guides-preview.emberjs.com/release/templates/writing-helpers)\nAPI, with a form for writing simple _functional_ modifiers, and form for writing\nmore complicated _class_ modifiers.\n\nCompatibility\n------------------------------------------------------------------------------\n\n* Ember.js v3.4 or above\n* Ember CLI v2.13 or above\n* Node.js v8 or above\n\n\nInstallation\n------------------------------------------------------------------------------\n\n```\nember install ember-modifier\n```\n\n\nUsage\n------------------------------------------------------------------------------\n\nThis addon does not provide any modifiers out of the box; instead, this library\nallows you to write your own. There are two ways to write modifiers:\n\n1. Functional modifiers\n2. Class-based modifiers\n\n```js\nimport Modifier, { modifier } from 'ember-modifier';\n```\n\nThese are analogous to Ember's Helper APIs, `helper` and `Helper`.\n\n### Functional Modifiers\n\n`modifier` is an API for writing simple modifiers. For instance, you could\nimplement Ember's built-in `{{on}}` modifier like so with `modifier`:\n\n```js\n// /app/modifiers/on.js\nimport { modifier } from 'ember-modifier';\n\nexport default modifier((element, [eventName, handler]) => {\n  element.addEventListener(eventName, handler);\n\n  return () => {\n    element.removeEventListener(eventName, handler);\n  }\n});\n```\n\nFunctional modifiers consist of a function that receives:\n\n1. The `element`\n2. An array of positional arguments\n3. An object of named arguments\n\n```js\nmodifier((element, positional, named) => { /* */ });\n```\n\nThis function runs the first time when the element the modifier was applied to\nis inserted into the DOM, and it _autotracks_ while running. Any values that it\naccesses will be tracked, including the arguments it receives, and if any of\nthem changes, the function will run again.\n\nThe modifier can also optionally return a _destructor_. The destructor function\nwill be run just before the next update, and when the element is being removed\nentirely. It should generally clean up the changes that the modifier made in the\nfirst place.\n\n#### Generating a Functional Modifier\n\nTo create a modifier (and a corresponding integration test), run:\n\n```\nember g modifier scroll-top\n```\n\n#### Example without Cleanup\n\nFor example, if you wanted to implement your own `scrollTop` modifier (similar\nto [this](https://github.com/emberjs/ember-render-modifiers#example-scrolling-an-element-to-a-position)),\nyou may do something like this:\n\n```js\n// app/modifiers/scroll-top.js\nimport { modifier } from 'ember-modifier';\n\nexport default modifier((element, [scrollPosition]) => {\n  element.scrollTop = scrollPosition;\n})\n```\n```hbs\n<div class=\"scroll-container\" {{scroll-top @scrollPosition}}>\n  {{yield}}\n</div>\n```\n\n#### Example with Cleanup\n\nIf the functionality you add in the modifier needs to be torn down when the\nelement is removed, you can return a function for the teardown method.\n\nFor example, if you wanted to have your elements dance randomly on the page\nusing `setInterval`, but you wanted to make sure that was canceled when the\nelement was removed, you could do:\n\n```js\n// app/modifiers/move-randomly.js\nimport { modifier } from 'ember-modifier';\n\nconst { random, round } = Math;\n\nexport default makeFunctionalModifier(element => {\n  const id = setInterval(() => {\n    const top = round(random() * 500);\n    const left = round(random() * 500);\n    element.style.transform = `translate(${left}px, ${top}px)`;\n  }, 1000);\n\n  return () => clearInterval(id);\n});\n\n```\n```hbs\n<button {{move-randomly}}>\n  {{yield}}\n</button>\n```\n\n### Class Modifiers\n\nSometimes you may need to do something more complicated than what can be handled\nby functional modifiers. For instance:\n\n1. You may need to inject services and access them\n2. You may need fine-grained control of updates, either for performance or\n   convenience reasons, and don't want to teardown the state of your modifier\n   every time only to set it up again.\n3. You may need to store some local state within your modifier.\n\nIn these cases, you can use a _class modifier_ instead. Here's how you would\nimplement the `{{on}}` modifier with a class:\n\n```js\nimport Modifier from 'ember-modifier';\n\nexport default class OnModifier extends Modifier {\n  event = null;\n  handler = null;\n\n  // methods for reuse\n  addEventListener() {\n    let [event, handler] = this.args.positional;\n\n    // Store the current event and handler for when we need to remove them\n    this.event = event;\n    this.handler = handler;\n\n    this.element.addEventListener(event, handler);\n  }\n\n  removeEventListener() {\n    let [event, handler] = this;\n\n    if (event && handler) {\n      this.element.removeEventListener(event, handler);\n\n      this.event = null;\n      this.handler = null;\n    }\n  }\n\n  // lifecycle hooks\n  didReceiveArguments() {\n    this.removeEventListener();\n    this.addEventListener();\n  }\n\n  willRemove() {\n    this.removeEventListener();\n  }\n}\n```\n\nThis may seem more complicated than the functional version, but that complexity\ncomes along with much more _control_.\n\nAs with functional modifiers, the lifecycle hooks of class modifiers are\n_tracked_. When they run, they any values they access will be added to the\nmodifier, and the modifier will update if any of those values change.\n\n#### Generating a Class Modifier\n\nTo create a modifier (and a corresponding integration test), run:\n\n```\nember g modifier scroll-top --class\n```\n\n#### Example without Cleanup\n\nFor example, let's say you want to implement your own `{{scroll-position}}`\nmodifier (similar to [this](https://github.com/emberjs/ember-render-modifiers#example-scrolling-an-element-to-a-position)).\n\nThis modifier can be attached to any element and accepts a single positional\nargument. When the element is inserted, and whenever the argument is updated, it\nwill set the element's `scrollTop` property to the value of its argument.\n\n```js\n// app/modifiers/scroll-position.js\n\nimport Modifier from 'ember-modifier';\n\nexport default class ScrollPositionModifier extends Modifier {\n  get scrollPosition() {\n    // get the first positional argument passed to the modifier\n    //\n    // {{scoll-position @someNumber relative=@someBoolean}}\n    //                  ~~~~~~~~~~~\n    //\n    return this.args.positional[0];\n  }\n\n  get isRelative() {\n    // get the named argument \"relative\" passed to the modifier\n    //\n    // {{scoll-position @someNumber relative=@someBoolean}}\n    //                                       ~~~~~~~~~~~~\n    //\n    return this.args.named.relative\n  }\n\n  didReceiveArguments() {\n    if(this.isRelative) {\n      this.element.scrollTop += this.scrollPosition;\n    } else {\n      this.element.scrollTop = this.scrollPosition;\n    }\n  }\n}\n```\n\nUsage:\n\n```handlebars\n{{!-- app/components/scroll-container.hbs --}}\n\n<div\n  class=\"scroll-container\"\n  style=\"width: 300px; heigh: 300px; overflow-y: scroll\"\n  {{scroll-position this.scrollPosition relative=false}}\n>\n  {{yield this.scrollToTop}}\n</div>\n```\n\n```js\n// app/components/scroll-container.js\n\nimport Component from '@glimmer/component';\nimport { tracked } from '@glimmer/tracking';\nimport { action } from '@ember/object';\n\nexport default class ScrollContainerComponent extends Component {\n  @tracked scrollPosition = 0;\n\n  @action scrollToTop() {\n    this.scrollPosition = 0;\n  }\n}\n```\n\n```handlebars\n{{!-- app/templates/application.hbs --}}\n\n<ScrollContainer as |scroll|>\n  A lot of content...\n\n  <button {{on \"click\" scroll}}>Back To Top</button>\n</ScrollContainer>\n```\n\n#### Example with Cleanup\n\nIf the functionality you add in the modifier needs to be torn down when the\nmodifier is removed, you can use the `willRemove` hook.\n\nFor example, if you want to have your elements dance randomly on the page using\n`setInterval`, but you wanted to make sure that was canceled when the modifier\nwas removed, you could do this:\n\n```js\n// app/modifiers/move-randomly.js\n\nimport { action } from '@ember/object';\nimport Modifier from 'ember-modifier';\n\nconst { random, round } = Math;\nconst DEFAULT_DELAY = 1000;\n\nexport default class MoveRandomlyModifier extends Modifier {\n  setIntervalId = null;\n\n  get delay() {\n    // get the named argument \"delay\" passed to the modifier\n    //\n    // {{move-randomly delay=@someNumber}}\n    //                       ~~~~~~~~~~~\n    //\n    return this.args.named.delay || DEFAULT_DELAY;\n  }\n\n  @action moveElement() {\n    let top = round(random() * 500);\n    let left = round(random() * 500);\n    this.element.style.transform = `translate(${left}px, ${top}px)`;\n  }\n\n  didReceiveArguments() {\n    if (this.setIntervalId !== null) {\n      clearInterval(this.setIntervalId);\n    }\n\n    this.setIntervalId = setInterval(this.moveElement, this.delay);\n  }\n\n  willRemove() {\n    clearInterval(this.setIntervalId);\n    this.setIntervalId = null;\n  }\n}\n```\n\nUsage:\n\n```hbs\n<div {{move-randomly}}>\n  Catch me if you can!\n</div>\n```\n\n#### Example with Service Injection\n\nYou can also use services into your modifier, just like any other class in Ember.\n\nFor example, suppose you wanted to track click events with `ember-metrics`:\n\n```js\n// app/modifiers/track-click.js\n\nimport { action } from '@ember/object';\nimport { inject as service } from '@ember/service';\nimport Modifier from 'ember-modifier';\n\nexport default class TrackClickModifier extends Modifier {\n  @service metrics;\n\n  get eventName() {\n    // get the first positional argument passed to the modifier\n    //\n    // {{track-click \"like-button-click\" page=\"some page\" title=\"some title\"}}\n    //               ~~~~~~~~~~~~~~~~~~~\n    //\n    return this.args.positional[0];\n  }\n\n  get options() {\n    // get the named arguments passed to the modifier\n    //\n    // {{track-click \"like-button-click\" page=\"some page\" title=\"some title\"}}\n    //                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    //\n    return this.args.named;\n  }\n\n  @action onClick() {\n    this.metrics.trackEvent(this.eventName, this.options);\n  }\n\n  didInstall() {\n    this.element.addEventListener('click', this.onClick, true);\n  }\n\n  willRemove() {\n    this.element.removeEventListener('click', this.onClick, true);\n  }\n}\n```\n\nUsage:\n\n```hbs\n<button {{track-click \"like-button-click\" page=\"some page\" title=\"some title\"}}>\n  Click Me!\n</button>\n```\n\n#### API\n\n<dl>\n<dt><code>element</code></dt>\n<dd>The DOM element the modifier is attached to.</dd>\n<dt><code>args</code>: <code>{ positional: Array, named: Object }</code></dt>\n<dd>The arguments passed to the modifier. <code>args.positional</code> is an array of positional arguments, and <code>args.named</code> is an object containing the named arguments.</dd>\n<dt><code>isDestroying</code></dt>\n<dd><code>true</code> if the modifier is in the process of being destroyed, or has already been destroyed.</dd>\n<dt><code>isDestroyed</code></dt>\n<dd><code>true</code> if the modifier has already been destroyed.</dd>\n<dt><code>constructor(owner, args)</code>\n<dd>Constructor for the modifier. You must call <code>super(...arguments)</code> before performing other initialization. The <code>element</code> is not yet available at this point (i.e. its value is <code>null</code> during construction).</dd>\n<dt><code>didReceiveArguments()</code></dt>\n<dd>Called when the modifier is installed <strong>and</strong> anytime the arguments are updated.</dd>\n<dt><code>didUpdateArguments()</code></dt>\n<dd>Called anytime the arguments are updated but <strong>not</strong> on the initial install. Called before <code>didReceiveArguments</code>.</dd>\n<dt><code>didInstall()</code></dt>\n<dd>Called when the modifier is installed on the DOM element. Called after <code>didReceiveArguments</code>.</dd>\n<dt><code>willRemove()</code></dt>\n<dd>Called when the DOM element is about to be destroyed; use for removing event listeners on the element and other similar clean-up tasks.</dd>\n<dt><code>willDestroy()</code></dt>\n<dd>Called when the modifier itself is about to be destroyed; use for teardown code. Called after <code>willRemove</code>. The <code>element</code> is no longer available at this point (i.e. its value is <code>null</code> during teardown).</dd>\n</dl>\n\n##### Lifecycle Summary\n\n<table>\n<thead><tr>\n  <th></th>\n  <th>Install</th>\n  <th>Update</th>\n  <th>Remove</th>\n  <th><code>this.element</code></th>\n  <th><code>this.args</code></th>\n</tr></thead>\n<tbody>\n  <tr>\n    <th><code>constructor()</code></th>\n    <td>(1)</td>\n    <td>❌</td>\n    <td>❌</td>\n    <td>❌</td>\n    <td>after <code>super()</code></td>\n  </tr>\n\n  <tr>\n    <th><code>didUpdateArguments()</code></th>\n    <td>❌</td>\n    <td>(1)</td>\n    <td>❌</td>\n    <td>✔️</td>\n    <td>✔️</td>\n  </tr>\n\n  <tr>\n    <th><code>didReceiveArguments()</code></th>\n    <td>(2)</td>\n    <td>(2)</td>\n    <td>❌</td>\n    <td>✔️</td>\n    <td>✔️</td>\n  </tr>\n\n  <tr>\n    <th><code>didInstall()</code></th>\n    <td>(3)</td>\n    <td>❌</td>\n    <td>❌</td>\n    <td>✔️</td>\n    <td>✔️</td>\n  </tr>\n\n\n\n  <tr>\n    <th><code>willRemove()</code></th>\n    <td>❌</td>\n    <td>❌</td>\n    <td>(1)</td>\n    <td>✔️</td>\n    <td>✔️</td>\n  </tr>\n\n  <tr>\n    <th><code>willDestroy()</code></th>\n    <td>❌</td>\n    <td>❌</td>\n    <td>(2)</td>\n    <td>❌</td>\n    <td>✔️</td>\n  </tr>\n</tbody>\n</table>\n\n* (#) Indicates the order of invocation for the lifecycle event.\n* ❌  Indicates that the method is not invoked for a given lifecycle / property is not available.\n* ✔️  Indicates that the property is available during the invocation of the given method.\n\n## TypeScript\n\nUsing the class API, you can use `.ts` instead of `.js` and it'll just work, as long as you do runtime checks to narrow the types of your args when you access them.\n\n```ts\n// app/modifiers/scroll-position.ts\nimport Modifier from 'ember-modifier';\n\nexport default class ScrollPositionModifier extends Modifier {\n  // ...\n}\n```\n\nBut to avoid writing runtime checks, you can extend `Modifier` with your own args, similar to the way you would define your args for a Glimmer Component.\n\n```ts\n// app/modifiers/scroll-position.ts\nimport Modifier from 'ember-modifier';\n\ninterface ScrollPositionModifierArgs {\n  positional: [number],\n  named: {\n    relative: boolean\n  }\n}\n\nexport default class ScrollPositionModifier extends Modifier<ScrollPositionModifierArgs> {\n  get scrollPosition(): number {\n    // get the first positional argument passed to the modifier\n    //\n    // {{scoll-position @someNumber relative=@someBoolean}}\n    //                  ~~~~~~~~~~~\n    //\n    return this.args.positional[0];\n  }\n\n  get isRelative(): boolean {\n    // get the named argument \"relative\" passed to the modifier\n    //\n    // {{scoll-position @someNumber relative=@someBoolean}}\n    //                                       ~~~~~~~~~~~~\n    //\n    return this.args.named.relative\n  }\n\n  didReceiveArguments() {\n    if(this.isRelative) {\n      this.element.scrollTop += this.scrollPosition;\n    } else {\n      this.element.scrollTop = this.scrollPosition;\n    }\n  }\n}\n```\n\nSee [this pull request comment](https://github.com/sukima/ember-class-based-modifier/pull/5#discussion_r326687943) for a full discussion about using TypeScript with your Modifiers.\n\n## API Differences\n\n### API differences from [ember-functional-modifiers](https://github.com/spencer516/ember-functional-modifiers)\n\n* Renamed package to `ember-modifier`\n* Renamed `makeFunctionalModifier` to `modifier`, and to a named export instead of the default\n* Removed `isRemoving` flag from modifier destructors. In cases where fine-grained control over the lifecycle is needed, class modifiers should be used instead.\n* Removed service injection from functional modifiers. In cases where services are needed, class modifiers should be used instead.\n\n### API differences from [ember-class-based-modifier](https://github.com/sukima/ember-class-based-modifier)\n\n* Renamed package to `ember-modifier`\n* Removed classic API\n\n### API differences from [ember-oo-modifiers](https://github.com/sukima/ember-class-based-modifier/tree/maintenance/ember-oo-modifiers)\n\n* Renamed package to `ember-modifier`.\n* Removed classic API\n* No `Modifier.modifier()` function.\n* Arguments, both positional and named, are available on `this.args`.\n* Named arguments do not become properties on the modifier instance.\n* Arguments are not passed to life-cycle hooks.\n* Renamed `didInsertElement` to `didInstall` and `willDestroyElement` to `willRemove`. This is to emphasize that when the modifier is installed or removed, the underlying element may not be freshly inserted or about to go away. Therefore, it is important to perform clean-up work in the `willRemove` to reverse any modifications you made to the element.\n* Changed life-cycle hook order: `didReceiveArguments` fires before `didInstall`, and `didUpdateArguments` fires before `didReceiveArguments`, mirroring the classic component life-cycle hooks ordering.\n* Added `willDestroy`, `isDestroying` and `isDestroyed` with the same semantics as Ember objects and Glimmer components.\n\nContributing\n------------------------------------------------------------------------------\n\nSee the [Contributing](CONTRIBUTING.md) guide for details.\n\n\nLicense\n------------------------------------------------------------------------------\n\nThis project is licensed under the [MIT License](LICENSE.md).\n","engines":{"node":"8.* || >= 10.*"},"gitHead":"f59b7d3d2bc34971b2605e6db02d85972735f7b2","scripts":{"test":"ember test","build":"ember build","start":"ember serve","lint:js":"eslint .","lint:hbs":"ember-template-lint .","test:all":"ember try:each"},"_npmUser":{"name":"rwjblue","email":"me@rwjblue.com"},"repository":{"url":"git+https://github.com/ember-modifier/ember-modifier.git","type":"git"},"_npmVersion":"6.14.6","description":"A library for writing Ember modifiers","directories":{"doc":"doc","test":"tests"},"ember-addon":{"configPath":"tests/dummy/config"},"_nodeVersion":"14.6.0","dependencies":{"ember-cli-babel":"^7.11.1","ember-cli-string-utils":"^1.1.0","ember-compatibility-helpers":"^1.2.1","ember-cli-is-package-missing":"^1.0.0","ember-cli-normalize-entity-name":"^1.0.0","ember-modifier-manager-polyfill":"^1.2.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"ember-cli":"~3.13.1","ember-try":"^1.2.1","loader.js":"^4.7.0","qunit-dom":"^0.9.0","ember-qunit":"^4.5.1","babel-eslint":"^10.0.3","ember-source":"~3.13.0","ember-cli-sri":"^2.1.1","ember-resolver":"^5.3.0","ember-cli-eslint":"^5.1.0","ember-cli-uglify":"^3.0.0","broccoli-asset-rev":"^3.0.0","ember-cli-htmlbars":"^4.0.0","eslint-plugin-node":"^10.0.0","eslint-plugin-ember":"^7.1.0","ember-cli-template-lint":"^1.0.0-beta.3","ember-load-initializers":"^2.1.0","@ember/optional-features":"^1.0.0","ember-source-channel-url":"^2.0.1","ember-decorators-polyfill":"^1.0.6","ember-cli-dependency-checker":"^3.1.0","ember-cli-inject-live-reload":"^2.0.1","ember-maybe-import-regenerator":"^0.1.6","ember-export-application-global":"^2.0.0","ember-disable-prototype-extensions":"^1.1.3"},"_npmOperationalInternal":{"tmp":"tmp/ember-modifier_1.0.5_1600196079086_0.27487025636756823","host":"s3://npm-registry-packages"}},"2.1.1":{"name":"ember-modifier","version":"2.1.1","keywords":["ember-addon"],"author":"","license":"MIT","_id":"ember-modifier@2.1.1","maintainers":[{"name":"rwjblue","email":"me@rwjblue.com"},{"name":"pzuraq","email":"me@pzuraq.com"}],"homepage":"https://github.com/ember-modifier/ember-modifier#readme","bugs":{"url":"https://github.com/ember-modifier/ember-modifier/issues"},"dist":{"shasum":"aa3a12e2d6cf1622f774f3f1eab4880982a43fa9","tarball":"https://registry.npmjs.org/ember-modifier/-/ember-modifier-2.1.1.tgz","fileCount":54,"integrity":"sha512-g9mcpFWgw5lgNU40YNf0USNWqoGTJ+EqjDQKjm7556gaRNDeGnLylFKqx9O3opwLHEt6ZODnRDy9U0S5YEMREg==","signatures":[{"sig":"MEYCIQC2zSWkTkkrKmD2pXQRDjhIpLGESrm7sj+I4hjZw/maqAIhAIRLCc14FwlZgWhwwrueU0fS1e6hWc2LHtYm1YE0H/XH","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":649774,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfY9e4CRA9TVsSAnZWagAAdvIP/jFy+QzVSo+rwgseDhqY\nyTAltuEtSVZJMUWFYyBYNYPSAjau9d1nn96U81lZ8KyMfc+uZZQxW7UhlWyU\n8xWkcoVryqKsqC9rYeL0WlmVTJR/4JCIaMUyKtTCzP+c2Ff7VGKGkJxdBTxU\nUjbP4zRyON1+qbMEDlxB6uLYRTtfTXCmtLGSRrzsfLna1CrNScVVdKl+louI\nzwj4HCYcazassawWhawemtnmMkQbzW3XER4CEIcotu48YK4mMHS1/5NgqUhX\nXNQPfuD5rRwzVeuNq08gqQdB6wtwDngh6Li70KyCYJ25h1yoi6/Db47K3ZRv\n+cNlTCOaCHto6d0+YCYz/5cgvMtCZXKLzAht+IDtC5g4lcyrH/RokrnMwSNO\n29gOhYqIhWsKg6+wJADxFXApartgs3vSD7vyTinrGRKBlWre4yMgO34Pq0NI\nBkJgbS2tnF/Kb4YRPSZ9N/nFepsh9fOOAqz26wq/FBCHooxxYDorVmvo/KbZ\n1KDaUbjjD0A8D6XgkUzOLr605l1Vqm0bV0gyCtBONrEJBe9L2sZDFgo9AamR\nP550bW+deyJnfcnz5rp+yy163c1Z5RgTEvwuRmtU3OMGue3DwIlxYuy+b6pb\nQ+KeSonXfCYUpsJroARdMDEXi+BUPq5fa020+zaJEyFfewsmL0qPP38W6faj\nt9rl\r\n=rLGz\r\n-----END PGP SIGNATURE-----\r\n"},"ember":{"edition":"octane"},"types":"index.d.ts","engines":{"node":"10.* || >= 12"},"gitHead":"a8d4da7914dc989bbaa3aad71991dc48da3e2dae","scripts":{"lint":"npm-run-all --aggregate-output --continue-on-error --parallel 'lint:!(fix)'","test":"npm-run-all lint:* test:*","build":"ember build --environment=production","clean":"npm-run-all --aggregate-output --parallel clean:*","start":"ember serve","lint:js":"eslint .","lint:ts":"tsc --noEmit","pretest":"npm-run-all prepublish:*","clean:ts":"ember ts:clean","lint:fix":"npm-run-all --aggregate-output --continue-on-error --parallel lint:*:fix","lint:hbs":"ember-template-lint .","posttest":"npm run clean","test:ember":"ember test","test:types":"ember try:each --config-path=./config/ember-try-typescript.js","lint:js:fix":"eslint . --fix","postpublish":"npm run clean","lint:hbs:fix":"ember-template-lint . --fix","prepublishOnly":"npm-run-all prepublish:*","clean:downlevel":"rimraf ./ts3.4","prepublish:types":"ember ts:precompile","prepublish:downlevel":"downlevel-dts . ts3.4","test:ember-compatibility":"ember try:each"},"_npmUser":{"name":"rwjblue","email":"me@rwjblue.com"},"prettier":{"singleQuote":true},"release-it":{"git":{"tagName":"v${version}"},"github":{"release":true,"tokenRef":"GITHUB_AUTH"},"plugins":{"release-it-lerna-changelog":{"infile":"CHANGELOG.md","launchEditor":true}}},"repository":{"url":"git+https://github.com/ember-modifier/ember-modifier.git","type":"git"},"_npmVersion":"6.14.6","description":"A library for writing Ember modifiers","directories":{"doc":"doc","test":"tests"},"ember-addon":{"configPath":"tests/dummy/config"},"_nodeVersion":"14.6.0","dependencies":{"ember-cli-babel":"^7.22.1","ember-cli-typescript":"^3.1.3","ember-cli-string-utils":"^1.1.0","ember-destroyable-polyfill":"^2.0.2","ember-cli-normalize-entity-name":"^1.0.0","ember-modifier-manager-polyfill":"^1.2.0"},"publishConfig":{"registry":"https://registry.npmjs.org"},"typesVersions":{"<3.9":{"*":"ts3.4/*"}},"_hasShrinkwrap":false,"devDependencies":{"eslint":"^7.5.0","rimraf":"^3.0.2","prettier":"^2.0.5","ember-cli":"~3.20.0","ember-try":"^1.4.0","loader.js":"^4.7.0","qunit-dom":"^1.2.0","release-it":"^13.6.0","typescript":"^3.9.3","@types/rsvp":"^4.0.3","ember-qunit":"^4.6.0","expect-type":"^0.7.3","npm-run-all":"^4.1.5","@types/ember":"^3.1.2","@types/qunit":"^2.9.1","babel-eslint":"^10.1.0","ember-source":"~3.20.2","downlevel-dts":"^0.4.0","ember-cli-sri":"^2.1.1","ember-resolver":"^8.0.0","ember-cli-uglify":"^3.0.0","@glimmer/tracking":"^1.0.0","ember-auto-import":"^1.6.0","@glimmer/component":"^1.0.1","@types/ember-qunit":"^3.4.8","broccoli-asset-rev":"^3.0.0","ember-cli-htmlbars":"^5.2.0","eslint-plugin-node":"^11.1.0","ember-template-lint":"^2.9.1","eslint-plugin-ember":"^8.9.1","eslint-config-prettier":"^6.11.0","eslint-plugin-prettier":"^3.1.3","ember-load-initializers":"^2.1.1","@ember/optional-features":"^1.3.0","ember-source-channel-url":"^2.0.1","@typescript-eslint/parser":"^2.34.0","ember-decorators-polyfill":"^1.0.6","@types/ember__test-helpers":"^0.7.10","release-it-lerna-changelog":"^2.3.0","ember-cli-dependency-checker":"^3.2.0","ember-cli-inject-live-reload":"^2.0.2","ember-maybe-import-regenerator":"^0.1.6","ember-cli-typescript-blueprints":"^3.0.0","ember-export-application-global":"^2.0.1","@typescript-eslint/eslint-plugin":"^2.34.0","ember-disable-prototype-extensions":"^1.1.3"},"_npmOperationalInternal":{"tmp":"tmp/ember-modifier_2.1.1_1600378807519_0.24840955160302558","host":"s3://npm-registry-packages"}},"2.1.2":{"name":"ember-modifier","version":"2.1.2","keywords":["ember-addon"],"author":"","license":"MIT","_id":"ember-modifier@2.1.2","maintainers":[{"name":"rwjblue","email":"me@rwjblue.com"},{"name":"pzuraq","email":"opensource@pzuraq.com"}],"homepage":"https://github.com/ember-modifier/ember-modifier#readme","bugs":{"url":"https://github.com/ember-modifier/ember-modifier/issues"},"dist":{"shasum":"62d18faedf972dcd9d34f90d5321fbc943d139b1","tarball":"https://registry.npmjs.org/ember-modifier/-/ember-modifier-2.1.2.tgz","fileCount":58,"integrity":"sha512-3Lsu1fV1sIGa66HOW07RZc6EHISwKt5VA5AUnFss2HX6OTfpxTJ2qvPctt2Yt0XPQXJ4G6BQasr/F35CX7UGJA==","signatures":[{"sig":"MEUCIHufm2hkeqkkZZ2mV52Lc/2Ijl1rtVGzXklkReyoqzDWAiEAtfmTGZU+yO0FqzPVnpTKTB9kX3CEX2aR/fBBF+sFI5g=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":87549,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgsWmSCRA9TVsSAnZWagAAfAoP/jW4oKFrJSPWlKd3Ncp6\ns+HE+ktLKknOUU7bOtw/+iWQxav7hlY1XbiCI8ABCEbdQv0tijCL0R2y6fML\n+kBKzKDevfvPsznaiUrpfjJWSANbD7V3cU4Tc9IWacg4/K1q67+YgrcIPVGY\nJoCmdOCqaIHK2QZbFoFNMAjyRE2jMUS/GiFz5VThifLOeHDSrHQ/HCiNSW3g\nycRjWgV/AhUNjcNxaJba+Q0c7PFNE0AmdkpweFxtKhaFMmwleO57rJoXGQNz\nsgD7k1VaKSpwSj8R35r64qXwbOv/GcgfdckzqrroNVp7H0OXja1mDoe8rLxf\nddj9tz6UYQHnqScaHpKKLOsZVCSv6WRD1Mnt1yuY8Gc3YrfKBmX9/fh/Y5wk\nZpSEo3uAPcvz2UoHCdYqoTughvHAn201c8AOM7DqOPkjg0NBW0eAzU4KLPXG\nPw4+kZNJ59sNsgcuMACrD+kvBT0yCx8kwTxx9Pwa4QseGHHwcUHCn/lqP3q9\n0cH3RuetWwzyrhnZaZNztrOm2tHElcKCK6eDmFlfm4bngqC4m2uZ8F7/06MW\nxDG31iZT0a6G6mPfwtarP5KpcIahxdKIW3DOPcitOjUYN7n7sZ1PY6dTKp7r\niFAgd5tHKSOzcNpVjEfxKd2HgWHRQcOQDQh9v08gnc4sTprcDxNoDvQ76ULT\n4Ycn\r\n=fj2e\r\n-----END PGP SIGNATURE-----\r\n"},"ember":{"edition":"octane"},"types":"index.d.ts","engines":{"node":"10.* || >= 12"},"gitHead":"d9668465a8f9d26657475431269faf797bcebd75","scripts":{"lint":"npm-run-all --aggregate-output --continue-on-error --parallel 'lint:!(fix)'","test":"npm-run-all lint:* test:*","build":"ember build --environment=production","clean":"npm-run-all --aggregate-output --parallel clean:*","start":"ember serve","lint:js":"eslint .","lint:ts":"tsc --noEmit","pretest":"npm-run-all prepublish:*","clean:ts":"ember ts:clean","lint:fix":"npm-run-all --aggregate-output --continue-on-error --parallel lint:*:fix","lint:hbs":"ember-template-lint .","posttest":"npm run clean","test:ember":"ember test","test:types":"ember try:each --config-path=./config/ember-try-typescript.js","lint:js:fix":"eslint . --fix","postpublish":"npm run clean","lint:hbs:fix":"ember-template-lint . --fix","prepublishOnly":"npm-run-all prepublish:*","clean:downlevel":"rimraf ./ts3.4","prepublish:types":"ember ts:precompile","prepublish:downlevel":"downlevel-dts . ts3.4","test:ember-compatibility":"ember try:each"},"_npmUser":{"name":"pzuraq","email":"opensource@pzuraq.com"},"prettier":{"singleQuote":true},"release-it":{"git":{"tagName":"v${version}"},"github":{"release":true,"tokenRef":"GITHUB_AUTH"},"plugins":{"release-it-lerna-changelog":{"infile":"CHANGELOG.md","launchEditor":true}}},"repository":{"url":"git+https://github.com/ember-modifier/ember-modifier.git","type":"git"},"_npmVersion":"6.14.10","description":"A library for writing Ember modifiers","directories":{"doc":"doc","test":"tests"},"ember-addon":{"configPath":"tests/dummy/config"},"_nodeVersion":"14.15.4","dependencies":{"ember-cli-babel":"^7.22.1","ember-cli-typescript":"^3.1.3","ember-cli-string-utils":"^1.1.0","ember-destroyable-polyfill":"^2.0.2","ember-compatibility-helpers":"^1.2.4","ember-cli-normalize-entity-name":"^1.0.0","ember-modifier-manager-polyfill":"^1.2.0"},"publishConfig":{"registry":"https://registry.npmjs.org"},"typesVersions":{"<3.9":{"*":"ts3.4/*"}},"_hasShrinkwrap":false,"devDependencies":{"eslint":"^7.5.0","rimraf":"^3.0.2","prettier":"^2.0.5","ember-cli":"~3.20.0","ember-try":"^1.4.0","loader.js":"^4.7.0","qunit-dom":"^1.2.0","release-it":"^13.6.0","typescript":"^3.9.3","@types/rsvp":"^4.0.3","ember-qunit":"^4.6.0","expect-type":"^0.7.3","npm-run-all":"^4.1.5","@types/ember":"^3.1.2","@types/qunit":"^2.9.1","babel-eslint":"^10.1.0","ember-source":"~3.22.0","downlevel-dts":"^0.4.0","ember-cli-sri":"^2.1.1","ember-resolver":"^8.0.0","ember-cli-uglify":"^3.0.0","@glimmer/tracking":"^1.0.0","ember-auto-import":"^1.6.0","@glimmer/component":"^1.0.1","@types/ember-qunit":"^3.4.8","broccoli-asset-rev":"^3.0.0","ember-cli-htmlbars":"^5.2.0","eslint-plugin-node":"^11.1.0","ember-template-lint":"^2.9.1","eslint-plugin-ember":"^8.9.1","eslint-config-prettier":"^6.11.0","eslint-plugin-prettier":"^3.1.3","ember-load-initializers":"^2.1.1","@ember/optional-features":"^1.3.0","ember-source-channel-url":"^2.0.1","@typescript-eslint/parser":"^2.34.0","ember-decorators-polyfill":"^1.0.6","@types/ember__test-helpers":"^0.7.10","release-it-lerna-changelog":"^2.3.0","ember-cli-dependency-checker":"^3.2.0","ember-cli-inject-live-reload":"^2.0.2","ember-maybe-import-regenerator":"^0.1.6","ember-cli-typescript-blueprints":"^3.0.0","ember-export-application-global":"^2.0.1","@typescript-eslint/eslint-plugin":"^2.34.0","ember-disable-prototype-extensions":"^1.1.3"},"_npmOperationalInternal":{"tmp":"tmp/ember-modifier_2.1.2_1622239633783_0.6866598468671967","host":"s3://npm-registry-packages"}},"3.0.0":{"name":"ember-modifier","version":"3.0.0","keywords":["ember-addon"],"author":"","license":"MIT","_id":"ember-modifier@3.0.0","maintainers":[{"name":"rwjblue","email":"me@rwjblue.com"},{"name":"chriskrycho","email":"chris@chriskrycho.com"},{"name":"pzuraq","email":"opensource@pzuraq.com"}],"homepage":"https://github.com/ember-modifier/ember-modifier#readme","bugs":{"url":"https://github.com/ember-modifier/ember-modifier/issues"},"dist":{"shasum":"74466d32e4ef9b80004915676cc3bfd6e3fd7a3d","tarball":"https://registry.npmjs.org/ember-modifier/-/ember-modifier-3.0.0.tgz","fileCount":34,"integrity":"sha512-ccXfMnjWhjEUCB5taeIPQmf0h1zPUIMbmsCV7W+JZ2BioPUZTLhE1WuHspmV0iEOiX3Fwx8jMOx6b74sFcKJ0g==","signatures":[{"sig":"MEYCIQDC24avUESGd/WWeb55NqqTU1/l7zY184M2ul8BGd6gGwIhAINfTP8UfStNdToXHhmjRpRabrZLIQLyWu8610HHg7hx","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":75727,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJh2pmYCRA9TVsSAnZWagAAc7IP/R9HnC00uOy7UHTWf3te\noIPGbMpba8bD1Nqtj6Eu5CRlGtzpGrU8ATyZfWjwhC7FsXCtPNGjlpeaUAFg\n9Tq2q1nbr5p7YHq6hEbyJp6IsQV/sr0YQzpSXoyrF6NZKjyyLLEG0uT0f10/\nyRNoqQshRR5SqASOMwHlXt+O5UXOln5KKGwTOLxsBOMPiwismoavp0VVbn8c\n6kyAOOO1GmRqT/N/9T26Wom6r4X2YkfHR7mmb6wMskXLMl6yGWSPUxB7dwi0\nTjpSNULeMIgWogQhKBBLV8b971Fj3FsiZyJn0ujUaRRhHD1u0sjZTdMmA44K\n0MrXshCBUC1XzCHGSErvlxiZ0crwoyYSrdSFUB1St9Abkd4olL39pcuVvTrm\nnBCohAo1OXxHybLdy09EhL2NvbbqJw5azb80dAJ27DrchMnfrZRivO9ehaG2\neZDMBiezn5mAo+vAbgrAWFnuQjbkI1qc9xVOzywRdTk4/s03urRwDyayt3Tb\n6082tTdaJVbw5jc3wiQRSswfHJUAYuSBSdLdGPLeyi3CTlP0+osBE4va5A7y\nTzNEOBWICPss43ciV7iw5Bx7tetgWHuY7kUtAH6cNQL6tQCjMl1vQJOh8W/W\nsfPAGx892suP4h9bxaeIMzt+lfOOOSvXZ6dVnOXYUuaDncK+t7IkQPL2soEZ\nuEdM\r\n=pUHJ\r\n-----END PGP SIGNATURE-----\r\n"},"ember":{"edition":"octane"},"types":"index.d.ts","engines":{"node":"12.* || >= 14"},"gitHead":"4cf06733fe83d154b3764d7702615d1c73e4f5b3","scripts":{"lint":"npm-run-all --aggregate-output --continue-on-error --parallel 'lint:!(fix)'","test":"npm-run-all test:*","build":"ember build --environment=production","clean":"ember ts:clean","start":"ember serve","lint:js":"eslint .","lint:ts":"tsc --noEmit","pretest":"npm run prepublishOnly","lint:fix":"npm-run-all --aggregate-output --continue-on-error --parallel lint:*:fix","lint:hbs":"ember-template-lint .","posttest":"npm run clean","test:ember":"ember test","test:types":"ember try:each --config-path=./config/ember-try-typescript.js","lint:js:fix":"eslint . --fix","postpublish":"npm run clean","lint:hbs:fix":"ember-template-lint . --fix","prepublishOnly":"ember ts:precompile","prepublish:types":"ember ts:precompile","test:ember-compatibility":"ember try:each"},"_npmUser":{"name":"chriskrycho","email":"chris@chriskrycho.com"},"prettier":{"singleQuote":true},"release-it":{"git":{"tagName":"v${version}"},"github":{"release":true,"tokenRef":"GITHUB_AUTH"},"plugins":{"release-it-lerna-changelog":{"infile":"CHANGELOG.md","launchEditor":true}}},"repository":{"url":"git+https://github.com/ember-modifier/ember-modifier.git","type":"git"},"_npmVersion":"7.6.0","description":"A library for writing Ember modifiers","directories":{"doc":"doc","test":"tests"},"ember-addon":{"configPath":"tests/dummy/config"},"_nodeVersion":"14.18.1","dependencies":{"ember-cli-babel":"^7.26.6","ember-cli-typescript":"^4.2.1","ember-cli-string-utils":"^1.1.0","ember-compatibility-helpers":"^1.2.5","ember-cli-normalize-entity-name":"^1.0.0"},"publishConfig":{"registry":"https://registry.npmjs.org"},"_hasShrinkwrap":false,"devDependencies":{"qunit":"^2.17.2","eslint":"^8.1.0","rimraf":"^3.0.2","webpack":"^5.58.2","prettier":"^2.4.1","ember-cli":"^3.28.3","ember-try":"^1.4.0","loader.js":"^4.7.0","qunit-dom":"^2.0.0","release-it":"^13.6.0","typescript":"^4.4.4","@types/rsvp":"^4.0.4","ember-qunit":"^5.1.5","expect-type":"^0.13.0","npm-run-all":"^4.1.5","@types/ember":"^3.16.5","@types/qunit":"^2.11.2","ember-source":"^3.28.4","ember-cli-sri":"^2.1.1","ember-resolver":"^8.0.3","ember-cli-uglify":"^3.0.0","@glimmer/tracking":"^1.0.4","ember-auto-import":"^2.2.3","@glimmer/component":"^1.0.4","@types/ember-qunit":"^3.4.15","broccoli-asset-rev":"^3.0.0","ember-cli-htmlbars":"^5.7.1","eslint-plugin-node":"^11.1.0","@ember/test-helpers":"^2.5.0","ember-template-lint":"^3.10.0","eslint-plugin-ember":"^10.5.7","@babel/eslint-parser":"^7.15.8","@types/ember-resolver":"^5.0.10","eslint-config-prettier":"^8.3.0","eslint-plugin-prettier":"^4.0.0","ember-load-initializers":"^2.1.2","@babel/preset-typescript":"^7.15.0","@ember/optional-features":"^2.0.0","ember-source-channel-url":"^3.0.0","@typescript-eslint/parser":"^5.2.0","ember-decorators-polyfill":"^1.1.5","@types/ember__test-helpers":"^2.0.2","release-it-lerna-changelog":"^2.3.0","ember-cli-dependency-checker":"^3.2.0","ember-cli-inject-live-reload":"^2.1.0","ember-maybe-import-regenerator":"^1.0.0","ember-export-application-global":"^2.0.1","@typescript-eslint/eslint-plugin":"^5.2.0","ember-disable-prototype-extensions":"^1.1.3"},"_npmOperationalInternal":{"tmp":"tmp/ember-modifier_3.0.0_1635293653225_0.2081781656507009","host":"s3://npm-registry-packages"}},"3.1.0":{"name":"ember-modifier","version":"3.1.0","keywords":["ember-addon"],"author":"","license":"MIT","_id":"ember-modifier@3.1.0","maintainers":[{"name":"rwjblue","email":"me@rwjblue.com"},{"name":"chriskrycho","email":"chris@chriskrycho.com"},{"name":"pzuraq","email":"opensource@pzuraq.com"}],"homepage":"https://github.com/ember-modifier/ember-modifier#readme","bugs":{"url":"https://github.com/ember-modifier/ember-modifier/issues"},"dist":{"shasum":"ba5b0941302accd787ed3dcfc8d20400b77ffc41","tarball":"https://registry.npmjs.org/ember-modifier/-/ember-modifier-3.1.0.tgz","fileCount":28,"integrity":"sha512-G5Lj9jVFsD2sVJcRNQfaGKG1p81wT4LGfClBhCuB4TgwP1NGJKdqI+Q8BW2MptONxQt/71UjjUH0YK7Gm9eahg==","signatures":[{"sig":"MEQCIB113m8D9eU659vTEeDUwJI0iXnxba8WeOcAk9SA+fGrAiAYw3bgJPFrP4+phrbd5Rpgcz2F8dkMpNdqXU6UEbqClQ==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":66939,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJh72l9CRA9TVsSAnZWagAA/hkP/0CFkI+hFn/sh3glfAJ0\nNSvvXVoAZINkBTHdB+MBzErEyv8r/kQi+aBi3voAKk+49+VuDXHaZLApfXYk\nOi94uVbaVu0imeCtYvXOJdtVjYv+rJ4NZOkGaM9LhpdWaCnGbIQLZWw0lpwQ\nnA3pXeyooeCwG31xKsmdGs10G38sK8BgE1g5T59KCgt7fXXSB8aVuwWzqiVr\nlxiocQbLWGKuzymW7xSlmP0mt/B4G3MvOnmXRc2sflkEE4MmcH2RTXNcaQCf\nH0vNlfShXwbWo4C9CpNcJDccKEWGO3F376TMfQn3I6EAqOr1Wu/j0BqPmIJA\nO1wKnjf0frI8qEm8o+UDIiwjorhMh4xvoc191VKHBFGtgibLPkwuUv0gQ35w\ndB5yorpj3N8nXvcdKJX7N5ARoczlAFhdplO416jyB9AaSOrvpQAoOTy20ZMS\nKkOG9aaV8I4kUc/4Va9UqSQB9pyqHw70YJvCtFK1yjG7GDhmKTw21DKNc6Iu\nGoniM3b2kQ/tunaTSo8odzQlHpHet9TN/30CsENAlV3cQy6axyNnVwlpgGy4\n0NGhc6cpXPEHny9I5NAHtQ7S33xjAfUiSQwQqNbgCEnS+ZZsbds6GfYdb5pF\nVo71If0QHbDhAY286Ifr4mJl3pTnfCHuio17sWSF+YUu3EqI799Zne/Y0UL4\n2XdT\r\n=5tXW\r\n-----END PGP SIGNATURE-----\r\n"},"ember":{"edition":"octane"},"types":"index.d.ts","engines":{"node":"12.* || >= 14"},"gitHead":"f2a4bf2e12167b4681bbe8efdc8abc937440738e","scripts":{"lint":"npm-run-all --aggregate-output --continue-on-error --parallel 'lint:!(fix)'","test":"npm-run-all test:*","build":"ember build --environment=production","clean":"ember ts:clean","start":"ember serve","lint:js":"eslint .","lint:ts":"tsc --noEmit","pretest":"npm run prepublishOnly","lint:fix":"npm-run-all --aggregate-output --continue-on-error --parallel lint:*:fix","lint:hbs":"ember-template-lint .","posttest":"npm run clean","test:ember":"ember test","test:types":"ember try:each --config-path=./config/ember-try-typescript.js","lint:js:fix":"eslint . --fix","postpublish":"npm run clean","lint:hbs:fix":"ember-template-lint . --fix","prepublishOnly":"ember ts:precompile","prepublish:types":"ember ts:precompile","test:ember-compatibility":"ember try:each"},"_npmUser":{"name":"chriskrycho","email":"chris@chriskrycho.com"},"prettier":{"singleQuote":true},"release-it":{"git":{"tagName":"v${version}"},"github":{"release":true,"tokenRef":"GITHUB_AUTH"},"plugins":{"release-it-lerna-changelog":{"infile":"CHANGELOG.md","launchEditor":true}}},"repository":{"url":"git+https://github.com/ember-modifier/ember-modifier.git","type":"git"},"_npmVersion":"8.1.3","description":"A library for writing Ember modifiers","directories":{"doc":"doc","test":"tests"},"ember-addon":{"configPath":"tests/dummy/config"},"_nodeVersion":"12.22.7","dependencies":{"ember-cli-babel":"^7.26.6","ember-cli-typescript":"^4.2.1","ember-cli-string-utils":"^1.1.0","ember-compatibility-helpers":"^1.2.5","ember-cli-normalize-entity-name":"^1.0.0"},"publishConfig":{"registry":"https://registry.npmjs.org"},"_hasShrinkwrap":false,"devDependencies":{"qunit":"^2.17.2","eslint":"^8.1.0","rimraf":"^3.0.2","webpack":"^5.58.2","prettier":"^2.4.1","ember-cli":"^4.1.0","ember-try":"^2.0.0","loader.js":"^4.7.0","qunit-dom":"^2.0.0","release-it":"^14.11.6","typescript":"^4.5.2","@types/rsvp":"^4.0.4","ember-qunit":"^5.1.5","expect-type":"^0.13.0","npm-run-all":"^4.1.5","@types/ember":"^3.16.5","@types/qunit":"^2.11.2","ember-source":"^3.28.4","ember-cli-sri":"^2.1.1","ember-resolver":"^8.0.3","ember-cli-uglify":"^3.0.0","@glimmer/tracking":"^1.0.4","ember-auto-import":"^2.2.3","@glimmer/component":"^1.0.4","@types/ember-qunit":"~4.0.0","broccoli-asset-rev":"^3.0.0","ember-cli-htmlbars":"^6.0.1","eslint-plugin-node":"^11.1.0","@ember/test-helpers":"^2.5.0","ember-template-lint":"^3.10.0","eslint-plugin-ember":"^10.5.7","@babel/eslint-parser":"^7.15.8","@types/ember-resolver":"^5.0.10","eslint-config-prettier":"^8.3.0","eslint-plugin-prettier":"^4.0.0","ember-load-initializers":"^2.1.2","@babel/preset-typescript":"^7.15.0","@ember/optional-features":"^2.0.0","ember-source-channel-url":"^3.0.0","@typescript-eslint/parser":"^5.2.0","ember-decorators-polyfill":"^1.1.5","@types/ember__test-helpers":"^2.0.2","release-it-lerna-changelog":"^4.0.1","ember-cli-dependency-checker":"^3.2.0","ember-cli-inject-live-reload":"^2.1.0","ember-maybe-import-regenerator":"^1.0.0","ember-export-application-global":"^2.0.1","@typescript-eslint/eslint-plugin":"^5.2.0","ember-disable-prototype-extensions":"^1.1.3"},"_npmOperationalInternal":{"tmp":"tmp/ember-modifier_3.1.0_1643080061369_0.2698392141204484","host":"s3://npm-registry-packages"}},"3.2.0":{"name":"ember-modifier","version":"3.2.0","keywords":["ember-addon"],"author":"","license":"MIT","_id":"ember-modifier@3.2.0","maintainers":[{"name":"rwjblue","email":"me@rwjblue.com"},{"name":"chriskrycho","email":"chris@chriskrycho.com"},{"name":"pzuraq","email":"opensource@pzuraq.com"}],"homepage":"https://github.com/ember-modifier/ember-modifier#readme","bugs":{"url":"https://github.com/ember-modifier/ember-modifier/issues"},"dist":{"shasum":"a2b101f2d90bed8debe7d7ff709e57d79498c0b8","tarball":"https://registry.npmjs.org/ember-modifier/-/ember-modifier-3.2.0.tgz","fileCount":32,"integrity":"sha512-Q2k8BPW6VrEq0ld2ysPvkPc2Ins6/D9nR9uwWJ6jcC1+pkonoDkp5VWRDkVKOZjBzEXGOONTbam3dXOo1DrTtA==","signatures":[{"sig":"MEQCIEhe9R+HA5+d37vqs9fIbnaNassH6nF2njZoNWyY6niCAiASfoq6BogyWYRLQTyqP50CT+Dx0JBi4nmlgFpDuvrAPg==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":125144,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiQmmsACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqdvQ//bIzSIfTyAk6Fq7/sf8u7OuUcj5SxJJYjlg7iB5Zysy5za/+K\r\n6Pg3Fpy6Gg1npewYZc9uJfs7LlH9tF9mXqseiSms1vexkagbvtVZ6/lhJa9n\r\nGtC5d404xOw9lXc/X8Ge5LhhWxKIpGXEc/xKK7XQYYKAdrnuqIbClKTsGoT1\r\nR9x11/K2DY6v9LJ1m5NhhTvhYlGoqIglmeBkiyTDWC7L6TUk5YxDl7T8/AUY\r\n1/HMFOE+pZki8hCo8w33XApAhNI+P7VFRAgA5LavzUf6oh2MitUyelQtSzYM\r\nKu2C3172xENorZEjTZqDEfxcWPjGMEpm5+iRxc4sIEXR5RffGb0sjm62K9dO\r\nfMncR00QxhlnpotXIPIr9BhBgGSdK1kmbwPfZUxzlHDzDPi8sXs5Pnv4iwe9\r\nqaWre9kEsiAkxRIgyM9SvJU2/U4j8RpTlEQtA/UqoEMBXm66az3k4AOuV5si\r\nbH7yt9XO1Vmr/nGyyqcUdgRUMMBE8YhI01U7iyEXW3Z25Qx29zJpnRL58qz9\r\nzCZF8WBzwnyvpedo1qXgTphRI6VE7FYAiwnS4rzc2V0KwhA2RW3flZ0/Y+Yq\r\ngXV+A2uabC+x0tpNKIUXZ9AV7TmmK4i6lDlJV19M9y1qlDk7GPCazjbkXcCm\r\nQVOIa5jbzEQ77ticCohjoSC6xshObQpnqq8=\r\n=c58/\r\n-----END PGP SIGNATURE-----\r\n"},"ember":{"edition":"octane"},"types":"index.d.ts","volta":{"node":"14.19.0"},"engines":{"node":"12.* || >= 14"},"gitHead":"2a34ddf1212dd8078c31aaf34363ec5c5cf65545","scripts":{"lint":"npm-run-all --aggregate-output --continue-on-error --parallel 'lint:!(fix)'","test":"npm-run-all test:*","build":"ember build --environment=production","clean":"ember ts:clean","start":"ember serve","lint:js":"eslint .","lint:ts":"tsc --noEmit","pretest":"npm run prepublishOnly","lint:fix":"npm-run-all --aggregate-output --continue-on-error --parallel lint:*:fix","lint:hbs":"ember-template-lint .","posttest":"npm run clean","test:ember":"ember test","test:types":"ember try:each --config-path=./config/ember-try-typescript.js","lint:js:fix":"eslint . --fix","postpublish":"npm run clean","lint:hbs:fix":"ember-template-lint . --fix","prepublishOnly":"ember ts:precompile","prepublish:types":"ember ts:precompile","test:ember-compatibility":"ember try:each"},"_npmUser":{"name":"chriskrycho","email":"chris@chriskrycho.com"},"prettier":{"singleQuote":true},"release-it":{"git":{"tagName":"v${version}"},"github":{"release":true,"tokenRef":"GITHUB_AUTH"},"plugins":{"release-it-lerna-changelog":{"infile":"CHANGELOG.md","launchEditor":true}},"changelog":{"labels":{"bug":":bug: Bug Fix","breaking":":boom: Breaking Change","internal":":house: Internal","deprecation":":no_entry_sign: Deprecations","enhancement":":rocket: Enhancement","documentation":":memo: Documentation"}}},"repository":{"url":"git+https://github.com/ember-modifier/ember-modifier.git","type":"git"},"_npmVersion":"6.14.16","description":"A library for writing Ember modifiers","directories":{"doc":"doc","test":"tests"},"ember-addon":{"configPath":"tests/dummy/config"},"_nodeVersion":"14.19.0","dependencies":{"ember-cli-babel":"^7.26.6","ember-cli-typescript":"^5.0.0","ember-cli-string-utils":"^1.1.0","ember-compatibility-helpers":"^1.2.5","ember-cli-normalize-entity-name":"^1.0.0"},"publishConfig":{"registry":"https://registry.npmjs.org"},"_hasShrinkwrap":false,"devDependencies":{"qunit":"^2.17.2","eslint":"^8.1.0","rimraf":"^3.0.2","webpack":"^5.58.2","prettier":"^2.4.1","ember-cli":"^4.1.0","ember-try":"^2.0.0","loader.js":"^4.7.0","qunit-dom":"^2.0.0","release-it":"^14.11.6","typescript":"^4.5.2","@types/rsvp":"^4.0.4","ember-qunit":"^5.1.5","expect-type":"^0.13.0","npm-run-all":"^4.1.5","@types/qunit":"^2.11.2","ember-source":"^4.1.0","ember-cli-sri":"^2.1.1","ember-resolver":"^8.0.3","ember-cli-uglify":"^3.0.0","@glimmer/tracking":"^1.0.4","ember-auto-import":"^2.2.3","@glimmer/component":"^1.0.4","@types/ember-qunit":"~5.0.0","broccoli-asset-rev":"^3.0.0","ember-cli-htmlbars":"^6.0.1","eslint-plugin-node":"^11.1.0","@ember/test-helpers":"^2.5.0","@types/ember__debug":"~4.0.1","ember-template-lint":"^4.3.0","eslint-plugin-ember":"^10.5.7","@babel/eslint-parser":"^7.15.8","@types/ember-resolver":"^5.0.10","@types/ember__modifier":"~4.0.1","eslint-config-prettier":"^8.3.0","eslint-plugin-prettier":"^4.0.0","ember-load-initializers":"^2.1.2","@babel/preset-typescript":"^7.15.0","@ember/optional-features":"^2.0.0","ember-source-channel-url":"^3.0.0","@typescript-eslint/parser":"^5.2.0","ember-decorators-polyfill":"^1.1.5","@types/ember__test-helpers":"^2.0.2","release-it-lerna-changelog":"^4.0.1","ember-cli-dependency-checker":"^3.2.0","ember-cli-inject-live-reload":"^2.1.0","ember-maybe-import-regenerator":"^1.0.0","ember-export-application-global":"^2.0.1","@typescript-eslint/eslint-plugin":"^5.2.0","ember-disable-prototype-extensions":"^1.1.3"},"_npmOperationalInternal":{"tmp":"tmp/ember-modifier_3.2.0_1648519595784_0.8960301670917323","host":"s3://npm-registry-packages"}},"3.2.1":{"name":"ember-modifier","version":"3.2.1","keywords":["ember-addon"],"author":"","license":"MIT","_id":"ember-modifier@3.2.1","maintainers":[{"name":"rwjblue","email":"me@rwjblue.com"},{"name":"chriskrycho","email":"chris@chriskrycho.com"},{"name":"pzuraq","email":"opensource@pzuraq.com"}],"homepage":"https://github.com/ember-modifier/ember-modifier#readme","bugs":{"url":"https://github.com/ember-modifier/ember-modifier/issues"},"dist":{"shasum":"7078403b5b84d7b97d0b3298851d33d098a7b82d","tarball":"https://registry.npmjs.org/ember-modifier/-/ember-modifier-3.2.1.tgz","fileCount":32,"integrity":"sha512-8mMLUX/pclAfrX99RemTsyimVM/8zJ1ZzGOqny2TfUKeFzon3a+mxPUmBhY+TS6W4aNBW32YSeFytEtG01bTdQ==","signatures":[{"sig":"MEYCIQDLolNAkOCrIVc/3bP1mtOlPctI5G5OIiOOmlym4h207AIhAN8bTbjNQGWYNV5ERANmgnI2cFWOFXCbkTAQN/T0iLm0","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":133322,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiRQiNACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqHQg/+MfDR2kFbbtDoS6OHEt+T00h2JPrmBN97thaw1mD0OYhLyiV/\r\nJ5dK/Kasf/ajcvOPwgTYBbEuzfRHCxmwR0TGT3obKqdCPN69fwvhWq+cqYsM\r\nphxeHUounDbMy5OAN7HYzZ6s1mBtagkwn7kN84zTbviOc2Wj8MPcpi7Ywft5\r\nDXOeqo2i9lC/qNUtV5YSWLqgUON/N3wWOSaYUU6NhplJNPjWQdZx5af492Cy\r\n+XsOm7d4ctAfZmS0KzK7txz2e9SpW2M6TeWi8aCdUG9uPkbOUw2tB5EzQXTl\r\nJCIUnVnt9RBALWjk6RRkKrr/bqt5IH8PZu55kFQpGRKv0a0FSoMKJhw8gpxw\r\nBHM0No951lHMqBJEPnYv3rrz8gRh7JJnVooI/CC/+Tm+wmFI3kKwC41KTgxy\r\nMAYzbrKWw0lrk4h827qtcOcIZNSQOeN/DtxgxqlRWN2PClJxl+PgKLqa/kTu\r\nbeIT0rJ9Q4+VXi6piOttstl407ia4T3eX6G15f2Hs9vToaTwXHGcbkhQWZBk\r\ndiwFxJ1y6Lamzx6D/kzIkWpz7k4UswrMD2NSv4HOzHn110D2tE8bRa34uqZn\r\nCEbqc90DVA3wJ5OdtoEozXMGuJLdkEXScYIdOsa1eZdIx2JTZvU0++AxPK7+\r\n8smWNefQf8hdOmQ/F1JdSPwp4WuaFTxhfOI=\r\n=nLGB\r\n-----END PGP SIGNATURE-----\r\n"},"ember":{"edition":"octane"},"types":"index.d.ts","volta":{"node":"14.19.0"},"engines":{"node":"12.* || >= 14"},"gitHead":"d244d9571f958fa4c7c97e36fb5a3c4cbccdb49f","scripts":{"lint":"npm-run-all --aggregate-output --continue-on-error --parallel 'lint:!(fix)'","test":"npm-run-all test:*","build":"ember build --environment=production","clean":"ember ts:clean","start":"ember serve","lint:js":"eslint .","lint:ts":"tsc --noEmit","pretest":"npm run prepublishOnly","lint:fix":"npm-run-all --aggregate-output --continue-on-error --parallel lint:*:fix","lint:hbs":"ember-template-lint .","posttest":"npm run clean","test:ember":"ember test","test:types":"ember try:each --config-path=./config/ember-try-typescript.js","lint:js:fix":"eslint . --fix","postpublish":"npm run clean","lint:hbs:fix":"ember-template-lint . --fix","prepublishOnly":"ember ts:precompile","prepublish:types":"ember ts:precompile","test:ember-compatibility":"ember try:each"},"_npmUser":{"name":"chriskrycho","email":"chris@chriskrycho.com"},"prettier":{"singleQuote":true},"release-it":{"git":{"tagName":"v${version}"},"github":{"release":true,"tokenRef":"GITHUB_AUTH"},"plugins":{"release-it-lerna-changelog":{"infile":"CHANGELOG.md","launchEditor":true}},"changelog":{"labels":{"bug":":bug: Bug Fix","breaking":":boom: Breaking Change","internal":":house: Internal","deprecation":":no_entry_sign: Deprecations","enhancement":":rocket: Enhancement","documentation":":memo: Documentation"}}},"repository":{"url":"git+https://github.com/ember-modifier/ember-modifier.git","type":"git"},"_npmVersion":"6.14.16","description":"A library for writing Ember modifiers","directories":{"doc":"doc","test":"tests"},"ember-addon":{"configPath":"tests/dummy/config"},"_nodeVersion":"14.19.0","dependencies":{"ember-cli-babel":"^7.26.6","ember-cli-typescript":"^5.0.0","ember-cli-string-utils":"^1.1.0","ember-compatibility-helpers":"^1.2.5","ember-cli-normalize-entity-name":"^1.0.0"},"publishConfig":{"registry":"https://registry.npmjs.org"},"_hasShrinkwrap":false,"devDependencies":{"qunit":"^2.17.2","eslint":"^8.1.0","rimraf":"^3.0.2","webpack":"^5.58.2","prettier":"^2.4.1","ember-cli":"^4.1.0","ember-try":"^2.0.0","loader.js":"^4.7.0","qunit-dom":"^2.0.0","release-it":"^14.11.6","typescript":"^4.5.2","@types/rsvp":"^4.0.4","ember-qunit":"^5.1.5","expect-type":"^0.13.0","npm-run-all":"^4.1.5","@types/qunit":"^2.11.2","ember-source":"^4.1.0","ember-cli-sri":"^2.1.1","ember-resolver":"^8.0.3","ember-cli-uglify":"^3.0.0","@glimmer/tracking":"^1.0.4","ember-auto-import":"^2.2.3","@glimmer/component":"^1.0.4","@types/ember-qunit":"~5.0.0","broccoli-asset-rev":"^3.0.0","ember-cli-htmlbars":"^6.0.1","eslint-plugin-node":"^11.1.0","@ember/test-helpers":"^2.5.0","@types/ember__debug":"~4.0.1","ember-template-lint":"^4.3.0","eslint-plugin-ember":"^10.5.7","@babel/eslint-parser":"^7.15.8","@types/ember-resolver":"^5.0.10","@types/ember__modifier":"~4.0.1","eslint-config-prettier":"^8.3.0","eslint-plugin-prettier":"^4.0.0","ember-load-initializers":"^2.1.2","@babel/preset-typescript":"^7.15.0","@ember/optional-features":"^2.0.0","ember-source-channel-url":"^3.0.0","@typescript-eslint/parser":"^5.2.0","ember-decorators-polyfill":"^1.1.5","@types/ember__test-helpers":"^2.0.2","release-it-lerna-changelog":"^4.0.1","ember-cli-dependency-checker":"^3.2.0","ember-cli-inject-live-reload":"^2.1.0","ember-maybe-import-regenerator":"^1.0.0","ember-export-application-global":"^2.0.1","@typescript-eslint/eslint-plugin":"^5.2.0","ember-disable-prototype-extensions":"^1.1.3"},"_npmOperationalInternal":{"tmp":"tmp/ember-modifier_3.2.1_1648691341606_0.7570914759237628","host":"s3://npm-registry-packages"}},"3.2.2":{"name":"ember-modifier","version":"3.2.2","keywords":["ember-addon"],"author":"","license":"MIT","_id":"ember-modifier@3.2.2","maintainers":[{"name":"rwjblue","email":"me@rwjblue.com"},{"name":"chriskrycho","email":"chris@chriskrycho.com"},{"name":"pzuraq","email":"opensource@pzuraq.com"}],"homepage":"https://github.com/ember-modifier/ember-modifier#readme","bugs":{"url":"https://github.com/ember-modifier/ember-modifier/issues"},"dist":{"shasum":"80f116c92dc7e28c7a725d6060d162110b175335","tarball":"https://registry.npmjs.org/ember-modifier/-/ember-modifier-3.2.2.tgz","fileCount":32,"integrity":"sha512-9xJSzMXL3+9HKlPS8W7k3LLlubRVlS1eGcYjZ/dqZtqNs/tBC2f19z6ReX72bPNM8z+HQbliqSe9FUbqFYZDUA==","signatures":[{"sig":"MEUCIQCUDgjmVIhtg7/5UxyJ/xLRlDOK/iv1czssfHqPflQQ7AIgP8pvKr1Gd+Lnqx5xYcz+S6/uN6Du7IZoAeKk5aSQ7Lo=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":133822,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiRgcVACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmq3BhAAjcexswpbPZ24poPPupDObBJkR+Io+KL0fKyshQlkzcbV9bPQ\r\ndm7hCx5mgMdXUZo998a41hqbv4GesVitvVLmp2KG2RqzpTjT5f2BxPhjsuhy\r\nTMHhRJabpHwsYr/BbCGxVDjH81/nxHhsOhUQQSe0RH5lfwe0atTfW3C6jp4O\r\nTet0sk3H5Dg+ENOUKnLZ843nuYGN6ONw9IEIHLG6ReKTS9GvE+AC6F2mL2u1\r\nsBfv6l/bzI6aEvBMSV0QejbGme7UDk+ud5ytYcByt+hDOF2PsjAQtNSBL0UR\r\nD/LXcu630ndMlObQWlScMoaeASdOTsJO/3rVBIrNdG/IoCO6WfGO5TGQQjIJ\r\nx0v6Z8icptLjnpWCNMHwCrKKTBePRhdH58dwLqsdGJamc4o28psqq5xNtzAq\r\n8lJ3axhrpCATMXNfUB0SwMA0Q9BZU4bh5CbQq/w9dN4BrVEMrTbsrkbNxuu9\r\nRiCz3ArkPEwQerJtyPd6WqkUx/CqA7vhgns65B59pUTMSjWvTtwQNDKJz05B\r\nsQMG+v8e1pudc9GckCGpIHDfGya49jKIS0IVtEeSeV8CEnRJYWoG1ttNZM8/\r\nMRdHhW8A0lzmGXEWn/OS0sqG7S903TI7zUSHhqOx4SqVg7xuWrgU9gu7PHEg\r\nfylUAjvfJhApXazaTWixJOzqrCWVvxx4BLo=\r\n=dxy2\r\n-----END PGP SIGNATURE-----\r\n"},"ember":{"edition":"octane"},"types":"index.d.ts","volta":{"node":"14.19.0"},"engines":{"node":"12.* || >= 14"},"gitHead":"f71de9db1497aa8638d1a4d4c8ab71021b77a34f","scripts":{"lint":"npm-run-all --aggregate-output --continue-on-error --parallel 'lint:!(fix)'","test":"npm-run-all test:*","build":"ember build --environment=production","clean":"ember ts:clean","start":"ember serve","lint:js":"eslint .","lint:ts":"tsc --noEmit","pretest":"npm run prepublishOnly","lint:fix":"npm-run-all --aggregate-output --continue-on-error --parallel lint:*:fix","lint:hbs":"ember-template-lint .","posttest":"npm run clean","test:ember":"ember test","test:types":"ember try:each --config-path=./config/ember-try-typescript.js","lint:js:fix":"eslint . --fix","postpublish":"npm run clean","lint:hbs:fix":"ember-template-lint . --fix","prepublishOnly":"ember ts:precompile","prepublish:types":"ember ts:precompile","test:ember-compatibility":"ember try:each"},"_npmUser":{"name":"chriskrycho","email":"chris@chriskrycho.com"},"prettier":{"singleQuote":true},"release-it":{"git":{"tagName":"v${version}"},"github":{"release":true,"tokenRef":"GITHUB_AUTH"},"plugins":{"release-it-lerna-changelog":{"infile":"CHANGELOG.md","launchEditor":true}},"changelog":{"labels":{"bug":":bug: Bug Fix","breaking":":boom: Breaking Change","internal":":house: Internal","deprecation":":no_entry_sign: Deprecations","enhancement":":rocket: Enhancement","documentation":":memo: Documentation"}}},"repository":{"url":"git+https://github.com/ember-modifier/ember-modifier.git","type":"git"},"_npmVersion":"6.14.16","description":"A library for writing Ember modifiers","directories":{"doc":"doc","test":"tests"},"ember-addon":{"configPath":"tests/dummy/config"},"_nodeVersion":"14.19.0","dependencies":{"ember-cli-babel":"^7.26.6","ember-cli-typescript":"^5.0.0","ember-cli-string-utils":"^1.1.0","ember-compatibility-helpers":"^1.2.5","ember-cli-normalize-entity-name":"^1.0.0"},"publishConfig":{"registry":"https://registry.npmjs.org"},"_hasShrinkwrap":false,"devDependencies":{"qunit":"^2.17.2","eslint":"^8.1.0","rimraf":"^3.0.2","webpack":"^5.58.2","prettier":"^2.4.1","ember-cli":"^4.1.0","ember-try":"^2.0.0","loader.js":"^4.7.0","qunit-dom":"^2.0.0","release-it":"^14.11.6","typescript":"^4.5.2","@types/rsvp":"^4.0.4","ember-qunit":"^5.1.5","expect-type":"^0.13.0","npm-run-all":"^4.1.5","@types/qunit":"^2.11.2","ember-source":"^4.1.0","ember-cli-sri":"^2.1.1","ember-resolver":"^8.0.3","ember-cli-uglify":"^3.0.0","@glimmer/tracking":"^1.0.4","ember-auto-import":"^2.2.3","@glimmer/component":"^1.0.4","@types/ember-qunit":"~5.0.0","broccoli-asset-rev":"^3.0.0","ember-cli-htmlbars":"^6.0.1","eslint-plugin-node":"^11.1.0","@ember/test-helpers":"^2.5.0","@types/ember__debug":"~4.0.1","ember-template-lint":"^4.3.0","eslint-plugin-ember":"^10.5.7","@babel/eslint-parser":"^7.15.8","@types/ember-resolver":"^5.0.10","@types/ember__modifier":"~4.0.1","eslint-config-prettier":"^8.3.0","eslint-plugin-prettier":"^4.0.0","ember-load-initializers":"^2.1.2","@babel/preset-typescript":"^7.15.0","@ember/optional-features":"^2.0.0","ember-source-channel-url":"^3.0.0","@typescript-eslint/parser":"^5.2.0","ember-decorators-polyfill":"^1.1.5","@types/ember__test-helpers":"^2.0.2","release-it-lerna-changelog":"^4.0.1","ember-cli-dependency-checker":"^3.2.0","ember-cli-inject-live-reload":"^2.1.0","ember-maybe-import-regenerator":"^1.0.0","ember-export-application-global":"^2.0.1","@typescript-eslint/eslint-plugin":"^5.2.0","ember-disable-prototype-extensions":"^1.1.3"},"_npmOperationalInternal":{"tmp":"tmp/ember-modifier_3.2.2_1648756501564_0.58757493829516","host":"s3://npm-registry-packages"}},"3.2.3":{"name":"ember-modifier","version":"3.2.3","keywords":["ember-addon"],"author":"","license":"MIT","_id":"ember-modifier@3.2.3","maintainers":[{"name":"rwjblue","email":"me@rwjblue.com"},{"name":"chriskrycho","email":"chris@chriskrycho.com"},{"name":"pzuraq","email":"opensource@pzuraq.com"}],"homepage":"https://github.com/ember-modifier/ember-modifier#readme","bugs":{"url":"https://github.com/ember-modifier/ember-modifier/issues"},"dist":{"shasum":"c357de2fdbc7b79d522a563d81b1fb5bbeefeea8","tarball":"https://registry.npmjs.org/ember-modifier/-/ember-modifier-3.2.3.tgz","fileCount":32,"integrity":"sha512-zibVw2vQfFOSB+fgMDZK1nLkf3YaTAEmH9QTDFtqtS2LaoybvE/frDeaqE6pkx9qckOHfdlHuYjMKKAkSBMvaw==","signatures":[{"sig":"MEUCICeWdJozOWMFVkOwo2go4AVDW5QQl5xLWcolDlOvsj2MAiEAhn5GOZK9TNhPMrNXZ11nmYqOSm+rTzKGMHSgH6N0T2g=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":134967,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiTMkkACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmp5kQ//cqdN9tJzrkOAw9Jk3r/ybEvZ3eudyt+zvTS4WKJvCzF1GL3U\r\n+N/YfVMRmduHjsA2cleYhHDTchUAZLEOL/6bB6LZC88tZ9bFKg+Dg12IRzl4\r\nQbpO+MKsWUOjCjhJqw4wX0JBRR88clAR4UJMKbbda0fYKGmzqUllrXoyzzZY\r\nG8T+k83YRC8uFw57EPnDaDVwC0tXiwR9nQNC+NJqjTEyMyKQIzhhdn+dDoUv\r\nE4377MyDBuim6jk3Tf2GxsLdeue87B8t+NDtZClo0B0z4CBbXjiSUXWMYptH\r\nSx5o17Q0vK+6ZZaPQZk/UQHwTZ6xPVPhi6oWJEZVEy98fgnlqcWH441zhXc+\r\nXd5IfksZv0UmVcWxNQLgKMcOUmOwrfrbv/lwUZtGa9FcZjW9/IolTDAEO5dQ\r\ntMfJwwZVim87VRAZCK73I0Ei6cR++UNukukk52oWv1CpP2vMqRfcYS2qOLBS\r\nWuNercZPDsKAm6XU7IZFAWrzM0XsnIFx5Xgz4FnhDw1CBSIy6K5DYT3AzHZM\r\ndQUE5G1ImltHbb2hTH1oORZsjr4wfZQiJtTfi5Cmpvk2QObSI0yLT9LDg5wH\r\njcuO/nK50sDoTi7ouZR6eqygtq8xk/xUhNYsVs9mFzg1po3xSjt/9AVDwuoT\r\nV08nWbJTf9B4pJj76Z2R+tsMpu4ymBsU5a0=\r\n=8WZG\r\n-----END PGP SIGNATURE-----\r\n"},"ember":{"edition":"octane"},"types":"index.d.ts","volta":{"node":"14.19.0"},"engines":{"node":"12.* || >= 14"},"gitHead":"0ca393a8cd0a5a99f700535398fdad4ebc209ab7","scripts":{"lint":"npm-run-all --aggregate-output --continue-on-error --parallel 'lint:!(fix)'","test":"npm-run-all test:*","build":"ember build --environment=production","clean":"ember ts:clean","start":"ember serve","lint:js":"eslint .","lint:ts":"tsc --noEmit","pretest":"npm run prepublishOnly","lint:fix":"npm-run-all --aggregate-output --continue-on-error --parallel lint:*:fix","lint:hbs":"ember-template-lint .","posttest":"npm run clean","test:ember":"ember test","test:types":"ember try:each --config-path=./config/ember-try-typescript.js","lint:js:fix":"eslint . --fix","postpublish":"npm run clean","lint:hbs:fix":"ember-template-lint . --fix","prepublishOnly":"ember ts:precompile","prepublish:types":"ember ts:precompile","test:ember-compatibility":"ember try:each"},"_npmUser":{"name":"chriskrycho","email":"chris@chriskrycho.com"},"prettier":{"singleQuote":true},"release-it":{"git":{"tagName":"v${version}"},"github":{"release":true,"tokenRef":"GITHUB_AUTH"},"plugins":{"release-it-lerna-changelog":{"infile":"CHANGELOG.md","launchEditor":true}},"changelog":{"labels":{"bug":":bug: Bug Fix","breaking":":boom: Breaking Change","internal":":house: Internal","deprecation":":no_entry_sign: Deprecations","enhancement":":rocket: Enhancement","documentation":":memo: Documentation"}}},"repository":{"url":"git+https://github.com/ember-modifier/ember-modifier.git","type":"git"},"_npmVersion":"6.14.16","description":"A library for writing Ember modifiers","directories":{"doc":"doc","test":"tests"},"ember-addon":{"configPath":"tests/dummy/config"},"_nodeVersion":"14.19.0","dependencies":{"ember-cli-babel":"^7.26.6","ember-cli-typescript":"^5.0.0","ember-cli-string-utils":"^1.1.0","ember-compatibility-helpers":"^1.2.5","ember-cli-normalize-entity-name":"^1.0.0"},"publishConfig":{"registry":"https://registry.npmjs.org"},"_hasShrinkwrap":false,"devDependencies":{"qunit":"^2.17.2","eslint":"^8.1.0","rimraf":"^3.0.2","webpack":"^5.58.2","prettier":"^2.4.1","ember-cli":"^4.1.0","ember-try":"^2.0.0","loader.js":"^4.7.0","qunit-dom":"^2.0.0","release-it":"^14.11.6","typescript":"^4.5.2","@types/rsvp":"^4.0.4","ember-qunit":"^5.1.5","expect-type":"^0.13.0","npm-run-all":"^4.1.5","@types/qunit":"^2.11.2","ember-source":"^4.1.0","ember-cli-sri":"^2.1.1","ember-resolver":"^8.0.3","ember-cli-uglify":"^3.0.0","@glimmer/tracking":"^1.0.4","ember-auto-import":"^2.2.3","@glimmer/component":"^1.0.4","@types/ember-qunit":"~5.0.0","broccoli-asset-rev":"^3.0.0","ember-cli-htmlbars":"^6.0.1","eslint-plugin-node":"^11.1.0","@ember/test-helpers":"^2.5.0","@types/ember__debug":"~4.0.1","ember-template-lint":"^4.3.0","eslint-plugin-ember":"^10.5.7","@babel/eslint-parser":"^7.15.8","@types/ember-resolver":"^5.0.10","@types/ember__modifier":"~4.0.1","eslint-config-prettier":"^8.3.0","eslint-plugin-prettier":"^4.0.0","ember-load-initializers":"^2.1.2","@babel/preset-typescript":"^7.15.0","@ember/optional-features":"^2.0.0","ember-source-channel-url":"^3.0.0","@typescript-eslint/parser":"^5.2.0","ember-decorators-polyfill":"^1.1.5","@types/ember__test-helpers":"^2.0.2","release-it-lerna-changelog":"^4.0.1","ember-cli-dependency-checker":"^3.2.0","ember-cli-inject-live-reload":"^2.1.0","ember-maybe-import-regenerator":"^1.0.0","ember-export-application-global":"^2.0.1","@typescript-eslint/eslint-plugin":"^5.2.0","ember-disable-prototype-extensions":"^1.1.3"},"_npmOperationalInternal":{"tmp":"tmp/ember-modifier_3.2.3_1649199396387_0.01433101495578315","host":"s3://npm-registry-packages"}},"3.2.4":{"name":"ember-modifier","version":"3.2.4","keywords":["ember-addon"],"author":"","license":"MIT","_id":"ember-modifier@3.2.4","maintainers":[{"name":"rwjblue","email":"me@rwjblue.com"},{"name":"chriskrycho","email":"chris@chriskrycho.com"},{"name":"pzuraq","email":"opensource@pzuraq.com"}],"homepage":"https://github.com/ember-modifier/ember-modifier#readme","bugs":{"url":"https://github.com/ember-modifier/ember-modifier/issues"},"dist":{"shasum":"dd05d8f93d5a6a93a8b08993c8fb66c4f2cad277","tarball":"https://registry.npmjs.org/ember-modifier/-/ember-modifier-3.2.4.tgz","fileCount":32,"integrity":"sha512-gWshNHgj4cF5FjIJnrU+RNZ6fg2UM024Pi0GGXM7sp30khe/t08s9ExJTlFUCyHJVeLpIH1cnML77lX1JFjubQ==","signatures":[{"sig":"MEUCIQCvmRQy2J3DF438QZmW59aXQ6RcXEtTl/bZXvhuTkkewwIgYOfFN645524t7ka/glMARrsp2lL7DGzsQaMinqKCj0Y=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":135320,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiTNvTACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmorhw//XauKkKzNj4mi2G8j15U2htJPwxEAbUjt5aO1KmS7cn6vvS17\r\nkye1XBHmHdk7Qb8fHgFezh0b2JX5O2EUZm0YyXb2VSHp4A7Ep6rTxvxv6Yi4\r\nBHscaW1kybAEPEW39u1uMouMJBJ7anMj0lzD4wvevSPonto0WxL0ijNWx3fx\r\nd1xwLLswuJ2xusg1V+cGl31yG13J72ftoTjEpwwVsWnxT74iha1PlgDU5Xtd\r\nYsxovjOJrethUFL67tUZOjiutbpk1bRhQaabvcEPWpfAgF/3WzV9oic6L/y7\r\nm+GquZ9N2ZjEyR3dXt3uAvJLKyeK+3Fn766ethLLeDALe1BEs95pSw/ThXtx\r\n0ng3etFtYpLej2S8zyVPqG+H5dEZaZcOcqFnNhkLc/irZmbMt76E0xWgzemd\r\nyFAaDMAe9fFRbqwQ4poNrla/P+5J+HeRRkyv3hxIL4al/K4MH6VfySN7yT6U\r\n1vvHIKdD4WQxZoEwYK3T9G/5i3xNgUKvHxvV3u2qmzGDisGcCZ27+pql6lSL\r\nnaHjubOpBOg+MtYG04kMZDpVV+z110agzezZlIhWlUVHohOPYzwA9zZu0fIo\r\nF7USmYKQLBTerhWScDw7mVLp871NP2sNKQ39R83xQDktjtaNIqqoszKIHQpY\r\nPexIXBxvDzCC7OpayHSmqGGIKGfcru24wTQ=\r\n=VCwT\r\n-----END PGP SIGNATURE-----\r\n"},"ember":{"edition":"octane"},"types":"index.d.ts","volta":{"node":"14.19.0"},"engines":{"node":"12.* || >= 14"},"gitHead":"77f13a684db42bd02cc8b5d72191fcd166105f90","scripts":{"lint":"npm-run-all --aggregate-output --continue-on-error --parallel 'lint:!(fix)'","test":"npm-run-all test:*","build":"ember build --environment=production","clean":"ember ts:clean","start":"ember serve","lint:js":"eslint .","lint:ts":"tsc --noEmit","pretest":"npm run prepublishOnly","lint:fix":"npm-run-all --aggregate-output --continue-on-error --parallel lint:*:fix","lint:hbs":"ember-template-lint .","posttest":"npm run clean","test:ember":"ember test","test:types":"ember try:each --config-path=./config/ember-try-typescript.js","lint:js:fix":"eslint . --fix","postpublish":"npm run clean","lint:hbs:fix":"ember-template-lint . --fix","prepublishOnly":"ember ts:precompile","prepublish:types":"ember ts:precompile","test:ember-compatibility":"ember try:each"},"_npmUser":{"name":"chriskrycho","email":"chris@chriskrycho.com"},"prettier":{"singleQuote":true},"release-it":{"git":{"tagName":"v${version}"},"github":{"release":true,"tokenRef":"GITHUB_AUTH"},"plugins":{"release-it-lerna-changelog":{"infile":"CHANGELOG.md","launchEditor":true}},"changelog":{"labels":{"bug":":bug: Bug Fix","breaking":":boom: Breaking Change","internal":":house: Internal","deprecation":":no_entry_sign: Deprecations","enhancement":":rocket: Enhancement","documentation":":memo: Documentation"}}},"repository":{"url":"git+https://github.com/ember-modifier/ember-modifier.git","type":"git"},"_npmVersion":"6.14.16","description":"A library for writing Ember modifiers","directories":{"doc":"doc","test":"tests"},"ember-addon":{"configPath":"tests/dummy/config"},"_nodeVersion":"14.19.0","dependencies":{"ember-cli-babel":"^7.26.6","ember-cli-typescript":"^5.0.0","ember-cli-string-utils":"^1.1.0","ember-compatibility-helpers":"^1.2.5","ember-cli-normalize-entity-name":"^1.0.0"},"publishConfig":{"registry":"https://registry.npmjs.org"},"_hasShrinkwrap":false,"devDependencies":{"qunit":"^2.17.2","eslint":"^8.1.0","rimraf":"^3.0.2","webpack":"^5.58.2","prettier":"^2.4.1","ember-cli":"^4.1.0","ember-try":"^2.0.0","loader.js":"^4.7.0","qunit-dom":"^2.0.0","release-it":"^14.11.6","typescript":"^4.5.2","@types/rsvp":"^4.0.4","ember-qunit":"^5.1.5","expect-type":"^0.13.0","npm-run-all":"^4.1.5","@types/qunit":"^2.11.2","ember-source":"^4.1.0","ember-cli-sri":"^2.1.1","ember-resolver":"^8.0.3","ember-cli-uglify":"^3.0.0","@glimmer/tracking":"^1.0.4","ember-auto-import":"^2.2.3","@glimmer/component":"^1.0.4","@types/ember-qunit":"~5.0.0","broccoli-asset-rev":"^3.0.0","ember-cli-htmlbars":"^6.0.1","eslint-plugin-node":"^11.1.0","@ember/test-helpers":"^2.5.0","@types/ember__debug":"~4.0.1","ember-template-lint":"^4.3.0","eslint-plugin-ember":"^10.5.7","@babel/eslint-parser":"^7.15.8","@types/ember-resolver":"^5.0.10","@types/ember__modifier":"~4.0.1","eslint-config-prettier":"^8.3.0","eslint-plugin-prettier":"^4.0.0","ember-load-initializers":"^2.1.2","@babel/preset-typescript":"^7.15.0","@ember/optional-features":"^2.0.0","ember-source-channel-url":"^3.0.0","@typescript-eslint/parser":"^5.2.0","ember-decorators-polyfill":"^1.1.5","@types/ember__test-helpers":"^2.0.2","release-it-lerna-changelog":"^4.0.1","ember-cli-dependency-checker":"^3.2.0","ember-cli-inject-live-reload":"^2.1.0","ember-maybe-import-regenerator":"^1.0.0","ember-export-application-global":"^2.0.1","@typescript-eslint/eslint-plugin":"^5.2.0","ember-disable-prototype-extensions":"^1.1.3"},"_npmOperationalInternal":{"tmp":"tmp/ember-modifier_3.2.4_1649204178993_0.16469185906211803","host":"s3://npm-registry-packages"}},"3.2.5":{"name":"ember-modifier","version":"3.2.5","keywords":["ember-addon"],"author":"","license":"MIT","_id":"ember-modifier@3.2.5","maintainers":[{"name":"rwjblue","email":"me@rwjblue.com"},{"name":"chriskrycho","email":"chris@chriskrycho.com"},{"name":"pzuraq","email":"opensource@pzuraq.com"}],"homepage":"https://github.com/ember-modifier/ember-modifier#readme","bugs":{"url":"https://github.com/ember-modifier/ember-modifier/issues"},"dist":{"shasum":"b82052afe941f3b27c0840019992d59466dfbd77","tarball":"https://registry.npmjs.org/ember-modifier/-/ember-modifier-3.2.5.tgz","fileCount":32,"integrity":"sha512-66YA4pQijoDIAfoI0pYAhjYWu/VrTaD3BfxpA311hLIoBlaI2QQY/LR+32aah1EvKY/yInnCJA5wcl7C+f3mkg==","signatures":[{"sig":"MEYCIQDanpcO/N6J9bUsDvqTIAJd4f1cXb2OErqozcjubUxNVQIhAJV0bdm4Udvl6Jhl3uOJ7R5KT7fXsKqfVR4lcRObEdba","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":136009,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiTbagACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmrbtg/+MF1ndlOQDvm/AWT3q84l8zg314Rtp+Ggt+tX4865SYFjv9H6\r\nJ4e9KKcqlty871Gg/ERf4cAVMGqRA3ynpIyqg2SELxrhJIIVoBBRGLlZCyo4\r\nd2pUInJsGVzjsDyOdelfbL48qSlXPzTCk7rQ+NxqQyA53gSj0c713ou6Dkle\r\nVQpDte8l9KvzNdz6S+nbKnz/0aQLQ3ksoHMCP65bKcmoVlXpTtZpY0OqL0BG\r\nUWiy6Ib+YbcQVOldXYghVRdm6f+f8WpXbW4+9UQZ4KmXbIiKNkgnNKh2AtqV\r\n99JqOGX/6ad/2s6cDxS5UxW61gSCi6QDluRhTfxN5WtknI+aH6aZPNISRY0t\r\nNSjHHqaZ1ar2HtX4mubAOTfVDRCuCLkU6fO0G8NXM7Swqs/9iMgQ0HNcxQli\r\nyky9SyiSSV5RX1oA3Qhw48ZgySeDRC6R7yF5O2aqcc/S0AsLWZTPcr1HIdPo\r\n5IkKVB4M5x2VMnMCyd/5mJy/7lU009amQpzKkYahIu2uRPa+R3OeZPvNLIGC\r\nU7IhXzD71f23VK88hG7EGapQOLU30M8q54I1s31bb8+IzgeKPGC/iA1e+LHc\r\nWi7Rte4G8JDqnqxnAayq60Q14rz/5D3W2tYVBOfWWT7+XDVAmNxROay5w3IR\r\nfEjrZcfIc/aI3KD65DQYNscXGBJV88TwXK8=\r\n=uF8v\r\n-----END PGP SIGNATURE-----\r\n"},"ember":{"edition":"octane"},"types":"index.d.ts","volta":{"node":"14.19.0"},"engines":{"node":"12.* || >= 14"},"gitHead":"b50ca7f4bb6a0126641c9dd44e2bf333f64d57b3","scripts":{"lint":"npm-run-all --aggregate-output --continue-on-error --parallel 'lint:!(fix)'","test":"npm-run-all test:*","build":"ember build --environment=production","clean":"ember ts:clean","start":"ember serve","lint:js":"eslint .","lint:ts":"tsc --noEmit","pretest":"npm run prepublishOnly","lint:fix":"npm-run-all --aggregate-output --continue-on-error --parallel lint:*:fix","lint:hbs":"ember-template-lint .","posttest":"npm run clean","test:ember":"ember test","test:types":"ember try:each --config-path=./config/ember-try-typescript.js","lint:js:fix":"eslint . --fix","postpublish":"npm run clean","lint:hbs:fix":"ember-template-lint . --fix","prepublishOnly":"ember ts:precompile","prepublish:types":"ember ts:precompile","test:ember-compatibility":"ember try:each"},"_npmUser":{"name":"chriskrycho","email":"chris@chriskrycho.com"},"prettier":{"singleQuote":true},"release-it":{"git":{"tagName":"v${version}"},"github":{"release":true,"tokenRef":"GITHUB_AUTH","releaseName":"v${version}"},"plugins":{"release-it-lerna-changelog":{"infile":"CHANGELOG.md","launchEditor":true}},"changelog":{"labels":{"bug":":bug: Bug Fix","breaking":":boom: Breaking Change","internal":":house: Internal","deprecation":":no_entry_sign: Deprecations","enhancement":":rocket: Enhancement","documentation":":memo: Documentation"}}},"repository":{"url":"git+https://github.com/ember-modifier/ember-modifier.git","type":"git"},"_npmVersion":"6.14.16","description":"A library for writing Ember modifiers","directories":{"doc":"doc","test":"tests"},"ember-addon":{"configPath":"tests/dummy/config"},"_nodeVersion":"14.19.0","dependencies":{"ember-cli-babel":"^7.26.6","ember-cli-typescript":"^5.0.0","ember-cli-string-utils":"^1.1.0","ember-compatibility-helpers":"^1.2.5","ember-cli-normalize-entity-name":"^1.0.0"},"publishConfig":{"registry":"https://registry.npmjs.org"},"_hasShrinkwrap":false,"devDependencies":{"qunit":"^2.17.2","eslint":"^8.1.0","rimraf":"^3.0.2","webpack":"^5.58.2","prettier":"^2.4.1","ember-cli":"^4.1.0","ember-try":"^2.0.0","loader.js":"^4.7.0","qunit-dom":"^2.0.0","release-it":"^14.11.6","typescript":"^4.5.2","@types/rsvp":"^4.0.4","ember-qunit":"^5.1.5","expect-type":"^0.13.0","npm-run-all":"^4.1.5","@types/qunit":"^2.11.2","ember-source":"^4.1.0","ember-cli-sri":"^2.1.1","ember-resolver":"^8.0.3","ember-cli-uglify":"^3.0.0","@glimmer/tracking":"^1.0.4","ember-auto-import":"^2.2.3","@glimmer/component":"^1.0.4","@types/ember-qunit":"~5.0.0","broccoli-asset-rev":"^3.0.0","ember-cli-htmlbars":"^6.0.1","eslint-plugin-node":"^11.1.0","@ember/test-helpers":"^2.5.0","@types/ember__debug":"~4.0.1","ember-template-lint":"^4.3.0","eslint-plugin-ember":"^10.5.7","@babel/eslint-parser":"^7.15.8","@types/ember-resolver":"^5.0.10","@types/ember__modifier":"~4.0.1","eslint-config-prettier":"^8.3.0","eslint-plugin-prettier":"^4.0.0","ember-load-initializers":"^2.1.2","@babel/preset-typescript":"^7.15.0","@ember/optional-features":"^2.0.0","ember-source-channel-url":"^3.0.0","@typescript-eslint/parser":"^5.2.0","ember-decorators-polyfill":"^1.1.5","@types/ember__test-helpers":"^2.0.2","release-it-lerna-changelog":"^4.0.1","ember-cli-dependency-checker":"^3.2.0","ember-cli-inject-live-reload":"^2.1.0","ember-maybe-import-regenerator":"^1.0.0","ember-export-application-global":"^2.0.1","@typescript-eslint/eslint-plugin":"^5.2.0","ember-disable-prototype-extensions":"^1.1.3"},"_npmOperationalInternal":{"tmp":"tmp/ember-modifier_3.2.5_1649260192755_0.42520900736648737","host":"s3://npm-registry-packages"}},"3.2.6":{"name":"ember-modifier","version":"3.2.6","keywords":["ember-addon"],"author":"","license":"MIT","_id":"ember-modifier@3.2.6","maintainers":[{"name":"rwjblue","email":"me@rwjblue.com"},{"name":"chriskrycho","email":"chris@chriskrycho.com"},{"name":"pzuraq","email":"opensource@pzuraq.com"}],"homepage":"https://github.com/ember-modifier/ember-modifier#readme","bugs":{"url":"https://github.com/ember-modifier/ember-modifier/issues"},"dist":{"shasum":"c4161cab1f425f8ebe9c91d62f79b6e5be18cb9f","tarball":"https://registry.npmjs.org/ember-modifier/-/ember-modifier-3.2.6.tgz","fileCount":32,"integrity":"sha512-bACaEfGzdnLzQOfkAVeDutCsbOJ0OQqTloLqmWihUx2PLAKWPq6vq4iiTnzVn/LvwI/REVcfc6Ks2nhr6GIMzQ==","signatures":[{"sig":"MEQCIDB3K1qoawY6kl7zFzcC+lhz+r4o7S2pj0XC6aAQEBiVAiAWLqRosL42oKo7BCoSsbpb/f4rWxbJZqHMbRhiji9TTQ==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":136227,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiT3AsACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmoXeg//XGiwrDP4VodF7gt2o93C1EcbLe23k5RloS63XAI3Dz3pLDyZ\r\nhSZcyauItua/4bGhZ50I8MJTKrxMJUq2Rsen4KlE20cnGqWw5FobmbPDp/GK\r\n+gGR2hKVcFOprRAdeBsS7OL8RA9VtKjEW75ZHA/Gw6N1hogRI7EJWap+kO3g\r\niKYnx73yAsdMj0l7/uCqM0O5tnBAuJNZyBMtZ516/XmJ9/WcBEA1fDj2uo9e\r\nNh1AKRqJNEyOzdRwoPxeqflmoNjnkf6/7aq1330prBF24UwzHlfS5hug4Gnr\r\nky/DYAT6qNfhHjfXMIVRwbmtB3u5VUtiYzKfEBhHRQyptUnJYZjfHKrFnjqK\r\nGxLgx8i5svu5gW2RdvrHlgfGK3Fl1dB+c4Y3OCdgqhDmjNMb1XNtEmuNh5dV\r\n3ktrLHYWnHlmVNPowGhUO5DnLCxo0zT9gbz1cC54VMEuSmMz7U/aty9U2/LV\r\n4IAXcHiG68OS4HmfREIN1u0MElWpNnHr1zFJhoOmc5BOK1ePFPBLyW9LwRy8\r\ngZXOU1NTjh4m+jMmdcZimK4gjxV//8uInLCkSBhCWEZxkpeRi3RhQz5K13Hp\r\niCV93BUEnBQ6uRfJr2Ct9z8U7tFM9RL13NK1xLjb7ScPa2PeQM7utX9yfs9n\r\nAmAiJ2vgtlFdniPZObWdR7io6PZXMk5Sg0Y=\r\n=TbPu\r\n-----END PGP SIGNATURE-----\r\n"},"ember":{"edition":"octane"},"types":"index.d.ts","volta":{"node":"14.19.0"},"engines":{"node":"12.* || >= 14"},"gitHead":"4b31ee0e14f9b8e1f5dd486bf560fbc148079220","scripts":{"lint":"npm-run-all --aggregate-output --continue-on-error --parallel 'lint:!(fix)'","test":"npm-run-all test:*","build":"ember build --environment=production","clean":"ember ts:clean","start":"ember serve","lint:js":"eslint .","lint:ts":"tsc --noEmit","pretest":"npm run prepublishOnly","lint:fix":"npm-run-all --aggregate-output --continue-on-error --parallel lint:*:fix","lint:hbs":"ember-template-lint .","posttest":"npm run clean","test:ember":"ember test","test:types":"ember try:each --config-path=./config/ember-try-typescript.js","lint:js:fix":"eslint . --fix","postpublish":"npm run clean","lint:hbs:fix":"ember-template-lint . --fix","prepublishOnly":"ember ts:precompile","prepublish:types":"ember ts:precompile","test:ember-compatibility":"ember try:each"},"_npmUser":{"name":"chriskrycho","email":"chris@chriskrycho.com"},"prettier":{"singleQuote":true},"release-it":{"git":{"tagName":"v${version}"},"github":{"release":true,"tokenRef":"GITHUB_AUTH","releaseName":"v${version}"},"plugins":{"release-it-lerna-changelog":{"infile":"CHANGELOG.md","launchEditor":true}},"changelog":{"labels":{"bug":":bug: Bug Fix","breaking":":boom: Breaking Change","internal":":house: Internal","deprecation":":no_entry_sign: Deprecations","enhancement":":rocket: Enhancement","documentation":":memo: Documentation"}}},"repository":{"url":"git+https://github.com/ember-modifier/ember-modifier.git","type":"git"},"_npmVersion":"6.14.16","description":"A library for writing Ember modifiers","directories":{"doc":"doc","test":"tests"},"ember-addon":{"configPath":"tests/dummy/config"},"_nodeVersion":"14.19.0","dependencies":{"ember-cli-babel":"^7.26.6","ember-cli-typescript":"^5.0.0","ember-cli-string-utils":"^1.1.0","ember-compatibility-helpers":"^1.2.5","ember-cli-normalize-entity-name":"^1.0.0"},"publishConfig":{"registry":"https://registry.npmjs.org"},"_hasShrinkwrap":false,"devDependencies":{"qunit":"^2.17.2","eslint":"^8.1.0","rimraf":"^3.0.2","webpack":"^5.58.2","prettier":"^2.4.1","ember-cli":"^4.1.0","ember-try":"^2.0.0","loader.js":"^4.7.0","qunit-dom":"^2.0.0","release-it":"^14.11.6","typescript":"^4.5.2","@types/rsvp":"^4.0.4","ember-qunit":"^5.1.5","expect-type":"^0.13.0","npm-run-all":"^4.1.5","@types/qunit":"^2.11.2","ember-source":"^4.1.0","ember-cli-sri":"^2.1.1","ember-resolver":"^8.0.3","ember-cli-uglify":"^3.0.0","@glimmer/tracking":"^1.0.4","ember-auto-import":"^2.2.3","@glimmer/component":"^1.0.4","@types/ember-qunit":"~5.0.0","broccoli-asset-rev":"^3.0.0","ember-cli-htmlbars":"^6.0.1","eslint-plugin-node":"^11.1.0","@ember/test-helpers":"^2.5.0","@types/ember__debug":"~4.0.1","ember-template-lint":"^4.3.0","eslint-plugin-ember":"^10.5.7","@babel/eslint-parser":"^7.15.8","@types/ember-resolver":"^5.0.10","@types/ember__modifier":"~4.0.1","eslint-config-prettier":"^8.3.0","eslint-plugin-prettier":"^4.0.0","ember-load-initializers":"^2.1.2","@babel/preset-typescript":"^7.15.0","@ember/optional-features":"^2.0.0","ember-source-channel-url":"^3.0.0","@typescript-eslint/parser":"^5.2.0","ember-decorators-polyfill":"^1.1.5","@types/ember__test-helpers":"^2.0.2","release-it-lerna-changelog":"^4.0.1","ember-cli-dependency-checker":"^3.2.0","ember-cli-inject-live-reload":"^2.1.0","ember-maybe-import-regenerator":"^1.0.0","ember-export-application-global":"^2.0.1","@typescript-eslint/eslint-plugin":"^5.2.0","ember-disable-prototype-extensions":"^1.1.3"},"_npmOperationalInternal":{"tmp":"tmp/ember-modifier_3.2.6_1649373228198_0.029452509084501033","host":"s3://npm-registry-packages"}},"3.2.7":{"name":"ember-modifier","version":"3.2.7","keywords":["ember-addon"],"author":"","license":"MIT","_id":"ember-modifier@3.2.7","maintainers":[{"name":"rwjblue","email":"me@rwjblue.com"},{"name":"chriskrycho","email":"chris@chriskrycho.com"},{"name":"pzuraq","email":"opensource@pzuraq.com"}],"homepage":"https://github.com/ember-modifier/ember-modifier#readme","bugs":{"url":"https://github.com/ember-modifier/ember-modifier/issues"},"dist":{"shasum":"f2d35b7c867cbfc549e1acd8d8903c5ecd02ea4b","tarball":"https://registry.npmjs.org/ember-modifier/-/ember-modifier-3.2.7.tgz","fileCount":32,"integrity":"sha512-ezcPQhH8jUfcJQbbHji4/ZG/h0yyj1jRDknfYue/ypQS8fM8LrGcCMo0rjDZLzL1Vd11InjNs3BD7BdxFlzGoA==","signatures":[{"sig":"MEYCIQCpSqIvy/OfDziC9UQyhTowEDRQA89dYBHyfiJe0mAR2QIhALWG83SNREP1ucBD2lLXTV/e6VUVbff+9HtqQtQCpUZ/","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":136546,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiUEWlACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrpRQ//dygunpBaW+yD2UX/+Vnsyw6tPub8EesccfuJ8R+gxwSj3D51\r\n6BX4sKKFLRn+5cEkPf2d00JvHokVTGXBVgHXxm3ik17Nj/r7etf9B58RSEm5\r\nfOU3f1094Tr93FAqTyfLsSTGY0QSwXWhKLFfxpHxaorsnm2nP47h/GdyAeeM\r\nfTIEe20mZzWktjim/6g6++XxIYepqjIJE+eUp9GvtbmocqQMfTM5Q/jw58yW\r\novmLT74Xy/nVUqyMlw8+R3FLHA/OowR3RoDQcnfemOjlMny0ho6/7tA+v7aB\r\nwcP2FMxDrei/NedM2R+GqNtSd4wPW5d7yXF+35Ay67nj3d3Bf5YVhwHLbPaB\r\nxJE+u31Vumatgz6JNsViVzTAt8VTYFnPlyd+ex6SsRfnTjqsdZgCLVzAezgI\r\nz+PTMmp1AgrL8vQ+Qx99BNzg4BNQl/WpmktVjDs2cmZMjdWGgTFxsgDAYMO8\r\nbZXOXrU2164kxKzI2HuJ8szIVSYBIBk8LOL2qqXcnvasB01K8dKrnbaA2bWi\r\n6c9A2/+jFWlhWM8jfJHHin2r3Cj0kFROSaBxIPOXg2xJ8jMMdBbxu96FY6Ow\r\nyYcOi0KadLwchGz93cSQBLwXDKhpEkOgWs/KvJ77zyuffRaDWd6zvn9SnAU6\r\nhWaAkrSfTuuUiFgN8VtXVross2yuDyMnkhE=\r\n=tk6J\r\n-----END PGP SIGNATURE-----\r\n"},"ember":{"edition":"octane"},"types":"index.d.ts","volta":{"node":"14.19.0"},"engines":{"node":"12.* || >= 14"},"gitHead":"6f13ab5abf18be44fbb0f0f6932c3c2e680981d3","scripts":{"lint":"npm-run-all --aggregate-output --continue-on-error --parallel 'lint:!(fix)'","test":"npm-run-all test:*","build":"ember build --environment=production","clean":"ember ts:clean","start":"ember serve","lint:js":"eslint .","lint:ts":"tsc --noEmit","pretest":"npm run prepublishOnly","lint:fix":"npm-run-all --aggregate-output --continue-on-error --parallel lint:*:fix","lint:hbs":"ember-template-lint .","posttest":"npm run clean","test:ember":"ember test","test:types":"ember try:each --config-path=./config/ember-try-typescript.js","lint:js:fix":"eslint . --fix","postpublish":"npm run clean","lint:hbs:fix":"ember-template-lint . --fix","prepublishOnly":"ember ts:precompile","prepublish:types":"ember ts:precompile","test:ember-compatibility":"ember try:each"},"_npmUser":{"name":"chriskrycho","email":"chris@chriskrycho.com"},"prettier":{"singleQuote":true},"release-it":{"git":{"tagName":"v${version}"},"github":{"release":true,"tokenRef":"GITHUB_AUTH","releaseName":"v${version}"},"plugins":{"release-it-lerna-changelog":{"infile":"CHANGELOG.md","launchEditor":true}},"changelog":{"labels":{"bug":":bug: Bug Fix","breaking":":boom: Breaking Change","internal":":house: Internal","deprecation":":no_entry_sign: Deprecations","enhancement":":rocket: Enhancement","documentation":":memo: Documentation"}}},"repository":{"url":"git+https://github.com/ember-modifier/ember-modifier.git","type":"git"},"_npmVersion":"6.14.16","description":"A library for writing Ember modifiers","directories":{"doc":"doc","test":"tests"},"ember-addon":{"configPath":"tests/dummy/config"},"_nodeVersion":"14.19.0","dependencies":{"ember-cli-babel":"^7.26.6","ember-cli-typescript":"^5.0.0","ember-cli-string-utils":"^1.1.0","ember-compatibility-helpers":"^1.2.5","ember-cli-normalize-entity-name":"^1.0.0"},"publishConfig":{"registry":"https://registry.npmjs.org"},"_hasShrinkwrap":false,"devDependencies":{"qunit":"^2.17.2","eslint":"^8.1.0","rimraf":"^3.0.2","webpack":"^5.58.2","prettier":"^2.4.1","ember-cli":"^4.1.0","ember-try":"^2.0.0","loader.js":"^4.7.0","qunit-dom":"^2.0.0","release-it":"^14.11.6","typescript":"^4.5.2","@types/rsvp":"^4.0.4","ember-qunit":"^5.1.5","expect-type":"^0.13.0","npm-run-all":"^4.1.5","@types/qunit":"^2.11.2","ember-source":"^4.1.0","ember-cli-sri":"^2.1.1","ember-resolver":"^8.0.3","ember-cli-uglify":"^3.0.0","@glimmer/tracking":"^1.0.4","ember-auto-import":"^2.2.3","@glimmer/component":"^1.0.4","@types/ember-qunit":"~5.0.0","broccoli-asset-rev":"^3.0.0","ember-cli-htmlbars":"^6.0.1","eslint-plugin-node":"^11.1.0","@ember/test-helpers":"^2.5.0","@types/ember__debug":"~4.0.1","ember-template-lint":"^4.3.0","eslint-plugin-ember":"^10.5.7","@babel/eslint-parser":"^7.15.8","@types/ember-resolver":"^5.0.10","@types/ember__modifier":"~4.0.1","eslint-config-prettier":"^8.3.0","eslint-plugin-prettier":"^4.0.0","ember-load-initializers":"^2.1.2","@babel/preset-typescript":"^7.15.0","@ember/optional-features":"^2.0.0","ember-source-channel-url":"^3.0.0","@typescript-eslint/parser":"^5.2.0","ember-decorators-polyfill":"^1.1.5","@types/ember__test-helpers":"^2.0.2","release-it-lerna-changelog":"^4.0.1","ember-cli-dependency-checker":"^3.2.0","ember-cli-inject-live-reload":"^2.1.0","ember-maybe-import-regenerator":"^1.0.0","ember-export-application-global":"^2.0.1","@typescript-eslint/eslint-plugin":"^5.2.0","ember-disable-prototype-extensions":"^1.1.3"},"_npmOperationalInternal":{"tmp":"tmp/ember-modifier_3.2.7_1649427877292_0.9703578044740495","host":"s3://npm-registry-packages"}},"4.0.0-beta.1":{"name":"ember-modifier","version":"4.0.0-beta.1","keywords":["ember-addon"],"author":"","license":"MIT","_id":"ember-modifier@4.0.0-beta.1","maintainers":[{"name":"rwjblue","email":"me@rwjblue.com"},{"name":"chriskrycho","email":"chris@chriskrycho.com"},{"name":"pzuraq","email":"opensource@pzuraq.com"}],"homepage":"https://github.com/ember-modifier/ember-modifier#readme","bugs":{"url":"https://github.com/ember-modifier/ember-modifier/issues"},"dist":{"shasum":"12b791ab744beb6a6caab3b7730f7eeb52a48509","tarball":"https://registry.npmjs.org/ember-modifier/-/ember-modifier-4.0.0-beta.1.tgz","fileCount":9,"integrity":"sha512-Mg4NRDCbydlF9hXUzmR9B89GcImA/oDFSK3nFNmy/nQLn5B30zDx8OlL132g9vnnbH/DavlxXwsuv3rDs9g13A==","signatures":[{"sig":"MEYCIQCW1zSZZsyoEWJYE889/ro8G12znc0/aje5MySDCZDihgIhAJl5y/2MNoBPHXpo3BuJt2JPGPjOwEjpu0xc8ZvsgEpq","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":80415,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiYy5CACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmr7PBAAlhLglMLNrosrc20vBWKwf5OtNaHJcad+cTyPcZ+yKIFWTfqA\r\nYqu4smUj2/bPwf5JYXIYSafTF69CNXj+upxRhVyamgm+RdcjzdR4iDWTiNNh\r\n0fJH+vFHKrlImwWla7SW5BHw8bLA60KyYZxX7mBaxcysHijhsJoUjcZkdL9/\r\noDsuXxxTcLZPblKTCbmJxyu9ulnKvfFtGoj3MDUDjdIc8GI6O+IoXQY+RhV7\r\nW8bsX6+BajoseruBnKXOYCLa9hnMey7E5P8wShHUJHqUbsE/dOBqWz52I+Mu\r\nO9ci09vP2feakaclLeKX2eeDVcJTsNICm6tD5XHAKCxf4StCcSTwUU/BaDoY\r\nJN8vc9s9b74KrEu870Mrj1Te3KXhSkbITDIkZS6/1YbXb237f9IXmbwRptDz\r\ngNKSTTfR6d6ScGBxsqp4PAmd3QLKbkR+2XnzCxBcjy2OxgyJbXfIu31SU8wN\r\nH6d038e0SoaHZnmWS3nNH4KLrAUP/sKmIpyNDH1YDIBxb3kc6yI+96ukyRo/\r\nJuBJqNCoPiCPzpLupQoFdpcbm1um7kWtScQeONrY8TxO/dQ63V6962FF7nZW\r\nQSTsF11yrVg1AV1+wZRLTvT535E84EWq+/+dYJKubzn2pP6NAmOwMdbYb4M0\r\nat+PmnpUxbb9p98/62Y2fPGGYARFQUGaJ8c=\r\n=paFo\r\n-----END PGP SIGNATURE-----\r\n"},"ember":{"edition":"octane"},"volta":{"extends":"../package.json"},"readme":"ember-modifier\n==============================================================================\n\nThis addon provides an API for authoring [element modifiers] in Ember. It\nmirrors Ember's [helper] API, with variations for writing both simple\nfunction-based modifiers and more complicated class-based modifiers.\n\n[element modifiers]: https://blog.emberjs.com/2019/03/06/coming-soon-in-ember-octane-part-4.html\n[helper]: https://octane-guides-preview.emberjs.com/release/templates/writing-helpers\n\n:warning: **NOTE:** this is the README for the unreleased v4 version! For the v3 README, see [here](https://github.com/ember-modifier/ember-modifier/blob/v3/README.md). :warning:\n\n- [Compatibility](#compatibility)\n  - [TypeScript](#typescript)\n- [Installation](#installation)\n- [Philosophy](#philosophy)\n  - [Whoa whoa whoa, hold on, what's a _\"side effect\"_?](#whoa-whoa-whoa-hold-on-whats-a-side-effect)\n  - [Managing \"side effects\" effectively](#managing-side-effects-effectively)\n- [Usage](#usage)\n  - [Function-Based Modifiers](#function-based-modifiers)\n    - [Generating a Function-Based Modifier](#generating-a-function-based-modifier)\n    - [Example without Cleanup](#example-without-cleanup)\n    - [Example with Cleanup](#example-with-cleanup)\n  - [Class-Based Modifiers](#class-based-modifiers)\n    - [Generating a Class Modifier](#generating-a-class-modifier)\n    - [Example without Cleanup](#example-without-cleanup-1)\n    - [Example with Cleanup](#example-with-cleanup-1)\n    - [Example with Service Injection](#example-with-service-injection)\n    - [API](#api)\n- [TypeScript](#typescript-1)\n  - [The `Signature` type](#the-signature-type)\n  - [Examples with TypeScript](#examples-with-typescript)\n    - [Function-based modifier](#function-based-modifier)\n    - [Class-based](#class-based)\n- [Contributing](#contributing)\n- [License](#license)\n\nCompatibility\n------------------------------------------------------------------------------\n\n* Ember.js v3.24 or above\n* Ember CLI v2.13 or above\n* Node.js v12 or above\n\n### TypeScript\n\nThis project follows the current draft of [the Semantic Versioning for TypeScript Types][semver] proposal.\n\n- **Currently supported TypeScript versions:** v4.2, v4.3, v4.4, v4.5, and v4.6\n- **Compiler support policy:** [simple majors][sm]\n- **Public API:** all published types not in a `-private` module are public\n\n[semver]: https://github.com/chriskrycho/ember-rfcs/blob/semver-for-ts/text/0730-semver-for-ts.md\n[sm]: https://github.com/chriskrycho/ember-rfcs/blob/semver-for-ts/text/0730-semver-for-ts.md#simple-majors\n\n\nInstallation\n------------------------------------------------------------------------------\n\n```\nember install ember-modifier\n```\n\n\nPhilosophy\n------------------------------------------------------------------------------\n\nModifiers are a basic primitive for interacting with the DOM in Ember. For\nexample, Ember ships with a built-in modifier, `{{on}}`:\n\n```hbs\n<button {{on \"click\" @onClick}}>\n  {{@text}}\n</button>\n```\n\nAll modifiers get applied to elements directly this way (if you see a similar\nvalue that _isn't_ in an element, it is probably a _helper_ instead), and they\nare passed the element when applying their effects.\n\nConceptually, modifiers take _tracked, derived state_, and turn it into some\nsort of _side effect_ related in some way to the DOM element they are applied\nto.\n\n### Whoa whoa whoa, hold on, what's a _\"side effect\"_?\n\nA \"side effect\" is something that happens in programming all the time. Here's an\nexample of one in an Ember component that attempts to make a button like in the\nfirst example, but without modifiers:\n\n```js\n// 🛑 DO NOT COPY THIS 🛑\nimport Component from '@glimmer/component';\n\nexport default class MyButton extends Component {\n  get setupEventHandler() {\n    document.querySelector('#my-button').addEventListener(this.args.onClick);\n\n    return undefined;\n  }\n}\n```\n```hbs\n<button id=\"#my-button\">\n  {{this.setupEventHandler}}\n\n  {{@text}}\n</button>\n```\n\nWe can see by looking at the `setupEventListener` getter that it isn't actually\nreturning a value. Instead, it always returns `undefined`. However, it also adds\nthe `@onClick` argument as an _event listener_ to the button in the template\nwhen the getter is run, as the template is rendering, which is a _side effect_\n- it is an effect of running the code that doesn't have anything to do with the\n\"main\" purpose of that code, in this case to return a dynamically computed\nvalue. In fact, this code doesn't compute a value at all, so this component is\n_misusing_ the getter in order to run its side effect whenever it is rendered in\nthe template.\n\nUnmanaged side effects can make code very difficult to reason about, since any\nfunction could be updating a value elsewhere. In fact, the code above is very\nbuggy:\n\n1. If the `@onClick` argument ever changes, it won't remove the old event\n   listener, it'll just keep adding new ones.\n2. It won't remove the old event listener when the component is removed.\n3. It uses a document element selector that may not be unique, and it has no\n   guarantee that the element will exist when it runs.\n4. It _will_ run in Fastboot/Server Side Rendering, where no DOM exists at all,\n   and it'll throw errors because of this.\n\nHowever, there are lots of times where its difficult to write code that\n_doesn't_ have side effects. Sometimes it would mean having to rewrite a large\nportion of an application. Sometimes, like in the case of modifying DOM, there\nisn't a clear way to do it at _all_ with just getters and components.\n\nThis is where _modifiers_ come in. Modifiers exist as a way to bridge the gap\nbetween derived state and side effects in way that is _contained_ and\n_consistent_, so that users of a modifier don't have to think about them.\n\n### Managing \"side effects\" effectively\n\nLet's look again at our original example:\n\n```hbs\n<button {{on \"click\" @onClick}}>\n  {{@text}}\n</button>\n```\n\nWe can see pretty clearly from this template that Ember will:\n\n1. Create a `<button>` element\n2. Append the contents of the `@text` argument to that button\n3. Add a click event handler to the button that runs the `@onClick` argument\n\nIf `@text` or `@onClick` ever change, Ember will keep everything in sync for us.\nWe don't ever have to manually set `element.textContent` or update anything\nourselves. In this way, we can say the template is _declarative_ - it tells\nEmber what we want the output to be, and Ember handles all of the bookkeeping\nitself.\n\nHere's how we could _implement_ the `{{on}}` modifier so that it always keeps\nthings in sync correctly:\n\n```js\nimport { modifier } from 'ember-modifier';\n\nexport default modifier((element, [eventName, handler]) => {\n  element.addEventListener(eventName, handler);\n\n  return () => {\n    element.removeEventListener(eventName, handler);\n  }\n});\n```\n\nHere, we setup the event listener using the positional parameters passed to the\nmodifier. Then, we return a _destructor_ - a function that _undoes_ our setup,\nand is effectively the _opposite_ side effect. This way, if the `@onClick`\nhandler ever changes, we first teardown the first event listener we added -\nleaving the element in its _original_ state before the modifier ever ran - and\nthen setup the new handler.\n\nThis is what allows us to treat the `{{on}}` modifier as if it were just like\nthe `{{@text}}` value we put in the template. While it _is_ side effecting, it\nknows how to setup and teardown that side effect and manage its state. The side\neffect is _contained_ - it doesn't escape into the rest of our application, it\ndoesn't cause other unrelated changes, and we can think about it as another\npiece of declarative, derived state. Just another part of the template!\n\nIn general, when writing modifiers, especially general purpose/reusable\nmodifiers, they should be designed with this in mind. Which specific effects are\nthey trying to accomplish, how to manage them effectively, and how to do it in\na way that is _transparent_ to the user of the modifier.\n\nUsage\n------------------------------------------------------------------------------\n\nThis addon does not provide any modifiers out of the box. Instead, this library\nallows you to write your own. There are two ways to write modifiers:\n\n1. Function-based modifiers\n2. Class-based modifiers\n\nThese are analogous to Ember's Helper APIs, `helper` and `Helper`.\n\n### Function-Based Modifiers\n\n`modifier` is an API for writing simple modifiers. For instance, you could\nimplement Ember's built-in `{{on}}` modifier like so with `modifier`:\n\n```js\n// /app/modifiers/on.js\nimport { modifier } from 'ember-modifier';\n\nexport default modifier((element, [eventName, handler]) => {\n  element.addEventListener(eventName, handler);\n\n  return () => {\n    element.removeEventListener(eventName, handler);\n  }\n});\n```\n\nFunction-based modifiers consist of a function that receives:\n\n1. The `element`\n2. An array of positional arguments\n3. An object of named arguments\n\n```js\nmodifier((element, positional, named) => { /* */ });\n```\n\nThis function runs the first time when the element the modifier was applied to\nis inserted into the DOM, and it _autotracks_ while running. Any tracked values\nthat it accesses will be tracked, including the arguments it receives, and if\nany of them changes, the function will run again.[^changes]\n\nThe modifier can also optionally return a _destructor_. The destructor function\nwill be run just before the next update, and when the element is being removed\nentirely. It should generally clean up the changes that the modifier made in the\nfirst place.\n\n[^changes]: As with autotracking in general, “changes” here actually means that the tracked property was set—even if it was set to the same value. This is because autotracking does not cache the *values* of properties, only the last time they changed. See [this blog post](https://v5.chriskrycho.com/journal/autotracking-elegant-dx-via-cutting-edge-cs/) for a deep dive on how it works!\n\n#### Generating a Function-Based Modifier\n\nTo create a modifier (and a corresponding integration test), run:\n\n```\nember g modifier scroll-top\n```\n\n#### Example without Cleanup\n\nFor example, if you wanted to implement your own `scrollTop` modifier (similar\nto [this][scroll-example]), you may do something like this:\n\n[scroll-example]: https://github.com/emberjs/ember-render-modifiers#example-scrolling-an-element-to-a-position\n\n```js\n// app/modifiers/scroll-top.js\nimport { modifier } from 'ember-modifier';\n\nexport default modifier((element, [scrollPosition]) => {\n  element.scrollTop = scrollPosition;\n})\n```\n```hbs\n<div class=\"scroll-container\" {{scroll-top @scrollPosition}}>\n  {{yield}}\n</div>\n```\n\n#### Example with Cleanup\n\nIf the functionality you add in the modifier needs to be torn down when the\nelement is removed, you can return a function for the teardown method.\n\nFor example, if you wanted to have your elements dance randomly on the page\nusing `setInterval`, but you wanted to make sure that was canceled when the\nelement was removed, you could do:\n\n```js\n// app/modifiers/move-randomly.js\nimport { modifier } from 'ember-modifier';\n\nconst { random, round } = Math;\n\nexport default modifier(element => {\n  const id = setInterval(() => {\n    const top = round(random() * 500);\n    const left = round(random() * 500);\n    element.style.transform = `translate(${left}px, ${top}px)`;\n  }, 1000);\n\n  return () => clearInterval(id);\n});\n\n```\n```hbs\n<button {{move-randomly}}>\n  {{yield}}\n</button>\n```\n\n### Class-Based Modifiers\n\nSometimes you may need to do something more complicated than what can be handled\nby function-based modifiers. For instance:\n\n1. You may need to inject services and access them\n2. You may need fine-grained control of updates, either for performance or\n   convenience reasons, and don't want to teardown the state of your modifier\n   every time only to set it up again.\n3. You may need to store some local state within your modifier.\n\nIn these cases, you can use a _class-based modifier_ instead. Here's how you\nwould implement the `{{on}}` modifier with a class:\n\n```js\nimport Modifier from 'ember-modifier';\nimport { registerDestructor } from '@ember/destroyable';\n\nfunction cleanup(instance: OnModifier) {\n  let { element, event, handler } = instance;\n\n  if (element && event && handler) {\n    element.removeEventListener(event, handler);\n\n    instance.element = null;\n    instance.event = null;\n    instance.handler = null;\n  }\n}\n\nexport default class OnModifier extends Modifier {\n  element = null;\n  event = null;\n  handler = null;\n\n  modify(element, [event, handler]) {\n    this.addEventListener(element, event, handler);\n    registerDestructor(this, cleanup)\n  }\n\n  // methods for reuse\n  addEventListener = (element, event, handler) => {\n    // Store the current element, event, and handler for when we need to remove\n    // them during cleanup.\n    this.element = element;\n    this.event = event;\n    this.handler = handler;\n\n    element.addEventListener(event, handler);\n  };\n}\n```\n\nWhile this is slightly more complicated than the function-based version, but\nthat complexity comes along with much more _control_.\n\nAs with function-based modifiers, the lifecycle hooks of class modifiers are\n_tracked_. When they run, then any values they access will be added to the\nmodifier, and the modifier will update if any of those values change.\n\n#### Generating a Class Modifier\n\nTo create a modifier (and a corresponding integration test), run:\n\n```\nember g modifier scroll-top --class\n```\n\n#### Example without Cleanup\n\nFor example, let's say you want to implement your own `{{scroll-position}}`\nmodifier (similar to [this](https://github.com/emberjs/ember-render-modifiers#example-scrolling-an-element-to-a-position)).\n\nThis modifier can be attached to any element and accepts a single positional\nargument. When the element is inserted, and whenever the argument is updated, it\nwill set the element's `scrollTop` property to the value of its argument.\n\n(Note that this example does not require the use of a class, and could be\nimplemented equally well with a function-based modifier!)\n\n```js\n// app/modifiers/scroll-position.js\nimport Modifier from 'ember-modifier';\n\nexport default class ScrollPositionModifier extends Modifier {\n  modify(element, [scrollPosition], { relative }) {\n    if(relative) {\n      element.scrollTop += scrollPosition;\n    } else {\n      element.scrollTop = scrollPosition;\n    }\n  }\n}\n```\n\nUsage:\n\n```handlebars\n{{!-- app/components/scroll-container.hbs --}}\n\n<div\n  class=\"scroll-container\"\n  style=\"width: 300px; heigh: 300px; overflow-y: scroll\"\n  {{scroll-position this.scrollPosition relative=false}}\n>\n  {{yield this.scrollToTop}}\n</div>\n```\n\n```js\n// app/components/scroll-container.js\n\nimport Component from '@glimmer/component';\nimport { tracked } from '@glimmer/tracking';\nimport { action } from '@ember/object';\n\nexport default class ScrollContainerComponent extends Component {\n  @tracked scrollPosition = 0;\n\n  @action scrollToTop() {\n    this.scrollPosition = 0;\n  }\n}\n```\n\n```handlebars\n{{!-- app/templates/application.hbs --}}\n\n<ScrollContainer as |scroll|>\n  A lot of content...\n\n  <button {{on \"click\" scroll}}>Back To Top</button>\n</ScrollContainer>\n```\n\n#### Example with Cleanup\n\nIf the functionality you add in the modifier needs to be torn down when the\nmodifier is removed, you can use `registerDestructor` from `@ember/destroyable`.\n\nFor example, if you want to have your elements dance randomly on the page using\n`setInterval`, but you wanted to make sure that was canceled when the modifier\nwas removed, you could do this:\n\n```js\n// app/modifiers/move-randomly.js\n\nimport Modifier from 'ember-modifier';\nimport { registerDestructor } from '@ember/destroyable'\n\nconst { random, round } = Math;\nconst DEFAULT_DELAY = 1000;\n\nfunction cleanup(instance) {\n  if (instance.setIntervalId !== null) {\n    clearInterval(instance.setIntervalId);\n    instance.setIntervalId = null;\n  }\n}\n\nexport default class MoveRandomlyModifier extends Modifier {\n  element = null;\n  setIntervalId = null;\n\n  constructor(owner, args) {\n    super(owner, args);\n    registerDestructor(this, cleanup);\n  }\n\n  modify(element, _, { delay }) {\n    // Save off the element the first time for convenience with #moveElement\n    if (!this.element) {\n      this.element = element;\n    }\n\n    // Reset from any previous state.\n    cleanup(this);\n\n    this.setIntervalId = setInterval(this.#moveElement, delay ?? DEFAULT_DELAY);\n  }\n\n  #moveElement = (element) => {\n    let top = round(random() * 500);\n    let left = round(random() * 500);\n    this.element.style.transform = `translate(${left}px, ${top}px)`;\n  };\n}\n```\n\nUsage:\n\n```hbs\n<div {{move-randomly}}>\n  Catch me if you can!\n</div>\n```\n\n#### Example with Service Injection\n\nYou can also use services into your modifier, just like any other class in Ember.\n\nFor example, suppose you wanted to track click events with `ember-metrics`:\n\n```js\n// app/modifiers/track-click.js\n\nimport { inject as service } from '@ember/service';\nimport Modifier from 'ember-modifier';\nimport { registerDestructor } from '@ember/destroyable';\n\nfunction cleanup(instance) {\n  instance.element?.removeEventListener('click', instance.onClick, true);\n}\n\nexport default class TrackClick extends Modifier {\n  @service metrics;\n\n  constructor(owner, args) {\n    super(owner, args);\n    registerDestructor(this, this.cleanup);\n  }\n\n  modify(element, [eventName], options) {\n    this.element = element;\n    this.eventName = eventName;\n    this.options = options;\n\n    this.cleanup();\n    element.addEventListener('click', this.onClick, true);\n  }\n\n  onClick = () => {\n    this.metrics.trackEvent(this.eventName, this.options);\n  };\n}\n```\n\nUsage:\n\n```hbs\n<button {{track-click \"like-button-click\" page=\"some page\" title=\"some title\"}}>\n  Click Me!\n</button>\n```\n\n#### API\n\n<dl>\n<dt><code>constructor(owner, args)</code>\n<dd>Constructor for the modifier. You must call <code>super(...arguments)</code> before performing other initialization.</dd>\n<dt><code>modify(element, positionalArgs, namedArgs)</code>\n<dd>The primary hook for running a modifier. It gets called when the modifier is installed on the element, and any time any tracked state it uses changes. That tracked state can be from its arguments, which are auto-tracked, or from any other kind of tracked state, including but not limited to state on injected services.</dd>\n</dl>\n\n## TypeScript\n\nBoth the function- and class-based APIs can be used with TypeScript!\n\nBefore checking out the [Examples with Typescript](#examples-with-type-script) below, there is an important caveat you should understand about type safety!\n\nThere are, today, two basic approaches you can take to dealing with your modifier's arguments and element in a type safe way:\n\n1. You can use a type definition which specifies those for the outside world, relying on tooling like [Glint][glint] to check that the invocation is correct, and treat input as safe accordingly.\n2. You can provide the minimal public interface which *all* modifiers conform to, and do runtime type checking with `assert` calls to make your internal implementation safe.\n\nIf you have a code base which is strictly typed from end to end, including with template type checking via Glint, then (1) is a great choice. If you have a mixed code base, or are publishing an addon for others to use, then [it's usually best to do both (1) *and* (2)][safe-ts-libs]!\n\n[glint]: https://github.com/typed-ember/glint\n[safe-ts-libs]: https://v5.chriskrycho.com/journal/writing-robust-typescript-libraries/s\n\nTo handle runtime checking, for non-type-checked templates (including projects not yet using Glint or supporting external callers), you should *act* as though the arguments passed to your modifier can be *anything*. They’re typed as `unknown` by default, which means by default TypeScript will *require* you to work out the type passed to you at runtime. For example, with the `ScrollPositionModifier` shown above, you can combine TypeScript’s [type narrowing] with the default types for the class to provide runtime errors if the caller passes the wrong types, while providing safety throughout the rest of the body of the modifier. Here, `modify` would be *guaranteed* to have the correct types for `scrollPosition` and `relative`:\n\n[type narrowing]: https://www.typescriptlang.org/docs/handbook/advanced-types.html#type-guards-and-differentiating-types\n\n```ts\nimport Modifier from 'ember-modifier';\nimport { assert } from '@ember/debug';\n\nexport class ScrollPositionModifier extends ClassBasedModifier {\n  modify(element, [scrollPosition], { relative }) {\n    assert(,\n      `first argument to 'scroll-position' must be a number, but ${scrollPosition} was ${typeof scrollPosition}`,\n      typeof scrollPosition === \"number\"\n    );\n\n    assert(\n      `'relative' argument to 'scroll-position' must be a boolean, but ${relative} was ${typeof relative}`,\n      typeof relative === \"boolean\"\n    );\n\n    if (relative) {\n      element.scrollTop += scrollPosition;\n    } else {\n      element.scrollTop = scrollPosition;\n    }\n  }\n}\n```\n\nIf you were writing for a fully-typed context, you can define your `Modifier` with a `Signature` interface, similar to the way you would define your signature for a Glimmer Component:\n\n```ts\n// app/modifiers/scroll-position.ts\nimport Modifier from 'ember-modifier';\n\ninterface ScrollPositionModifierSignature {\n  Args: {\n    Positional: [number];\n    Named: {\n      relative: boolean;\n    };\n  };\n}\n\nexport default class ScrollPositionModifier\n    extends Modifier<ScrollPositionModifierSignature> {\n  modify(element, [scrollPosition], { relative }) {\n    if (relative) {\n      element.scrollTop += scrollPosition;\n    } else {\n      element.scrollTop = scrollPosition;\n    }\n  }\n}\n```\n\nBesides supporting integration with [Glint][glint], this also provides nice hooks for documentation tooling. Note, however, that it can result in *much worse* feedback in tests or at runtime if someone passes the wrong kind of arguments to your modifier and you *haven't* included assertions: users who pass the wrong thing will just have the modifier fail. For example, if you fail to pass the positional argument, `scrollPosition` would simply be `undefined`, and then `element.scrollTop` could end up being set to `NaN`. Whoops! For that reason, if your modifier will be used by non-TypeScript consumers, you should both publish the types for it *and* add dev-time assertions:\n\n```ts\n// app/modifiers/scroll-position.ts\nimport Modifier from 'ember-modifier';\n\ninterface ScrollPositionModifierSignature {\n  Args: {\n    Positional: [scrollPosition: number];\n    Named: {\n      relative: boolean;\n    };\n  };\n  Element: Element; // not required: it'll be set by default\n}\n\nexport default class ScrollPositionModifier\n    extends Modifier<ScrollPositionModifierSignature> {\n  modify(element, [scrollPosition], { relative }) {\n    assert(,\n      `first argument to 'scroll-position' must be a number, but ${scrollPosition} was ${typeof scrollPosition}`,\n      typeof scrollPosition === \"number\"\n    );\n\n    assert(\n      `'relative' argument to 'scroll-position' must be a boolean, but ${relative} was ${typeof relative}`,\n      typeof relative === \"boolean\"\n    );\n\n    if (relative) {\n      element.scrollTop += scrollPosition;\n    } else {\n      element.scrollTop = scrollPosition;\n    }\n  }\n}\n```\n\n### The `Signature` type\n\nThe `Signature` for a modifier is the combination of the positional and named arguments it receives and the element to which it may be applied.\n\n```ts\ninterface Signature {\n  Args: {\n    Named: {\n      [argName: string]: unknown;\n    };\n    Positional: unknown[];\n  };\n  Element: Element;\n}\n```\n\nWhen writing a signature yourself, all of those are optional: the types for modifiers will fall back to the correct defaults of `Element`, an object for named arguments, and an array for positional arguments. You can apply a signature when defining either a function-based or a class-based modifier.\n\nIn a function-based modifier, the callback arguments will be inferred from the signature, so you do not need to specify the types twice:\n\n```ts\ninterface MySignature {\n  Element: HTMLMediaElement;\n  Args: {\n    Named: {\n      when: boolean;\n    };\n    Positional: [];\n  };\n}\n\nconst play = modifier<MySignature>((el, _, { when: shouldPlay }) => {\n  if (shouldPlay) {\n    el.play();\n  } else {\n    el.pause();\n  }\n})\n```\n\nYou never *need* to specify a signature in this way for a function-based modifier: you can simply write the types inline instead:\n\n```ts\nconst play = modifier(\n  (el: HTMLMediaElement, _: [], { when: shouldPlay }: { when: boolean}) => {\n    if (shouldPlay) {\n      el.play();\n    } else {\n      el.pause();\n    }\n  }\n);\n```\n\nHowever, the explicit `modifier<Signature>(...)` form is tested to keep working, since it can be useful for documentation!\n\nThe same basic approach works with a class-based modifier:\n\n```ts\ninterface MySignature {\n  // ...\n}\n\nexport default class MyModifier extends Modifier<MySignature> {\n  // ...\n}\n```\n\nIn that case, the `element` and `args` will always have the right types throughout the body. Since the type of `args` in the constructor are derived from the signature, you can use the `ArgsFor` type helper to avoid having to write the type out separately:\n\n```ts\nimport Modifier, { ArgsFor } from 'ember-modifier';\n\ninterface MySignature {\n  // ...\n}\n\nexport default class MyModifier extends Modifier<MySignature> {\n  constructor(owner: unknown, args: ArgsFor<MySignature>) {\n    // ...\n  }\n}\n```\n\n`ArgsFor` isn't magic: it just takes the `Args` from the `Signature` you provide and turns it into the right shape for the constructor: the `Named` type ends up as the `named` field and the `Positional` type ends up as the type for `args.positional`, so you could write it out yourself if you preferred:\n\n```ts\nimport Modifier from 'ember-modifier';\n\ninterface MySignature {\n  // ...\n}\n\nexport default class MyModifier extends Modifier<MySignature> {\n  constructor(\n    owner: unknown,\n    args: {\n      named: MySignature['Args']['Named'];\n      positional: MySignature['Args']['Positional'];\n    }\n  ) {\n    // ...\n  }\n}\n```\n\n### Examples with TypeScript\n\n#### Function-based modifier\n\nLet’s look at a variant of the `move-randomly` example from above, implemented in TypeScript, and now requiring a named argument, the maximum offset. Using the recommended combination of types and runtime type-checking, it would look like this:\n\n```ts\n// app/modifiers/move-randomly.js\nimport { modifier } from 'ember-modifier';\nimport { assert } from '@ember/debug';\n\nconst { random, round } = Math;\n\nexport default modifier(\n  (element: HTMLElement, _: [], named: { maxOffset: number }\n) => {\n  assert(\n    'move-randomly can only be installed on HTML elements!',\n    element instanceof HTMLElement\n  );\n\n  const { maxOffset } = named;\n  assert(\n    `The 'max-offset' argument to 'move-randomly' must be a number, but was ${typeof maxOffset}`,\n    typeof maxOffset === \"number\"\n  );\n\n  const id = setInterval(() => {\n    const top = round(random() * maxOffset);\n    const left = round(random() * maxOffset);\n    element.style.transform = `translate(${left}px, ${top}px)`;\n  }, 1000);\n\n  return () => clearInterval(id);\n});\n```\n\nA few things to notice here:\n\n1.  TypeScript correctly infers the *base* types of the arguments for the function passed to the modifier; you don't need to specify what `element` or `positional` or `named` are unless you are doing like we are in this example and providing a usefully more-specific type to callers.\n\n2.  If we returned a teardown function which had the wrong type signature, that would also be an error.\n\n    If we return a value instead of a function, for example:\n\n    ```ts\n    export default modifier((element, _, named) => {\n      // ...\n\n      return id;\n    });\n    ```\n\n    TypeScript will report:\n\n    > ```\n    > Type 'Timeout' is not assignable to type 'void | Teardown'.\n    > ```\n\n    Likewise, if we return a function with the wrong signature, we will see the same kinds of errors. If we expected to receive an argument in the teardown callback, like this:\n\n    ```ts\n    export default modifier((element, _, named) => {\n      // \n\n      return (interval: number) => clearTimeout(interval);\n    });\n    ```\n\n    TypeScript will report:\n\n    > ```\n    > Type '(interval: number) => void' is not assignable to type 'void | Teardown'.\n    > ```\n\n####  Class-based\n\nTo support correctly typing `args` in the `constructor` for the case where you do runtime type checking, we supply an `ArgsFor` type utility. (This is useful because the `Signature` type, matching Glimmer Component and other \"invokable\" items in Ember/Glimmer, has capital letters for the names of the types, while `args.named` and `args.positional` are lower-case.) Here’s how that would look with a fully typed modifier that alerts \"This is a typesafe modifier!\" an amount of time after receiving arguments that depends on the length of the first argument and an *optional* multiplier (a nonsensical thing to do, but one that illustrates a fully type-safe class-based modifier):\n\n```ts\nimport Modifier, { ArgsFor, PositionalArgs, NamedArgs } from 'ember-modifier';\nimport { assert } from '@ember/debug';\n\ninterface NeatSignature {\n  Args: {\n    Named: {\n      multiplier?: number;\n    };\n    Positional: [string];\n  }\n}\n\n\nfunction cleanup(instance: Neat) => {\n  if (instance.interval) {\n    clearInterval(instance.interval);\n  }\n}\n\nexport default class Neat extends Modifier<NeatSignature> {\n  interval?: number;\n\n  constructor(owner: unknown, args: ArgsFor<NeatSignature>) {\n    super(owner, args);\n    registerDestructor(this, cleanup);\n  }\n\n  modify(\n    element: Element,\n    [lengthOfInput]: PositionalArgs<NeatSignature>,\n    { multiplier }: NamedArgs<NeatSignature>\n  ) {\n    assert(\n  \t  `positional arg must be 'string' but was ${typeof lengthOfInput}`,\n  \t  typeof lengthOfInput === 'string'\n  \t);\n\n    assert(\n    \t`'multiplier' arg must be a number but was ${typeof multiplier}`,\n    \tmultiplier ? typeof multiplier === \"number\" : true\n    );\n\n    multiplier = modifier ?? 1000;\n\n    let updateTime = multiplier * lengthOfInput;\n    this.interval = setInterval(() => {\n      element.innerText =\n        `Behold, a type safe modifier moved after ${updateTime / 1000}s`;\n    }, updateTime)\n  }\n}\n```\n\nContributing\n------------------------------------------------------------------------------\n\nSee the [Contributing](CONTRIBUTING.md) guide for details.\n\n\nLicense\n------------------------------------------------------------------------------\n\nThis project is licensed under the [MIT License](LICENSE.md).\n","engines":{"node":"14.* || 16.* || >= 18"},"exports":{".":"./dist/index.js","./*":"./dist/*","./addon-main.js":"./addon-main.js"},"scripts":{"lint":"eslint . --cache --ext .ts,.js","test":"echo 'Please refer to test-app for addon tests'","build":"rollup --config","start":"rollup --config --watch","lint:fix":"eslint . --fix --ext .ts,.js","typecheck":"tsc --noEmit","prepublishOnly":"rollup --config"},"_npmUser":{"name":"chriskrycho","email":"chris@chriskrycho.com"},"repository":{"url":"git+https://github.com/ember-modifier/ember-modifier.git","type":"git"},"_npmVersion":"6.14.16","description":"A library for writing Ember modifiers","directories":{"doc":"doc","test":"tests"},"ember-addon":{"main":"addon-main.js","type":"addon","version":2},"_nodeVersion":"14.19.1","dependencies":{"@embroider/addon-shim":"^1.6.0","ember-cli-string-utils":"^1.1.0","ember-cli-normalize-entity-name":"^1.0.0"},"publishConfig":{"registry":"https://registry.npmjs.org"},"typesVersions":{"*":{"*":["./dist/*"],".":["./dist/index.d.ts"],"./-private/signature":["./dist/-private/signature.d.ts"]}},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"tslib":"^2.4.0","eslint":"^8.13.0","rollup":"^2.70.2","prettier":"^2.4.1","typescript":"^4.6.3","@babel/core":"^7.17.9","@types/rsvp":"^4.0.4","expect-type":"^0.13.0","@types/qunit":"^2.11.2","rollup-plugin-ts":"^2.0.7","@types/ember-qunit":"~5.0.0","eslint-plugin-node":"^11.1.0","@types/ember__debug":"~4.0.1","eslint-plugin-ember":"^10.6.0","@babel/eslint-parser":"^7.15.8","@embroider/addon-dev":"^1.6.0","@rollup/plugin-babel":"^5.3.1","@types/ember-resolver":"^5.0.10","@types/ember__modifier":"~4.0.1","eslint-config-prettier":"^8.3.0","eslint-plugin-prettier":"^4.0.0","@babel/preset-typescript":"^7.15.0","@typescript-eslint/parser":"^5.20.0","@types/ember__test-helpers":"^2.0.2","ember-destroyable-polyfill":"^2.0.3","@typescript-eslint/eslint-plugin":"^5.20.0","@babel/plugin-proposal-decorators":"^7.17.9","@babel/plugin-proposal-class-properties":"^7.16.7"},"peerDependencies":{"ember-source":"*"},"peerDependenciesMeta":{"ember-source":{"optional":true}},"_npmOperationalInternal":{"tmp":"tmp/ember-modifier_4.0.0-beta.1_1650667074417_0.0508048622021815","host":"s3://npm-registry-packages"}},"4.0.0-beta.1-unstable.2f19c32":{"name":"ember-modifier","version":"4.0.0-beta.1-unstable.2f19c32","keywords":["ember-addon"],"author":"","license":"MIT","_id":"ember-modifier@4.0.0-beta.1-unstable.2f19c32","maintainers":[{"name":"rwjblue","email":"me@rwjblue.com"},{"name":"chriskrycho","email":"chris@chriskrycho.com"},{"name":"pzuraq","email":"opensource@pzuraq.com"},{"name":"sergeastapov","email":"sergeastapov@gmail.com"}],"homepage":"https://github.com/ember-modifier/ember-modifier#readme","bugs":{"url":"https://github.com/ember-modifier/ember-modifier/issues"},"dist":{"shasum":"02813e0cff2dfca425d2fd4f4bca70e79cf30a0d","tarball":"https://registry.npmjs.org/ember-modifier/-/ember-modifier-4.0.0-beta.1-unstable.2f19c32.tgz","fileCount":8,"integrity":"sha512-dZTMR+YLRj2i4d7gQ3QTOT5YNKAWh1JK7WibyneRP0CXuysFljLcbPj786hxyfTBfvx6PCGxN3vZP1AT0GxpUg==","signatures":[{"sig":"MEYCIQCD9Slj+8315TBfyXGh0SwBBTpWxjrBnixZD9HPePho9AIhAKsiMBrmLsO8y11CDTEpix5rDpKvm7HUS8UmZaVJYmBf","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":53480,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiepYTACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqhzQ//Q5DYb9SRfSYrtt0h+SBy4m9JcjyIZU9LZ7bmWUiVbCItNrhT\r\n4otzaqVQsgw1y3MN92lP52O7ljaz0Dg53fZAHWhygPSTutE/nDAFuuGk1/cj\r\n3nZzo9StZE6jC+bXQ0x5Rx/o/eXyAfXKmehjq9fK4hE/sHLm3x1qqKA1B/fQ\r\n4dD8rNatCtLKDZShP+CTQFiwToBS5YSXZAHDk3BEUzTzaWs7rZglGxr+Esfh\r\ng6RyMomKmi3Qp5DTP14dAgmlpVsyIRYYdnPUT5ZN+ZFK6YCi9FwXMnb7jNaK\r\nT3nAWCjjefJ90VCJlEthBCDrC92OCgs5k/jjsUzyZb5+NHsaNqmS1+v+3m+o\r\nY+D6DAC8dIa0zKsR9AIXJfKoIDrvhbCizRwlxb3HU9Q4ZniPtOW8y3jSdtF7\r\nRh/LAJ3KYf6aq3T2yYUn8FGhv2ApILsV8c1Aau93VGlrZ2for7CSTD4xonyd\r\nxqOUcYuO79FALx4E8DnZccucUBJG8TiXYUcKHJsWPDfPpWChRep/EHV82ZrX\r\nlmyCwB7z/2Ai0f7tk6gQSiwx/UM3fWGI7l45iICVOKO6Vpn6tRMmOAmXQjG3\r\nR314mckICmdPMmXtnUk+Flos8OnfQCcCIYGTEhftvN7YVv6MS6CN7vLB/LQ+\r\nlrDqVdNi+Z5SaKgNavOqBC3jURNFEqTrljY=\r\n=H/oB\r\n-----END PGP SIGNATURE-----\r\n"},"ember":{"edition":"octane"},"volta":{"extends":"../package.json"},"readme":"ember-modifier\n==============================================================================\n\nThis addon provides an API for authoring [element modifiers] in Ember. It\nmirrors Ember's [helper] API, with variations for writing both simple\nfunction-based modifiers and more complicated class-based modifiers.\n\n[element modifiers]: https://blog.emberjs.com/2019/03/06/coming-soon-in-ember-octane-part-4.html\n[helper]: https://octane-guides-preview.emberjs.com/release/templates/writing-helpers\n\n:warning: **NOTE:** this is the README for the v4 release (currently available in beta)! For the v3 README, see [here](https://github.com/ember-modifier/ember-modifier/blob/v3/README.md). :warning:\n\n- [Compatibility](#compatibility)\n  - [TypeScript](#typescript)\n- [Installation](#installation)\n- [Philosophy](#philosophy)\n  - [Whoa whoa whoa, hold on, what's a _\"side effect\"_?](#whoa-whoa-whoa-hold-on-whats-a-side-effect)\n  - [Managing \"side effects\" effectively](#managing-side-effects-effectively)\n- [Usage](#usage)\n  - [Function-Based Modifiers](#function-based-modifiers)\n    - [Generating a Function-Based Modifier](#generating-a-function-based-modifier)\n    - [Example without Cleanup](#example-without-cleanup)\n    - [Example with Cleanup](#example-with-cleanup)\n  - [Class-Based Modifiers](#class-based-modifiers)\n    - [Generating a Class Modifier](#generating-a-class-modifier)\n    - [Example without Cleanup](#example-without-cleanup-1)\n    - [Example with Cleanup](#example-with-cleanup-1)\n    - [Example with Service Injection](#example-with-service-injection)\n    - [API](#api)\n- [TypeScript](#typescript-1)\n  - [The `Signature` type](#the-signature-type)\n  - [Examples with TypeScript](#examples-with-typescript)\n    - [Function-based modifier](#function-based-modifier)\n    - [Class-based](#class-based)\n- [Contributing](#contributing)\n- [License](#license)\n\nCompatibility\n------------------------------------------------------------------------------\n\n* Ember.js v3.24 or above\n* Ember CLI v2.13 or above\n* Node.js v14 or above\n\n### TypeScript\n\nThis project follows the current draft of [the Semantic Versioning for TypeScript Types][semver] proposal.\n\n- **Currently supported TypeScript versions:** v4.2, v4.3, v4.4, v4.5, and v4.6\n- **Compiler support policy:** [simple majors][sm]\n- **Public API:** all published types not in a `-private` module are public\n\n[semver]: https://github.com/chriskrycho/ember-rfcs/blob/semver-for-ts/text/0730-semver-for-ts.md\n[sm]: https://github.com/chriskrycho/ember-rfcs/blob/semver-for-ts/text/0730-semver-for-ts.md#simple-majors\n\n\nInstallation\n------------------------------------------------------------------------------\n\n```\nember install ember-modifier\n```\n\n\nPhilosophy\n------------------------------------------------------------------------------\n\nModifiers are a basic primitive for interacting with the DOM in Ember. For\nexample, Ember ships with a built-in modifier, `{{on}}`:\n\n```hbs\n<button {{on \"click\" @onClick}}>\n  {{@text}}\n</button>\n```\n\nAll modifiers get applied to elements directly this way (if you see a similar\nvalue that _isn't_ in an element, it is probably a _helper_ instead), and they\nare passed the element when applying their effects.\n\nConceptually, modifiers take _tracked, derived state_, and turn it into some\nsort of _side effect_ related in some way to the DOM element they are applied\nto.\n\n### Whoa whoa whoa, hold on, what's a _\"side effect\"_?\n\nA \"side effect\" is something that happens in programming all the time. Here's an\nexample of one in an Ember component that attempts to make a button like in the\nfirst example, but without modifiers:\n\n```js\n// 🛑 DO NOT COPY THIS 🛑\nimport Component from '@glimmer/component';\n\nexport default class MyButton extends Component {\n  get setupEventHandler() {\n    document.querySelector('#my-button').addEventListener(this.args.onClick);\n\n    return undefined;\n  }\n}\n```\n```hbs\n<button id=\"#my-button\">\n  {{this.setupEventHandler}}\n\n  {{@text}}\n</button>\n```\n\nWe can see by looking at the `setupEventListener` getter that it isn't actually\nreturning a value. Instead, it always returns `undefined`. However, it also adds\nthe `@onClick` argument as an _event listener_ to the button in the template\nwhen the getter is run, as the template is rendering, which is a _side effect_\n- it is an effect of running the code that doesn't have anything to do with the\n\"main\" purpose of that code, in this case to return a dynamically computed\nvalue. In fact, this code doesn't compute a value at all, so this component is\n_misusing_ the getter in order to run its side effect whenever it is rendered in\nthe template.\n\nUnmanaged side effects can make code very difficult to reason about, since any\nfunction could be updating a value elsewhere. In fact, the code above is very\nbuggy:\n\n1. If the `@onClick` argument ever changes, it won't remove the old event\n   listener, it'll just keep adding new ones.\n2. It won't remove the old event listener when the component is removed.\n3. It uses a document element selector that may not be unique, and it has no\n   guarantee that the element will exist when it runs.\n4. It _will_ run in Fastboot/Server Side Rendering, where no DOM exists at all,\n   and it'll throw errors because of this.\n\nHowever, there are lots of times where its difficult to write code that\n_doesn't_ have side effects. Sometimes it would mean having to rewrite a large\nportion of an application. Sometimes, like in the case of modifying DOM, there\nisn't a clear way to do it at _all_ with just getters and components.\n\nThis is where _modifiers_ come in. Modifiers exist as a way to bridge the gap\nbetween derived state and side effects in way that is _contained_ and\n_consistent_, so that users of a modifier don't have to think about them.\n\n### Managing \"side effects\" effectively\n\nLet's look again at our original example:\n\n```hbs\n<button {{on \"click\" @onClick}}>\n  {{@text}}\n</button>\n```\n\nWe can see pretty clearly from this template that Ember will:\n\n1. Create a `<button>` element\n2. Append the contents of the `@text` argument to that button\n3. Add a click event handler to the button that runs the `@onClick` argument\n\nIf `@text` or `@onClick` ever change, Ember will keep everything in sync for us.\nWe don't ever have to manually set `element.textContent` or update anything\nourselves. In this way, we can say the template is _declarative_ - it tells\nEmber what we want the output to be, and Ember handles all of the bookkeeping\nitself.\n\nHere's how we could _implement_ the `{{on}}` modifier so that it always keeps\nthings in sync correctly:\n\n```js\nimport { modifier } from 'ember-modifier';\n\nexport default modifier((element, [eventName, handler]) => {\n  element.addEventListener(eventName, handler);\n\n  return () => {\n    element.removeEventListener(eventName, handler);\n  }\n});\n```\n\nHere, we setup the event listener using the positional parameters passed to the\nmodifier. Then, we return a _destructor_ - a function that _undoes_ our setup,\nand is effectively the _opposite_ side effect. This way, if the `@onClick`\nhandler ever changes, we first teardown the first event listener we added -\nleaving the element in its _original_ state before the modifier ever ran - and\nthen setup the new handler.\n\nThis is what allows us to treat the `{{on}}` modifier as if it were just like\nthe `{{@text}}` value we put in the template. While it _is_ side effecting, it\nknows how to setup and teardown that side effect and manage its state. The side\neffect is _contained_ - it doesn't escape into the rest of our application, it\ndoesn't cause other unrelated changes, and we can think about it as another\npiece of declarative, derived state. Just another part of the template!\n\nIn general, when writing modifiers, especially general purpose/reusable\nmodifiers, they should be designed with this in mind. Which specific effects are\nthey trying to accomplish, how to manage them effectively, and how to do it in\na way that is _transparent_ to the user of the modifier.\n\nUsage\n------------------------------------------------------------------------------\n\nThis addon does not provide any modifiers out of the box. Instead, this library\nallows you to write your own. There are two ways to write modifiers:\n\n1. Function-based modifiers\n2. Class-based modifiers\n\nThese are analogous to Ember's Helper APIs, `helper` and `Helper`.\n\n### Function-Based Modifiers\n\n`modifier` is an API for writing simple modifiers. For instance, you could\nimplement Ember's built-in `{{on}}` modifier like so with `modifier`:\n\n```js\n// /app/modifiers/on.js\nimport { modifier } from 'ember-modifier';\n\nexport default modifier((element, [eventName, handler]) => {\n  element.addEventListener(eventName, handler);\n\n  return () => {\n    element.removeEventListener(eventName, handler);\n  }\n});\n```\n\nFunction-based modifiers consist of a function that receives:\n\n1. The `element`\n2. An array of positional arguments\n3. An object of named arguments\n\n```js\nmodifier((element, positional, named) => { /* */ });\n```\n\nThis function runs the first time when the element the modifier was applied to\nis inserted into the DOM, and it _autotracks_ while running. Any tracked values\nthat it accesses will be tracked, including the arguments it receives, and if\nany of them changes, the function will run again.[^changes]\n\nThe modifier can also optionally return a _destructor_. The destructor function\nwill be run just before the next update, and when the element is being removed\nentirely. It should generally clean up the changes that the modifier made in the\nfirst place.\n\n[^changes]: As with autotracking in general, “changes” here actually means that the tracked property was set—even if it was set to the same value. This is because autotracking does not cache the *values* of properties, only the last time they changed. See [this blog post](https://v5.chriskrycho.com/journal/autotracking-elegant-dx-via-cutting-edge-cs/) for a deep dive on how it works!\n\n#### Generating a Function-Based Modifier\n\nTo create a modifier (and a corresponding integration test), run:\n\n```\nember g modifier scroll-top\n```\n\n#### Example without Cleanup\n\nFor example, if you wanted to implement your own `scrollTop` modifier (similar\nto [this][scroll-example]), you may do something like this:\n\n[scroll-example]: https://github.com/emberjs/ember-render-modifiers#example-scrolling-an-element-to-a-position\n\n```js\n// app/modifiers/scroll-top.js\nimport { modifier } from 'ember-modifier';\n\nexport default modifier((element, [scrollPosition]) => {\n  element.scrollTop = scrollPosition;\n})\n```\n```hbs\n<div class=\"scroll-container\" {{scroll-top @scrollPosition}}>\n  {{yield}}\n</div>\n```\n\n#### Example with Cleanup\n\nIf the functionality you add in the modifier needs to be torn down when the\nelement is removed, you can return a function for the teardown method.\n\nFor example, if you wanted to have your elements dance randomly on the page\nusing `setInterval`, but you wanted to make sure that was canceled when the\nelement was removed, you could do:\n\n```js\n// app/modifiers/move-randomly.js\nimport { modifier } from 'ember-modifier';\n\nconst { random, round } = Math;\n\nexport default modifier(element => {\n  const id = setInterval(() => {\n    const top = round(random() * 500);\n    const left = round(random() * 500);\n    element.style.transform = `translate(${left}px, ${top}px)`;\n  }, 1000);\n\n  return () => clearInterval(id);\n});\n\n```\n```hbs\n<button {{move-randomly}}>\n  {{yield}}\n</button>\n```\n\n### Class-Based Modifiers\n\nSometimes you may need to do something more complicated than what can be handled\nby function-based modifiers. For instance:\n\n1. You may need to inject services and access them\n2. You may need fine-grained control of updates, either for performance or\n   convenience reasons, and don't want to teardown the state of your modifier\n   every time only to set it up again.\n3. You may need to store some local state within your modifier.\n\nIn these cases, you can use a _class-based modifier_ instead. Here's how you\nwould implement the `{{on}}` modifier with a class:\n\n```js\nimport Modifier from 'ember-modifier';\nimport { registerDestructor } from '@ember/destroyable';\n\nfunction cleanup(instance: OnModifier) {\n  let { element, event, handler } = instance;\n\n  if (element && event && handler) {\n    element.removeEventListener(event, handler);\n\n    instance.element = null;\n    instance.event = null;\n    instance.handler = null;\n  }\n}\n\nexport default class OnModifier extends Modifier {\n  element = null;\n  event = null;\n  handler = null;\n\n  modify(element, [event, handler]) {\n    this.addEventListener(element, event, handler);\n    registerDestructor(this, cleanup)\n  }\n\n  // methods for reuse\n  addEventListener = (element, event, handler) => {\n    // Store the current element, event, and handler for when we need to remove\n    // them during cleanup.\n    this.element = element;\n    this.event = event;\n    this.handler = handler;\n\n    element.addEventListener(event, handler);\n  };\n}\n```\n\nWhile this is slightly more complicated than the function-based version, but\nthat complexity comes along with much more _control_.\n\nAs with function-based modifiers, the lifecycle hooks of class modifiers are\n_tracked_. When they run, then any values they access will be added to the\nmodifier, and the modifier will update if any of those values change.\n\n#### Generating a Class Modifier\n\nTo create a modifier (and a corresponding integration test), run:\n\n```\nember g modifier scroll-top --class\n```\n\n#### Example without Cleanup\n\nFor example, let's say you want to implement your own `{{scroll-position}}`\nmodifier (similar to [this](https://github.com/emberjs/ember-render-modifiers#example-scrolling-an-element-to-a-position)).\n\nThis modifier can be attached to any element and accepts a single positional\nargument. When the element is inserted, and whenever the argument is updated, it\nwill set the element's `scrollTop` property to the value of its argument.\n\n(Note that this example does not require the use of a class, and could be\nimplemented equally well with a function-based modifier!)\n\n```js\n// app/modifiers/scroll-position.js\nimport Modifier from 'ember-modifier';\n\nexport default class ScrollPositionModifier extends Modifier {\n  modify(element, [scrollPosition], { relative }) {\n    if(relative) {\n      element.scrollTop += scrollPosition;\n    } else {\n      element.scrollTop = scrollPosition;\n    }\n  }\n}\n```\n\nUsage:\n\n```handlebars\n{{!-- app/components/scroll-container.hbs --}}\n\n<div\n  class=\"scroll-container\"\n  style=\"width: 300px; heigh: 300px; overflow-y: scroll\"\n  {{scroll-position this.scrollPosition relative=false}}\n>\n  {{yield this.scrollToTop}}\n</div>\n```\n\n```js\n// app/components/scroll-container.js\n\nimport Component from '@glimmer/component';\nimport { tracked } from '@glimmer/tracking';\nimport { action } from '@ember/object';\n\nexport default class ScrollContainerComponent extends Component {\n  @tracked scrollPosition = 0;\n\n  @action scrollToTop() {\n    this.scrollPosition = 0;\n  }\n}\n```\n\n```handlebars\n{{!-- app/templates/application.hbs --}}\n\n<ScrollContainer as |scroll|>\n  A lot of content...\n\n  <button {{on \"click\" scroll}}>Back To Top</button>\n</ScrollContainer>\n```\n\n#### Example with Cleanup\n\nIf the functionality you add in the modifier needs to be torn down when the\nmodifier is removed, you can use `registerDestructor` from `@ember/destroyable`.\n\nFor example, if you want to have your elements dance randomly on the page using\n`setInterval`, but you wanted to make sure that was canceled when the modifier\nwas removed, you could do this:\n\n```js\n// app/modifiers/move-randomly.js\n\nimport Modifier from 'ember-modifier';\nimport { registerDestructor } from '@ember/destroyable'\n\nconst { random, round } = Math;\nconst DEFAULT_DELAY = 1000;\n\nfunction cleanup(instance) {\n  if (instance.setIntervalId !== null) {\n    clearInterval(instance.setIntervalId);\n    instance.setIntervalId = null;\n  }\n}\n\nexport default class MoveRandomlyModifier extends Modifier {\n  element = null;\n  setIntervalId = null;\n\n  constructor(owner, args) {\n    super(owner, args);\n    registerDestructor(this, cleanup);\n  }\n\n  modify(element, _, { delay }) {\n    // Save off the element the first time for convenience with #moveElement\n    if (!this.element) {\n      this.element = element;\n    }\n\n    // Reset from any previous state.\n    cleanup(this);\n\n    this.setIntervalId = setInterval(this.#moveElement, delay ?? DEFAULT_DELAY);\n  }\n\n  #moveElement = (element) => {\n    let top = round(random() * 500);\n    let left = round(random() * 500);\n    this.element.style.transform = `translate(${left}px, ${top}px)`;\n  };\n}\n```\n\nUsage:\n\n```hbs\n<div {{move-randomly}}>\n  Catch me if you can!\n</div>\n```\n\n#### Example with Service Injection\n\nYou can also use services into your modifier, just like any other class in Ember.\n\nFor example, suppose you wanted to track click events with `ember-metrics`:\n\n```js\n// app/modifiers/track-click.js\n\nimport { inject as service } from '@ember/service';\nimport Modifier from 'ember-modifier';\nimport { registerDestructor } from '@ember/destroyable';\n\nfunction cleanup(instance) {\n  instance.element?.removeEventListener('click', instance.onClick, true);\n}\n\nexport default class TrackClick extends Modifier {\n  @service metrics;\n\n  constructor(owner, args) {\n    super(owner, args);\n    registerDestructor(this, this.cleanup);\n  }\n\n  modify(element, [eventName], options) {\n    this.element = element;\n    this.eventName = eventName;\n    this.options = options;\n\n    this.cleanup();\n    element.addEventListener('click', this.onClick, true);\n  }\n\n  onClick = () => {\n    this.metrics.trackEvent(this.eventName, this.options);\n  };\n}\n```\n\nUsage:\n\n```hbs\n<button {{track-click \"like-button-click\" page=\"some page\" title=\"some title\"}}>\n  Click Me!\n</button>\n```\n\n#### API\n\n<dl>\n<dt><code>constructor(owner, args)</code>\n<dd>Constructor for the modifier. You must call <code>super(...arguments)</code> before performing other initialization.</dd>\n<dt><code>modify(element, positionalArgs, namedArgs)</code>\n<dd>The primary hook for running a modifier. It gets called when the modifier is installed on the element, and any time any tracked state it uses changes. That tracked state can be from its arguments, which are auto-tracked, or from any other kind of tracked state, including but not limited to state on injected services.</dd>\n</dl>\n\n## TypeScript\n\nBoth the function- and class-based APIs can be used with TypeScript!\n\nBefore checking out the [Examples with Typescript](#examples-with-type-script) below, there is an important caveat you should understand about type safety!\n\nThere are, today, two basic approaches you can take to dealing with your modifier's arguments and element in a type safe way:\n\n1. You can use a type definition which specifies those for the outside world, relying on tooling like [Glint][glint] to check that the invocation is correct, and treat input as safe accordingly.\n2. You can provide the minimal public interface which *all* modifiers conform to, and do runtime type checking with `assert` calls to make your internal implementation safe.\n\nIf you have a code base which is strictly typed from end to end, including with template type checking via Glint, then (1) is a great choice. If you have a mixed code base, or are publishing an addon for others to use, then [it's usually best to do both (1) *and* (2)][safe-ts-libs]!\n\n[glint]: https://github.com/typed-ember/glint\n[safe-ts-libs]: https://v5.chriskrycho.com/journal/writing-robust-typescript-libraries/s\n\nTo handle runtime checking, for non-type-checked templates (including projects not yet using Glint or supporting external callers), you should *act* as though the arguments passed to your modifier can be *anything*. They’re typed as `unknown` by default, which means by default TypeScript will *require* you to work out the type passed to you at runtime. For example, with the `ScrollPositionModifier` shown above, you can combine TypeScript’s [type narrowing] with the default types for the class to provide runtime errors if the caller passes the wrong types, while providing safety throughout the rest of the body of the modifier. Here, `modify` would be *guaranteed* to have the correct types for `scrollPosition` and `relative`:\n\n[type narrowing]: https://www.typescriptlang.org/docs/handbook/advanced-types.html#type-guards-and-differentiating-types\n\n```ts\nimport Modifier from 'ember-modifier';\nimport { assert } from '@ember/debug';\n\nexport class ScrollPositionModifier extends ClassBasedModifier {\n  modify(element, [scrollPosition], { relative }) {\n    assert(,\n      `first argument to 'scroll-position' must be a number, but ${scrollPosition} was ${typeof scrollPosition}`,\n      typeof scrollPosition === \"number\"\n    );\n\n    assert(\n      `'relative' argument to 'scroll-position' must be a boolean, but ${relative} was ${typeof relative}`,\n      typeof relative === \"boolean\"\n    );\n\n    if (relative) {\n      element.scrollTop += scrollPosition;\n    } else {\n      element.scrollTop = scrollPosition;\n    }\n  }\n}\n```\n\nIf you were writing for a fully-typed context, you can define your `Modifier` with a `Signature` interface, similar to the way you would define your signature for a Glimmer Component:\n\n```ts\n// app/modifiers/scroll-position.ts\nimport Modifier from 'ember-modifier';\n\ninterface ScrollPositionModifierSignature {\n  Args: {\n    Positional: [number];\n    Named: {\n      relative: boolean;\n    };\n  };\n}\n\nexport default class ScrollPositionModifier\n    extends Modifier<ScrollPositionModifierSignature> {\n  modify(element, [scrollPosition], { relative }) {\n    if (relative) {\n      element.scrollTop += scrollPosition;\n    } else {\n      element.scrollTop = scrollPosition;\n    }\n  }\n}\n```\n\nBesides supporting integration with [Glint][glint], this also provides nice hooks for documentation tooling. Note, however, that it can result in *much worse* feedback in tests or at runtime if someone passes the wrong kind of arguments to your modifier and you *haven't* included assertions: users who pass the wrong thing will just have the modifier fail. For example, if you fail to pass the positional argument, `scrollPosition` would simply be `undefined`, and then `element.scrollTop` could end up being set to `NaN`. Whoops! For that reason, if your modifier will be used by non-TypeScript consumers, you should both publish the types for it *and* add dev-time assertions:\n\n```ts\n// app/modifiers/scroll-position.ts\nimport Modifier from 'ember-modifier';\n\ninterface ScrollPositionModifierSignature {\n  Args: {\n    Positional: [scrollPosition: number];\n    Named: {\n      relative: boolean;\n    };\n  };\n  Element: Element; // not required: it'll be set by default\n}\n\nexport default class ScrollPositionModifier\n    extends Modifier<ScrollPositionModifierSignature> {\n  modify(element, [scrollPosition], { relative }) {\n    assert(,\n      `first argument to 'scroll-position' must be a number, but ${scrollPosition} was ${typeof scrollPosition}`,\n      typeof scrollPosition === \"number\"\n    );\n\n    assert(\n      `'relative' argument to 'scroll-position' must be a boolean, but ${relative} was ${typeof relative}`,\n      typeof relative === \"boolean\"\n    );\n\n    if (relative) {\n      element.scrollTop += scrollPosition;\n    } else {\n      element.scrollTop = scrollPosition;\n    }\n  }\n}\n```\n\n### The `Signature` type\n\nThe `Signature` for a modifier is the combination of the positional and named arguments it receives and the element to which it may be applied.\n\n```ts\ninterface Signature {\n  Args: {\n    Named: {\n      [argName: string]: unknown;\n    };\n    Positional: unknown[];\n  };\n  Element: Element;\n}\n```\n\nWhen writing a signature yourself, all of those are optional: the types for modifiers will fall back to the correct defaults of `Element`, an object for named arguments, and an array for positional arguments. You can apply a signature when defining either a function-based or a class-based modifier.\n\nIn a function-based modifier, the callback arguments will be inferred from the signature, so you do not need to specify the types twice:\n\n```ts\ninterface MySignature {\n  Element: HTMLMediaElement;\n  Args: {\n    Named: {\n      when: boolean;\n    };\n    Positional: [];\n  };\n}\n\nconst play = modifier<MySignature>((el, _, { when: shouldPlay }) => {\n  if (shouldPlay) {\n    el.play();\n  } else {\n    el.pause();\n  }\n})\n```\n\nYou never *need* to specify a signature in this way for a function-based modifier: you can simply write the types inline instead:\n\n```ts\nconst play = modifier(\n  (el: HTMLMediaElement, _: [], { when: shouldPlay }: { when: boolean}) => {\n    if (shouldPlay) {\n      el.play();\n    } else {\n      el.pause();\n    }\n  }\n);\n```\n\nHowever, the explicit `modifier<Signature>(...)` form is tested to keep working, since it can be useful for documentation!\n\nThe same basic approach works with a class-based modifier:\n\n```ts\ninterface MySignature {\n  // ...\n}\n\nexport default class MyModifier extends Modifier<MySignature> {\n  // ...\n}\n```\n\nIn that case, the `element` and `args` will always have the right types throughout the body. Since the type of `args` in the constructor are derived from the signature, you can use the `ArgsFor` type helper to avoid having to write the type out separately:\n\n```ts\nimport Modifier, { ArgsFor } from 'ember-modifier';\n\ninterface MySignature {\n  // ...\n}\n\nexport default class MyModifier extends Modifier<MySignature> {\n  constructor(owner: unknown, args: ArgsFor<MySignature>) {\n    // ...\n  }\n}\n```\n\n`ArgsFor` isn't magic: it just takes the `Args` from the `Signature` you provide and turns it into the right shape for the constructor: the `Named` type ends up as the `named` field and the `Positional` type ends up as the type for `args.positional`, so you could write it out yourself if you preferred:\n\n```ts\nimport Modifier from 'ember-modifier';\n\ninterface MySignature {\n  // ...\n}\n\nexport default class MyModifier extends Modifier<MySignature> {\n  constructor(\n    owner: unknown,\n    args: {\n      named: MySignature['Args']['Named'];\n      positional: MySignature['Args']['Positional'];\n    }\n  ) {\n    // ...\n  }\n}\n```\n\n### Examples with TypeScript\n\n#### Function-based modifier\n\nLet’s look at a variant of the `move-randomly` example from above, implemented in TypeScript, and now requiring a named argument, the maximum offset. Using the recommended combination of types and runtime type-checking, it would look like this:\n\n```ts\n// app/modifiers/move-randomly.js\nimport { modifier } from 'ember-modifier';\nimport { assert } from '@ember/debug';\n\nconst { random, round } = Math;\n\nexport default modifier(\n  (element: HTMLElement, _: [], named: { maxOffset: number }\n) => {\n  assert(\n    'move-randomly can only be installed on HTML elements!',\n    element instanceof HTMLElement\n  );\n\n  const { maxOffset } = named;\n  assert(\n    `The 'max-offset' argument to 'move-randomly' must be a number, but was ${typeof maxOffset}`,\n    typeof maxOffset === \"number\"\n  );\n\n  const id = setInterval(() => {\n    const top = round(random() * maxOffset);\n    const left = round(random() * maxOffset);\n    element.style.transform = `translate(${left}px, ${top}px)`;\n  }, 1000);\n\n  return () => clearInterval(id);\n});\n```\n\nA few things to notice here:\n\n1.  TypeScript correctly infers the *base* types of the arguments for the function passed to the modifier; you don't need to specify what `element` or `positional` or `named` are unless you are doing like we are in this example and providing a usefully more-specific type to callers.\n\n2.  If we returned a teardown function which had the wrong type signature, that would also be an error.\n\n    If we return a value instead of a function, for example:\n\n    ```ts\n    export default modifier((element, _, named) => {\n      // ...\n\n      return id;\n    });\n    ```\n\n    TypeScript will report:\n\n    > ```\n    > Type 'Timeout' is not assignable to type 'void | Teardown'.\n    > ```\n\n    Likewise, if we return a function with the wrong signature, we will see the same kinds of errors. If we expected to receive an argument in the teardown callback, like this:\n\n    ```ts\n    export default modifier((element, _, named) => {\n      // \n\n      return (interval: number) => clearTimeout(interval);\n    });\n    ```\n\n    TypeScript will report:\n\n    > ```\n    > Type '(interval: number) => void' is not assignable to type 'void | Teardown'.\n    > ```\n\n####  Class-based\n\nTo support correctly typing `args` in the `constructor` for the case where you do runtime type checking, we supply an `ArgsFor` type utility. (This is useful because the `Signature` type, matching Glimmer Component and other \"invokable\" items in Ember/Glimmer, has capital letters for the names of the types, while `args.named` and `args.positional` are lower-case.) Here’s how that would look with a fully typed modifier that alerts \"This is a typesafe modifier!\" an amount of time after receiving arguments that depends on the length of the first argument and an *optional* multiplier (a nonsensical thing to do, but one that illustrates a fully type-safe class-based modifier):\n\n```ts\nimport Modifier, { ArgsFor, PositionalArgs, NamedArgs } from 'ember-modifier';\nimport { assert } from '@ember/debug';\n\ninterface NeatSignature {\n  Args: {\n    Named: {\n      multiplier?: number;\n    };\n    Positional: [string];\n  }\n}\n\n\nfunction cleanup(instance: Neat) => {\n  if (instance.interval) {\n    clearInterval(instance.interval);\n  }\n}\n\nexport default class Neat extends Modifier<NeatSignature> {\n  interval?: number;\n\n  constructor(owner: unknown, args: ArgsFor<NeatSignature>) {\n    super(owner, args);\n    registerDestructor(this, cleanup);\n  }\n\n  modify(\n    element: Element,\n    [lengthOfInput]: PositionalArgs<NeatSignature>,\n    { multiplier }: NamedArgs<NeatSignature>\n  ) {\n    assert(\n  \t  `positional arg must be 'string' but was ${typeof lengthOfInput}`,\n  \t  typeof lengthOfInput === 'string'\n  \t);\n\n    assert(\n    \t`'multiplier' arg must be a number but was ${typeof multiplier}`,\n    \tmultiplier ? typeof multiplier === \"number\" : true\n    );\n\n    multiplier = modifier ?? 1000;\n\n    let updateTime = multiplier * lengthOfInput;\n    this.interval = setInterval(() => {\n      element.innerText =\n        `Behold, a type safe modifier moved after ${updateTime / 1000}s`;\n    }, updateTime)\n  }\n}\n```\n\nContributing\n------------------------------------------------------------------------------\n\nSee the [Contributing](CONTRIBUTING.md) guide for details.\n\n\nLicense\n------------------------------------------------------------------------------\n\nThis project is licensed under the [MIT License](LICENSE.md).\n","engines":{"node":"14.* || 16.* || >= 18"},"exports":{".":"./dist/index.js","./*":"./dist/*","./addon-main.js":"./addon-main.js"},"gitHead":"2f19c3284b11a3af7041de2ddff43773ccbf957b","scripts":{"lint":"eslint . --cache --ext .ts,.js","test":"echo 'Please refer to test-app for addon tests'","build":"rollup --config","start":"rollup --config --watch","lint:fix":"eslint . --fix --ext .ts,.js","typecheck":"tsc --noEmit","prepublishOnly":"rollup --config"},"_npmUser":{"name":"sergeastapov","email":"sergeastapov@gmail.com"},"repository":{"url":"git+https://github.com/ember-modifier/ember-modifier.git","type":"git"},"_npmVersion":"8.9.0","description":"A library for writing Ember modifiers","directories":{"doc":"doc","test":"tests"},"ember-addon":{"main":"addon-main.js","type":"addon","version":2},"_nodeVersion":"14.19.1","dependencies":{"@embroider/addon-shim":"^1.6.0","ember-cli-string-utils":"^1.1.0","ember-cli-normalize-entity-name":"^1.0.0"},"publishConfig":{"registry":"https://registry.npmjs.org"},"typesVersions":{"*":{"*":["./dist/*"],".":["./dist/index.d.ts"],"./-private/signature":["./dist/-private/signature.d.ts"]}},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"tslib":"^2.4.0","eslint":"^8.15.0","rollup":"^2.72.1","prettier":"^2.4.1","typescript":"^4.6.4","@babel/core":"^7.17.10","@types/rsvp":"^4.0.4","expect-type":"^0.13.0","@types/qunit":"^2.11.2","rollup-plugin-ts":"^2.0.7","@types/ember-qunit":"~5.0.0","eslint-plugin-node":"^11.1.0","@types/ember__debug":"~4.0.1","eslint-plugin-ember":"^10.6.1","@babel/eslint-parser":"^7.15.8","@embroider/addon-dev":"^1.6.0","@rollup/plugin-babel":"^5.3.1","@types/ember-resolver":"^5.0.10","@types/ember__modifier":"~4.0.1","eslint-config-prettier":"^8.3.0","eslint-plugin-prettier":"^4.0.0","@babel/preset-typescript":"^7.15.0","@types/ember__destroyable":"~4.0.0","@typescript-eslint/parser":"^5.23.0","@types/ember__test-helpers":"^2.0.2","ember-destroyable-polyfill":"^2.0.3","@typescript-eslint/eslint-plugin":"^5.23.0","@babel/plugin-proposal-decorators":"^7.17.9","@babel/plugin-proposal-class-properties":"^7.16.7"},"peerDependencies":{"ember-source":"*"},"peerDependenciesMeta":{"ember-source":{"optional":true}},"_npmOperationalInternal":{"tmp":"tmp/ember-modifier_4.0.0-beta.1-unstable.2f19c32_1652200979769_0.39883828430815726","host":"s3://npm-registry-packages"}},"4.0.0-beta.1-unstable.a4fec35":{"name":"ember-modifier","version":"4.0.0-beta.1-unstable.a4fec35","keywords":["ember-addon"],"author":"","license":"MIT","_id":"ember-modifier@4.0.0-beta.1-unstable.a4fec35","maintainers":[{"name":"rwjblue","email":"me@rwjblue.com"},{"name":"chriskrycho","email":"chris@chriskrycho.com"},{"name":"pzuraq","email":"opensource@pzuraq.com"},{"name":"sergeastapov","email":"sergeastapov@gmail.com"}],"homepage":"https://github.com/ember-modifier/ember-modifier#readme","bugs":{"url":"https://github.com/ember-modifier/ember-modifier/issues"},"dist":{"shasum":"2629376a4e6d6bbe3da4ec28b769417801bdc507","tarball":"https://registry.npmjs.org/ember-modifier/-/ember-modifier-4.0.0-beta.1-unstable.a4fec35.tgz","fileCount":14,"integrity":"sha512-6xPr2m7pP+uizkYE5olgNSqCpWCGm9VPIw0xqs/rpkwptNfB9itXkb5XK1QUMjtazWlf4Kwy5vvCDl4l4TwHHg==","signatures":[{"sig":"MEYCIQCUXWYb2ayl8+6tVEjW2InG1cIhDFZEae2Eqo8uzWLYqQIhALZDPR47qQTczBtJtF21eGggs866L0qRWbMoZKbsi5VB","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":57097,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJifBS+ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmoIaQ/+L8tcuySnZqsT/dp2nn5wKA5mTgkzdK2HnqKDiAeecxrtoIks\r\n1XBfq+OBnOkTLULInExhg+dnudgk3tjMgt/Bai9158xenZZhyQQiYIpUApzH\r\nD3veEMOpc38cIwN7XbO9ufvZb/oXHEAuFNueZ00mwkKqUhYglDKVnHdfnQcs\r\nHmsA27MhdnSSlur8cUvKMBfpPHyogt1KzKli52sNRJW4neaPyezVBL0QCyBw\r\nQpJXj4FsBQBSvN+N+V8Vy7tr4236ddYUUg3tv0YSxOGQYNKbuPUKx6RNGPzL\r\nNLU1e06zeONc90kMeGbrG3D7cT8Gn1SOJWPh89pymjCsoEbPFYcqox2RPwf4\r\n3iYVrDtd+b8XSNwHG4zIZuweyRajsKIw7GNGH0wQwtvqzmj/k8uTlqbUOI86\r\nq9CKq34JEKwr4qlqXOqvXmSrnUgUj6SFhSXlageeq1QXl9xSJaUU15QMbknE\r\n8d7FQz4PgYeANf18aYWiEm3dYN7rvle87gG8EgjXNYWh99YrV5kP1u4GXNlg\r\nRY7tb2Hyg5YV8LRel858GABukbTzeoCRI1hRRHRj/0l1Hpe2tZSLnsDBXtwM\r\np9w/ipY/tEELhwC9Hl/X0f9SXCqPYncNovh8mThJsUzAB5PRq9KgKg8+C2jp\r\nW2fCB4trf0/+bl1JPxOZ7SQ5/5jd976ufgs=\r\n=Zf4a\r\n-----END PGP SIGNATURE-----\r\n"},"ember":{"edition":"octane"},"volta":{"extends":"../package.json"},"readme":"ember-modifier\n==============================================================================\n\nThis addon provides an API for authoring [element modifiers] in Ember. It\nmirrors Ember's [helper] API, with variations for writing both simple\nfunction-based modifiers and more complicated class-based modifiers.\n\n[element modifiers]: https://blog.emberjs.com/2019/03/06/coming-soon-in-ember-octane-part-4.html\n[helper]: https://octane-guides-preview.emberjs.com/release/templates/writing-helpers\n\n:warning: **NOTE:** this is the README for the v4 release (currently available in beta)! For the v3 README, see [here](https://github.com/ember-modifier/ember-modifier/blob/v3/README.md). :warning:\n\n- [Compatibility](#compatibility)\n  - [TypeScript](#typescript)\n- [Installation](#installation)\n- [Philosophy](#philosophy)\n  - [Whoa whoa whoa, hold on, what's a _\"side effect\"_?](#whoa-whoa-whoa-hold-on-whats-a-side-effect)\n  - [Managing \"side effects\" effectively](#managing-side-effects-effectively)\n- [Usage](#usage)\n  - [Function-Based Modifiers](#function-based-modifiers)\n    - [Generating a Function-Based Modifier](#generating-a-function-based-modifier)\n    - [Example without Cleanup](#example-without-cleanup)\n    - [Example with Cleanup](#example-with-cleanup)\n  - [Class-Based Modifiers](#class-based-modifiers)\n    - [Generating a Class Modifier](#generating-a-class-modifier)\n    - [Example without Cleanup](#example-without-cleanup-1)\n    - [Example with Cleanup](#example-with-cleanup-1)\n    - [Example with Service Injection](#example-with-service-injection)\n    - [API](#api)\n- [TypeScript](#typescript-1)\n  - [The `Signature` type](#the-signature-type)\n  - [Examples with TypeScript](#examples-with-typescript)\n    - [Function-based modifier](#function-based-modifier)\n    - [Class-based](#class-based)\n- [Contributing](#contributing)\n- [License](#license)\n\nCompatibility\n------------------------------------------------------------------------------\n\n* Ember.js v3.24 or above\n* Ember CLI v2.13 or above\n* Node.js v14 or above\n\n### TypeScript\n\nThis project follows the current draft of [the Semantic Versioning for TypeScript Types][semver] proposal.\n\n- **Currently supported TypeScript versions:** v4.2, v4.3, v4.4, v4.5, and v4.6\n- **Compiler support policy:** [simple majors][sm]\n- **Public API:** all published types not in a `-private` module are public\n\n[semver]: https://github.com/chriskrycho/ember-rfcs/blob/semver-for-ts/text/0730-semver-for-ts.md\n[sm]: https://github.com/chriskrycho/ember-rfcs/blob/semver-for-ts/text/0730-semver-for-ts.md#simple-majors\n\n\nInstallation\n------------------------------------------------------------------------------\n\n```\nember install ember-modifier\n```\n\n\nPhilosophy\n------------------------------------------------------------------------------\n\nModifiers are a basic primitive for interacting with the DOM in Ember. For\nexample, Ember ships with a built-in modifier, `{{on}}`:\n\n```hbs\n<button {{on \"click\" @onClick}}>\n  {{@text}}\n</button>\n```\n\nAll modifiers get applied to elements directly this way (if you see a similar\nvalue that _isn't_ in an element, it is probably a _helper_ instead), and they\nare passed the element when applying their effects.\n\nConceptually, modifiers take _tracked, derived state_, and turn it into some\nsort of _side effect_ related in some way to the DOM element they are applied\nto.\n\n### Whoa whoa whoa, hold on, what's a _\"side effect\"_?\n\nA \"side effect\" is something that happens in programming all the time. Here's an\nexample of one in an Ember component that attempts to make a button like in the\nfirst example, but without modifiers:\n\n```js\n// 🛑 DO NOT COPY THIS 🛑\nimport Component from '@glimmer/component';\n\nexport default class MyButton extends Component {\n  get setupEventHandler() {\n    document.querySelector('#my-button').addEventListener(this.args.onClick);\n\n    return undefined;\n  }\n}\n```\n```hbs\n<button id=\"#my-button\">\n  {{this.setupEventHandler}}\n\n  {{@text}}\n</button>\n```\n\nWe can see by looking at the `setupEventListener` getter that it isn't actually\nreturning a value. Instead, it always returns `undefined`. However, it also adds\nthe `@onClick` argument as an _event listener_ to the button in the template\nwhen the getter is run, as the template is rendering, which is a _side effect_\n- it is an effect of running the code that doesn't have anything to do with the\n\"main\" purpose of that code, in this case to return a dynamically computed\nvalue. In fact, this code doesn't compute a value at all, so this component is\n_misusing_ the getter in order to run its side effect whenever it is rendered in\nthe template.\n\nUnmanaged side effects can make code very difficult to reason about, since any\nfunction could be updating a value elsewhere. In fact, the code above is very\nbuggy:\n\n1. If the `@onClick` argument ever changes, it won't remove the old event\n   listener, it'll just keep adding new ones.\n2. It won't remove the old event listener when the component is removed.\n3. It uses a document element selector that may not be unique, and it has no\n   guarantee that the element will exist when it runs.\n4. It _will_ run in Fastboot/Server Side Rendering, where no DOM exists at all,\n   and it'll throw errors because of this.\n\nHowever, there are lots of times where its difficult to write code that\n_doesn't_ have side effects. Sometimes it would mean having to rewrite a large\nportion of an application. Sometimes, like in the case of modifying DOM, there\nisn't a clear way to do it at _all_ with just getters and components.\n\nThis is where _modifiers_ come in. Modifiers exist as a way to bridge the gap\nbetween derived state and side effects in way that is _contained_ and\n_consistent_, so that users of a modifier don't have to think about them.\n\n### Managing \"side effects\" effectively\n\nLet's look again at our original example:\n\n```hbs\n<button {{on \"click\" @onClick}}>\n  {{@text}}\n</button>\n```\n\nWe can see pretty clearly from this template that Ember will:\n\n1. Create a `<button>` element\n2. Append the contents of the `@text` argument to that button\n3. Add a click event handler to the button that runs the `@onClick` argument\n\nIf `@text` or `@onClick` ever change, Ember will keep everything in sync for us.\nWe don't ever have to manually set `element.textContent` or update anything\nourselves. In this way, we can say the template is _declarative_ - it tells\nEmber what we want the output to be, and Ember handles all of the bookkeeping\nitself.\n\nHere's how we could _implement_ the `{{on}}` modifier so that it always keeps\nthings in sync correctly:\n\n```js\nimport { modifier } from 'ember-modifier';\n\nexport default modifier((element, [eventName, handler]) => {\n  element.addEventListener(eventName, handler);\n\n  return () => {\n    element.removeEventListener(eventName, handler);\n  }\n});\n```\n\nHere, we setup the event listener using the positional parameters passed to the\nmodifier. Then, we return a _destructor_ - a function that _undoes_ our setup,\nand is effectively the _opposite_ side effect. This way, if the `@onClick`\nhandler ever changes, we first teardown the first event listener we added -\nleaving the element in its _original_ state before the modifier ever ran - and\nthen setup the new handler.\n\nThis is what allows us to treat the `{{on}}` modifier as if it were just like\nthe `{{@text}}` value we put in the template. While it _is_ side effecting, it\nknows how to setup and teardown that side effect and manage its state. The side\neffect is _contained_ - it doesn't escape into the rest of our application, it\ndoesn't cause other unrelated changes, and we can think about it as another\npiece of declarative, derived state. Just another part of the template!\n\nIn general, when writing modifiers, especially general purpose/reusable\nmodifiers, they should be designed with this in mind. Which specific effects are\nthey trying to accomplish, how to manage them effectively, and how to do it in\na way that is _transparent_ to the user of the modifier.\n\nUsage\n------------------------------------------------------------------------------\n\nThis addon does not provide any modifiers out of the box. Instead, this library\nallows you to write your own. There are two ways to write modifiers:\n\n1. Function-based modifiers\n2. Class-based modifiers\n\nThese are analogous to Ember's Helper APIs, `helper` and `Helper`.\n\n### Function-Based Modifiers\n\n`modifier` is an API for writing simple modifiers. For instance, you could\nimplement Ember's built-in `{{on}}` modifier like so with `modifier`:\n\n```js\n// /app/modifiers/on.js\nimport { modifier } from 'ember-modifier';\n\nexport default modifier((element, [eventName, handler]) => {\n  element.addEventListener(eventName, handler);\n\n  return () => {\n    element.removeEventListener(eventName, handler);\n  }\n});\n```\n\nFunction-based modifiers consist of a function that receives:\n\n1. The `element`\n2. An array of positional arguments\n3. An object of named arguments\n\n```js\nmodifier((element, positional, named) => { /* */ });\n```\n\nThis function runs the first time when the element the modifier was applied to\nis inserted into the DOM, and it _autotracks_ while running. Any tracked values\nthat it accesses will be tracked, including the arguments it receives, and if\nany of them changes, the function will run again.[^changes]\n\nThe modifier can also optionally return a _destructor_. The destructor function\nwill be run just before the next update, and when the element is being removed\nentirely. It should generally clean up the changes that the modifier made in the\nfirst place.\n\n[^changes]: As with autotracking in general, “changes” here actually means that the tracked property was set—even if it was set to the same value. This is because autotracking does not cache the *values* of properties, only the last time they changed. See [this blog post](https://v5.chriskrycho.com/journal/autotracking-elegant-dx-via-cutting-edge-cs/) for a deep dive on how it works!\n\n#### Generating a Function-Based Modifier\n\nTo create a modifier (and a corresponding integration test), run:\n\n```\nember g modifier scroll-top\n```\n\n#### Example without Cleanup\n\nFor example, if you wanted to implement your own `scrollTop` modifier (similar\nto [this][scroll-example]), you may do something like this:\n\n[scroll-example]: https://github.com/emberjs/ember-render-modifiers#example-scrolling-an-element-to-a-position\n\n```js\n// app/modifiers/scroll-top.js\nimport { modifier } from 'ember-modifier';\n\nexport default modifier((element, [scrollPosition]) => {\n  element.scrollTop = scrollPosition;\n})\n```\n```hbs\n<div class=\"scroll-container\" {{scroll-top @scrollPosition}}>\n  {{yield}}\n</div>\n```\n\n#### Example with Cleanup\n\nIf the functionality you add in the modifier needs to be torn down when the\nelement is removed, you can return a function for the teardown method.\n\nFor example, if you wanted to have your elements dance randomly on the page\nusing `setInterval`, but you wanted to make sure that was canceled when the\nelement was removed, you could do:\n\n```js\n// app/modifiers/move-randomly.js\nimport { modifier } from 'ember-modifier';\n\nconst { random, round } = Math;\n\nexport default modifier(element => {\n  const id = setInterval(() => {\n    const top = round(random() * 500);\n    const left = round(random() * 500);\n    element.style.transform = `translate(${left}px, ${top}px)`;\n  }, 1000);\n\n  return () => clearInterval(id);\n});\n\n```\n```hbs\n<button {{move-randomly}}>\n  {{yield}}\n</button>\n```\n\n### Class-Based Modifiers\n\nSometimes you may need to do something more complicated than what can be handled\nby function-based modifiers. For instance:\n\n1. You may need to inject services and access them\n2. You may need fine-grained control of updates, either for performance or\n   convenience reasons, and don't want to teardown the state of your modifier\n   every time only to set it up again.\n3. You may need to store some local state within your modifier.\n\nIn these cases, you can use a _class-based modifier_ instead. Here's how you\nwould implement the `{{on}}` modifier with a class:\n\n```js\nimport Modifier from 'ember-modifier';\nimport { registerDestructor } from '@ember/destroyable';\n\nfunction cleanup(instance: OnModifier) {\n  let { element, event, handler } = instance;\n\n  if (element && event && handler) {\n    element.removeEventListener(event, handler);\n\n    instance.element = null;\n    instance.event = null;\n    instance.handler = null;\n  }\n}\n\nexport default class OnModifier extends Modifier {\n  element = null;\n  event = null;\n  handler = null;\n\n  modify(element, [event, handler]) {\n    this.addEventListener(element, event, handler);\n    registerDestructor(this, cleanup)\n  }\n\n  // methods for reuse\n  addEventListener = (element, event, handler) => {\n    // Store the current element, event, and handler for when we need to remove\n    // them during cleanup.\n    this.element = element;\n    this.event = event;\n    this.handler = handler;\n\n    element.addEventListener(event, handler);\n  };\n}\n```\n\nWhile this is slightly more complicated than the function-based version, but\nthat complexity comes along with much more _control_.\n\nAs with function-based modifiers, the lifecycle hooks of class modifiers are\n_tracked_. When they run, then any values they access will be added to the\nmodifier, and the modifier will update if any of those values change.\n\n#### Generating a Class Modifier\n\nTo create a modifier (and a corresponding integration test), run:\n\n```\nember g modifier scroll-top --class\n```\n\n#### Example without Cleanup\n\nFor example, let's say you want to implement your own `{{scroll-position}}`\nmodifier (similar to [this](https://github.com/emberjs/ember-render-modifiers#example-scrolling-an-element-to-a-position)).\n\nThis modifier can be attached to any element and accepts a single positional\nargument. When the element is inserted, and whenever the argument is updated, it\nwill set the element's `scrollTop` property to the value of its argument.\n\n(Note that this example does not require the use of a class, and could be\nimplemented equally well with a function-based modifier!)\n\n```js\n// app/modifiers/scroll-position.js\nimport Modifier from 'ember-modifier';\n\nexport default class ScrollPositionModifier extends Modifier {\n  modify(element, [scrollPosition], { relative }) {\n    if(relative) {\n      element.scrollTop += scrollPosition;\n    } else {\n      element.scrollTop = scrollPosition;\n    }\n  }\n}\n```\n\nUsage:\n\n```handlebars\n{{!-- app/components/scroll-container.hbs --}}\n\n<div\n  class=\"scroll-container\"\n  style=\"width: 300px; heigh: 300px; overflow-y: scroll\"\n  {{scroll-position this.scrollPosition relative=false}}\n>\n  {{yield this.scrollToTop}}\n</div>\n```\n\n```js\n// app/components/scroll-container.js\n\nimport Component from '@glimmer/component';\nimport { tracked } from '@glimmer/tracking';\nimport { action } from '@ember/object';\n\nexport default class ScrollContainerComponent extends Component {\n  @tracked scrollPosition = 0;\n\n  @action scrollToTop() {\n    this.scrollPosition = 0;\n  }\n}\n```\n\n```handlebars\n{{!-- app/templates/application.hbs --}}\n\n<ScrollContainer as |scroll|>\n  A lot of content...\n\n  <button {{on \"click\" scroll}}>Back To Top</button>\n</ScrollContainer>\n```\n\n#### Example with Cleanup\n\nIf the functionality you add in the modifier needs to be torn down when the\nmodifier is removed, you can use `registerDestructor` from `@ember/destroyable`.\n\nFor example, if you want to have your elements dance randomly on the page using\n`setInterval`, but you wanted to make sure that was canceled when the modifier\nwas removed, you could do this:\n\n```js\n// app/modifiers/move-randomly.js\n\nimport Modifier from 'ember-modifier';\nimport { registerDestructor } from '@ember/destroyable'\n\nconst { random, round } = Math;\nconst DEFAULT_DELAY = 1000;\n\nfunction cleanup(instance) {\n  if (instance.setIntervalId !== null) {\n    clearInterval(instance.setIntervalId);\n    instance.setIntervalId = null;\n  }\n}\n\nexport default class MoveRandomlyModifier extends Modifier {\n  element = null;\n  setIntervalId = null;\n\n  constructor(owner, args) {\n    super(owner, args);\n    registerDestructor(this, cleanup);\n  }\n\n  modify(element, _, { delay }) {\n    // Save off the element the first time for convenience with #moveElement\n    if (!this.element) {\n      this.element = element;\n    }\n\n    // Reset from any previous state.\n    cleanup(this);\n\n    this.setIntervalId = setInterval(this.#moveElement, delay ?? DEFAULT_DELAY);\n  }\n\n  #moveElement = (element) => {\n    let top = round(random() * 500);\n    let left = round(random() * 500);\n    this.element.style.transform = `translate(${left}px, ${top}px)`;\n  };\n}\n```\n\nUsage:\n\n```hbs\n<div {{move-randomly}}>\n  Catch me if you can!\n</div>\n```\n\n#### Example with Service Injection\n\nYou can also use services into your modifier, just like any other class in Ember.\n\nFor example, suppose you wanted to track click events with `ember-metrics`:\n\n```js\n// app/modifiers/track-click.js\n\nimport { inject as service } from '@ember/service';\nimport Modifier from 'ember-modifier';\nimport { registerDestructor } from '@ember/destroyable';\n\nfunction cleanup(instance) {\n  instance.element?.removeEventListener('click', instance.onClick, true);\n}\n\nexport default class TrackClick extends Modifier {\n  @service metrics;\n\n  constructor(owner, args) {\n    super(owner, args);\n    registerDestructor(this, this.cleanup);\n  }\n\n  modify(element, [eventName], options) {\n    this.element = element;\n    this.eventName = eventName;\n    this.options = options;\n\n    this.cleanup();\n    element.addEventListener('click', this.onClick, true);\n  }\n\n  onClick = () => {\n    this.metrics.trackEvent(this.eventName, this.options);\n  };\n}\n```\n\nUsage:\n\n```hbs\n<button {{track-click \"like-button-click\" page=\"some page\" title=\"some title\"}}>\n  Click Me!\n</button>\n```\n\n#### API\n\n<dl>\n<dt><code>constructor(owner, args)</code>\n<dd>Constructor for the modifier. You must call <code>super(...arguments)</code> before performing other initialization.</dd>\n<dt><code>modify(element, positionalArgs, namedArgs)</code>\n<dd>The primary hook for running a modifier. It gets called when the modifier is installed on the element, and any time any tracked state it uses changes. That tracked state can be from its arguments, which are auto-tracked, or from any other kind of tracked state, including but not limited to state on injected services.</dd>\n</dl>\n\n## TypeScript\n\nBoth the function- and class-based APIs can be used with TypeScript!\n\nBefore checking out the [Examples with Typescript](#examples-with-type-script) below, there is an important caveat you should understand about type safety!\n\nThere are, today, two basic approaches you can take to dealing with your modifier's arguments and element in a type safe way:\n\n1. You can use a type definition which specifies those for the outside world, relying on tooling like [Glint][glint] to check that the invocation is correct, and treat input as safe accordingly.\n2. You can provide the minimal public interface which *all* modifiers conform to, and do runtime type checking with `assert` calls to make your internal implementation safe.\n\nIf you have a code base which is strictly typed from end to end, including with template type checking via Glint, then (1) is a great choice. If you have a mixed code base, or are publishing an addon for others to use, then [it's usually best to do both (1) *and* (2)][safe-ts-libs]!\n\n[glint]: https://github.com/typed-ember/glint\n[safe-ts-libs]: https://v5.chriskrycho.com/journal/writing-robust-typescript-libraries/s\n\nTo handle runtime checking, for non-type-checked templates (including projects not yet using Glint or supporting external callers), you should *act* as though the arguments passed to your modifier can be *anything*. They’re typed as `unknown` by default, which means by default TypeScript will *require* you to work out the type passed to you at runtime. For example, with the `ScrollPositionModifier` shown above, you can combine TypeScript’s [type narrowing] with the default types for the class to provide runtime errors if the caller passes the wrong types, while providing safety throughout the rest of the body of the modifier. Here, `modify` would be *guaranteed* to have the correct types for `scrollPosition` and `relative`:\n\n[type narrowing]: https://www.typescriptlang.org/docs/handbook/advanced-types.html#type-guards-and-differentiating-types\n\n```ts\nimport Modifier from 'ember-modifier';\nimport { assert } from '@ember/debug';\n\nexport class ScrollPositionModifier extends ClassBasedModifier {\n  modify(element, [scrollPosition], { relative }) {\n    assert(,\n      `first argument to 'scroll-position' must be a number, but ${scrollPosition} was ${typeof scrollPosition}`,\n      typeof scrollPosition === \"number\"\n    );\n\n    assert(\n      `'relative' argument to 'scroll-position' must be a boolean, but ${relative} was ${typeof relative}`,\n      typeof relative === \"boolean\"\n    );\n\n    if (relative) {\n      element.scrollTop += scrollPosition;\n    } else {\n      element.scrollTop = scrollPosition;\n    }\n  }\n}\n```\n\nIf you were writing for a fully-typed context, you can define your `Modifier` with a `Signature` interface, similar to the way you would define your signature for a Glimmer Component:\n\n```ts\n// app/modifiers/scroll-position.ts\nimport Modifier from 'ember-modifier';\n\ninterface ScrollPositionModifierSignature {\n  Args: {\n    Positional: [number];\n    Named: {\n      relative: boolean;\n    };\n  };\n}\n\nexport default class ScrollPositionModifier\n    extends Modifier<ScrollPositionModifierSignature> {\n  modify(element, [scrollPosition], { relative }) {\n    if (relative) {\n      element.scrollTop += scrollPosition;\n    } else {\n      element.scrollTop = scrollPosition;\n    }\n  }\n}\n```\n\nBesides supporting integration with [Glint][glint], this also provides nice hooks for documentation tooling. Note, however, that it can result in *much worse* feedback in tests or at runtime if someone passes the wrong kind of arguments to your modifier and you *haven't* included assertions: users who pass the wrong thing will just have the modifier fail. For example, if you fail to pass the positional argument, `scrollPosition` would simply be `undefined`, and then `element.scrollTop` could end up being set to `NaN`. Whoops! For that reason, if your modifier will be used by non-TypeScript consumers, you should both publish the types for it *and* add dev-time assertions:\n\n```ts\n// app/modifiers/scroll-position.ts\nimport Modifier from 'ember-modifier';\n\ninterface ScrollPositionModifierSignature {\n  Args: {\n    Positional: [scrollPosition: number];\n    Named: {\n      relative: boolean;\n    };\n  };\n  Element: Element; // not required: it'll be set by default\n}\n\nexport default class ScrollPositionModifier\n    extends Modifier<ScrollPositionModifierSignature> {\n  modify(element, [scrollPosition], { relative }) {\n    assert(,\n      `first argument to 'scroll-position' must be a number, but ${scrollPosition} was ${typeof scrollPosition}`,\n      typeof scrollPosition === \"number\"\n    );\n\n    assert(\n      `'relative' argument to 'scroll-position' must be a boolean, but ${relative} was ${typeof relative}`,\n      typeof relative === \"boolean\"\n    );\n\n    if (relative) {\n      element.scrollTop += scrollPosition;\n    } else {\n      element.scrollTop = scrollPosition;\n    }\n  }\n}\n```\n\n### The `Signature` type\n\nThe `Signature` for a modifier is the combination of the positional and named arguments it receives and the element to which it may be applied.\n\n```ts\ninterface Signature {\n  Args: {\n    Named: {\n      [argName: string]: unknown;\n    };\n    Positional: unknown[];\n  };\n  Element: Element;\n}\n```\n\nWhen writing a signature yourself, all of those are optional: the types for modifiers will fall back to the correct defaults of `Element`, an object for named arguments, and an array for positional arguments. You can apply a signature when defining either a function-based or a class-based modifier.\n\nIn a function-based modifier, the callback arguments will be inferred from the signature, so you do not need to specify the types twice:\n\n```ts\ninterface MySignature {\n  Element: HTMLMediaElement;\n  Args: {\n    Named: {\n      when: boolean;\n    };\n    Positional: [];\n  };\n}\n\nconst play = modifier<MySignature>((el, _, { when: shouldPlay }) => {\n  if (shouldPlay) {\n    el.play();\n  } else {\n    el.pause();\n  }\n})\n```\n\nYou never *need* to specify a signature in this way for a function-based modifier: you can simply write the types inline instead:\n\n```ts\nconst play = modifier(\n  (el: HTMLMediaElement, _: [], { when: shouldPlay }: { when: boolean}) => {\n    if (shouldPlay) {\n      el.play();\n    } else {\n      el.pause();\n    }\n  }\n);\n```\n\nHowever, the explicit `modifier<Signature>(...)` form is tested to keep working, since it can be useful for documentation!\n\nThe same basic approach works with a class-based modifier:\n\n```ts\ninterface MySignature {\n  // ...\n}\n\nexport default class MyModifier extends Modifier<MySignature> {\n  // ...\n}\n```\n\nIn that case, the `element` and `args` will always have the right types throughout the body. Since the type of `args` in the constructor are derived from the signature, you can use the `ArgsFor` type helper to avoid having to write the type out separately:\n\n```ts\nimport Modifier, { ArgsFor } from 'ember-modifier';\n\ninterface MySignature {\n  // ...\n}\n\nexport default class MyModifier extends Modifier<MySignature> {\n  constructor(owner: unknown, args: ArgsFor<MySignature>) {\n    // ...\n  }\n}\n```\n\n`ArgsFor` isn't magic: it just takes the `Args` from the `Signature` you provide and turns it into the right shape for the constructor: the `Named` type ends up as the `named` field and the `Positional` type ends up as the type for `args.positional`, so you could write it out yourself if you preferred:\n\n```ts\nimport Modifier from 'ember-modifier';\n\ninterface MySignature {\n  // ...\n}\n\nexport default class MyModifier extends Modifier<MySignature> {\n  constructor(\n    owner: unknown,\n    args: {\n      named: MySignature['Args']['Named'];\n      positional: MySignature['Args']['Positional'];\n    }\n  ) {\n    // ...\n  }\n}\n```\n\n### Examples with TypeScript\n\n#### Function-based modifier\n\nLet’s look at a variant of the `move-randomly` example from above, implemented in TypeScript, and now requiring a named argument, the maximum offset. Using the recommended combination of types and runtime type-checking, it would look like this:\n\n```ts\n// app/modifiers/move-randomly.js\nimport { modifier } from 'ember-modifier';\nimport { assert } from '@ember/debug';\n\nconst { random, round } = Math;\n\nexport default modifier(\n  (element: HTMLElement, _: [], named: { maxOffset: number }\n) => {\n  assert(\n    'move-randomly can only be installed on HTML elements!',\n    element instanceof HTMLElement\n  );\n\n  const { maxOffset } = named;\n  assert(\n    `The 'max-offset' argument to 'move-randomly' must be a number, but was ${typeof maxOffset}`,\n    typeof maxOffset === \"number\"\n  );\n\n  const id = setInterval(() => {\n    const top = round(random() * maxOffset);\n    const left = round(random() * maxOffset);\n    element.style.transform = `translate(${left}px, ${top}px)`;\n  }, 1000);\n\n  return () => clearInterval(id);\n});\n```\n\nA few things to notice here:\n\n1.  TypeScript correctly infers the *base* types of the arguments for the function passed to the modifier; you don't need to specify what `element` or `positional` or `named` are unless you are doing like we are in this example and providing a usefully more-specific type to callers.\n\n2.  If we returned a teardown function which had the wrong type signature, that would also be an error.\n\n    If we return a value instead of a function, for example:\n\n    ```ts\n    export default modifier((element, _, named) => {\n      // ...\n\n      return id;\n    });\n    ```\n\n    TypeScript will report:\n\n    > ```\n    > Type 'Timeout' is not assignable to type 'void | Teardown'.\n    > ```\n\n    Likewise, if we return a function with the wrong signature, we will see the same kinds of errors. If we expected to receive an argument in the teardown callback, like this:\n\n    ```ts\n    export default modifier((element, _, named) => {\n      // \n\n      return (interval: number) => clearTimeout(interval);\n    });\n    ```\n\n    TypeScript will report:\n\n    > ```\n    > Type '(interval: number) => void' is not assignable to type 'void | Teardown'.\n    > ```\n\n####  Class-based\n\nTo support correctly typing `args` in the `constructor` for the case where you do runtime type checking, we supply an `ArgsFor` type utility. (This is useful because the `Signature` type, matching Glimmer Component and other \"invokable\" items in Ember/Glimmer, has capital letters for the names of the types, while `args.named` and `args.positional` are lower-case.) Here’s how that would look with a fully typed modifier that alerts \"This is a typesafe modifier!\" an amount of time after receiving arguments that depends on the length of the first argument and an *optional* multiplier (a nonsensical thing to do, but one that illustrates a fully type-safe class-based modifier):\n\n```ts\nimport Modifier, { ArgsFor, PositionalArgs, NamedArgs } from 'ember-modifier';\nimport { assert } from '@ember/debug';\n\ninterface NeatSignature {\n  Args: {\n    Named: {\n      multiplier?: number;\n    };\n    Positional: [string];\n  }\n}\n\n\nfunction cleanup(instance: Neat) => {\n  if (instance.interval) {\n    clearInterval(instance.interval);\n  }\n}\n\nexport default class Neat extends Modifier<NeatSignature> {\n  interval?: number;\n\n  constructor(owner: unknown, args: ArgsFor<NeatSignature>) {\n    super(owner, args);\n    registerDestructor(this, cleanup);\n  }\n\n  modify(\n    element: Element,\n    [lengthOfInput]: PositionalArgs<NeatSignature>,\n    { multiplier }: NamedArgs<NeatSignature>\n  ) {\n    assert(\n  \t  `positional arg must be 'string' but was ${typeof lengthOfInput}`,\n  \t  typeof lengthOfInput === 'string'\n  \t);\n\n    assert(\n    \t`'multiplier' arg must be a number but was ${typeof multiplier}`,\n    \tmultiplier ? typeof multiplier === \"number\" : true\n    );\n\n    multiplier = modifier ?? 1000;\n\n    let updateTime = multiplier * lengthOfInput;\n    this.interval = setInterval(() => {\n      element.innerText =\n        `Behold, a type safe modifier moved after ${updateTime / 1000}s`;\n    }, updateTime)\n  }\n}\n```\n\nContributing\n------------------------------------------------------------------------------\n\nSee the [Contributing](CONTRIBUTING.md) guide for details.\n\n\nLicense\n------------------------------------------------------------------------------\n\nThis project is licensed under the [MIT License](LICENSE.md).\n","engines":{"node":"14.* || 16.* || >= 18"},"exports":{".":"./dist/index.js","./*":"./dist/*","./addon-main.js":"./addon-main.js"},"gitHead":"a4fec35bf5dc314e668102140238b3c052e06dd5","scripts":{"lint":"eslint . --cache --ext .ts,.js","test":"echo 'Please refer to test-app for addon tests'","build":"rollup --config","start":"rollup --config --watch","lint:fix":"eslint . --fix --ext .ts,.js","typecheck":"tsc --noEmit","prepublishOnly":"rollup --config"},"_npmUser":{"name":"sergeastapov","email":"sergeastapov@gmail.com"},"repository":{"url":"git+https://github.com/ember-modifier/ember-modifier.git","type":"git"},"_npmVersion":"8.10.0","description":"A library for writing Ember modifiers","directories":{"doc":"doc","test":"tests"},"ember-addon":{"main":"addon-main.js","type":"addon","version":2},"_nodeVersion":"14.19.1","dependencies":{"@embroider/addon-shim":"^1.6.0","ember-cli-string-utils":"^1.1.0","ember-cli-normalize-entity-name":"^1.0.0"},"publishConfig":{"registry":"https://registry.npmjs.org"},"typesVersions":{"*":{"*":["./dist/*"],".":["./dist/index.d.ts"],"./-private/signature":["./dist/-private/signature.d.ts"]}},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"tslib":"^2.4.0","eslint":"^8.15.0","rollup":"^2.72.1","prettier":"^2.4.1","typescript":"^4.6.4","@babel/core":"^7.17.10","@types/rsvp":"^4.0.4","expect-type":"^0.13.0","@types/qunit":"^2.11.2","rollup-plugin-ts":"^2.0.7","@types/ember-qunit":"~5.0.0","eslint-plugin-node":"^11.1.0","@types/ember__debug":"~4.0.1","eslint-plugin-ember":"^10.6.1","@babel/eslint-parser":"^7.15.8","@embroider/addon-dev":"^1.6.0","@rollup/plugin-babel":"^5.3.1","@types/ember-resolver":"^5.0.10","@types/ember__modifier":"~4.0.1","eslint-config-prettier":"^8.3.0","eslint-plugin-prettier":"^4.0.0","@babel/preset-typescript":"^7.15.0","@types/ember__destroyable":"~4.0.0","@typescript-eslint/parser":"^5.23.0","@types/ember__test-helpers":"^2.0.2","ember-destroyable-polyfill":"^2.0.3","@typescript-eslint/eslint-plugin":"^5.23.0","@babel/plugin-proposal-decorators":"^7.17.9","@babel/plugin-proposal-class-properties":"^7.16.7"},"peerDependencies":{"ember-source":"*"},"peerDependenciesMeta":{"ember-source":{"optional":true}},"_npmOperationalInternal":{"tmp":"tmp/ember-modifier_4.0.0-beta.1-unstable.a4fec35_1652298942062_0.056216665426461976","host":"s3://npm-registry-packages"}},"4.0.0-beta.1-unstable.9301aec":{"name":"ember-modifier","version":"4.0.0-beta.1-unstable.9301aec","keywords":["ember-addon"],"author":"","license":"MIT","_id":"ember-modifier@4.0.0-beta.1-unstable.9301aec","maintainers":[{"name":"rwjblue","email":"me@rwjblue.com"},{"name":"chriskrycho","email":"chris@chriskrycho.com"},{"name":"pzuraq","email":"opensource@pzuraq.com"},{"name":"sergeastapov","email":"sergeastapov@gmail.com"}],"homepage":"https://github.com/ember-modifier/ember-modifier#readme","bugs":{"url":"https://github.com/ember-modifier/ember-modifier/issues"},"dist":{"shasum":"e88a803a822adb1369728e3232b15980ef5afeda","tarball":"https://registry.npmjs.org/ember-modifier/-/ember-modifier-4.0.0-beta.1-unstable.9301aec.tgz","fileCount":14,"integrity":"sha512-F4+K8Wr5Nw7BbYdJtpAhlBUv9R3KOCZdtVS3wbyTwJXHD8ChXybIHSne6ffuwMSCJIV2rYpC85XOxEnKu/xXzg==","signatures":[{"sig":"MEYCIQDQZrVFyeJDG6Z9iMUAPCep2699xjsd/5dM5/N/nPqEHAIhAL6/ISufNj5/jSt0GwVvjN77W8PAh37Ol7xVorLCb0dP","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":57098,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiglegACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmo/6RAAlg4/q6pclGoPgJTBSljPLD3iynLcuVQozSizQx/4q1OyWK28\r\noVn6o6Beb8Mlp5zOxCtNgAtL6OhbD1E8k6JQqFw9GAvQ8Hi3T74aY2kHUN5j\r\n2MB0obYyFH1TrjB0mepWKt6QH/Lak4KGWvE7un1gwVnnrIH7FsSmAUjSLHtK\r\nImiijidLXnGrx7os5FDEqt/sKPoUhF4hN38TnuAMWR8rrUsqR8vYCFFCcyvX\r\nUmmilOW7sWZX6z+EeYvLuaa3pjVqeXGLLte5A+eDbpMlyAL5n0D0QI+GGSwK\r\npAV9LnsSvF4+//pFKbibJ5i6CFvABZYR3x7wkRAZu+FSv0xfikGQT3xR5Oa/\r\n+aZBdXk3hANxeiZIBcmNAOWO0vHOo1sICpyCHGb4Kc0sJv6L/4K+T8Nr6Ese\r\nTgVYvyJqTMYKJwDDDOB77qepESOgmWaHHfiPrrxNcq4YP/c7v1yVG7lFD3/4\r\noQJ7jBYPyHJ6DG7jZeM9foz3e6X2GEkqMd1ZFSeceMwcczvCpNQGh5ExrgNc\r\nBDk21V2CLmnYAjc2TflATzI1PTeNYIptIw12f0N4Lk90SQMXHcbtETxBubXa\r\ngPCQFPSOjIVQHm4+qlfzF+cc0FzOBFfmopzSU9PN3JY0YdJPm+OvO8ZChWk0\r\nugsQ+dmOWfb7+PxfOyRP+fK/7ZYTwwEgv54=\r\n=u3HC\r\n-----END PGP SIGNATURE-----\r\n"},"ember":{"edition":"octane"},"volta":{"extends":"../package.json"},"readme":"ember-modifier\n==============================================================================\n\nThis addon provides an API for authoring [element modifiers] in Ember. It\nmirrors Ember's [helper] API, with variations for writing both simple\nfunction-based modifiers and more complicated class-based modifiers.\n\n[element modifiers]: https://blog.emberjs.com/2019/03/06/coming-soon-in-ember-octane-part-4.html\n[helper]: https://octane-guides-preview.emberjs.com/release/templates/writing-helpers\n\n:warning: **NOTE:** this is the README for the v4 release (currently available in beta)! For the v3 README, see [here](https://github.com/ember-modifier/ember-modifier/blob/v3/README.md). :warning:\n\n- [Compatibility](#compatibility)\n  - [TypeScript](#typescript)\n- [Installation](#installation)\n- [Philosophy](#philosophy)\n  - [Whoa whoa whoa, hold on, what's a _\"side effect\"_?](#whoa-whoa-whoa-hold-on-whats-a-side-effect)\n  - [Managing \"side effects\" effectively](#managing-side-effects-effectively)\n- [Usage](#usage)\n  - [Function-Based Modifiers](#function-based-modifiers)\n    - [Generating a Function-Based Modifier](#generating-a-function-based-modifier)\n    - [Example without Cleanup](#example-without-cleanup)\n    - [Example with Cleanup](#example-with-cleanup)\n  - [Class-Based Modifiers](#class-based-modifiers)\n    - [Generating a Class Modifier](#generating-a-class-modifier)\n    - [Example without Cleanup](#example-without-cleanup-1)\n    - [Example with Cleanup](#example-with-cleanup-1)\n    - [Example with Service Injection](#example-with-service-injection)\n    - [API](#api)\n- [TypeScript](#typescript-1)\n  - [The `Signature` type](#the-signature-type)\n  - [Examples with TypeScript](#examples-with-typescript)\n    - [Function-based modifier](#function-based-modifier)\n    - [Class-based](#class-based)\n- [Contributing](#contributing)\n- [License](#license)\n\nCompatibility\n------------------------------------------------------------------------------\n\n* Ember.js v3.24 or above\n* Ember CLI v2.13 or above\n* Node.js v14 or above\n\n### TypeScript\n\nThis project follows the current draft of [the Semantic Versioning for TypeScript Types][semver] proposal.\n\n- **Currently supported TypeScript versions:** v4.2, v4.3, v4.4, v4.5, and v4.6\n- **Compiler support policy:** [simple majors][sm]\n- **Public API:** all published types not in a `-private` module are public\n\n[semver]: https://github.com/chriskrycho/ember-rfcs/blob/semver-for-ts/text/0730-semver-for-ts.md\n[sm]: https://github.com/chriskrycho/ember-rfcs/blob/semver-for-ts/text/0730-semver-for-ts.md#simple-majors\n\n\nInstallation\n------------------------------------------------------------------------------\n\n```\nember install ember-modifier\n```\n\n\nPhilosophy\n------------------------------------------------------------------------------\n\nModifiers are a basic primitive for interacting with the DOM in Ember. For\nexample, Ember ships with a built-in modifier, `{{on}}`:\n\n```hbs\n<button {{on \"click\" @onClick}}>\n  {{@text}}\n</button>\n```\n\nAll modifiers get applied to elements directly this way (if you see a similar\nvalue that _isn't_ in an element, it is probably a _helper_ instead), and they\nare passed the element when applying their effects.\n\nConceptually, modifiers take _tracked, derived state_, and turn it into some\nsort of _side effect_ related in some way to the DOM element they are applied\nto.\n\n### Whoa whoa whoa, hold on, what's a _\"side effect\"_?\n\nA \"side effect\" is something that happens in programming all the time. Here's an\nexample of one in an Ember component that attempts to make a button like in the\nfirst example, but without modifiers:\n\n```js\n// 🛑 DO NOT COPY THIS 🛑\nimport Component from '@glimmer/component';\n\nexport default class MyButton extends Component {\n  get setupEventHandler() {\n    document.querySelector('#my-button').addEventListener(this.args.onClick);\n\n    return undefined;\n  }\n}\n```\n```hbs\n<button id=\"#my-button\">\n  {{this.setupEventHandler}}\n\n  {{@text}}\n</button>\n```\n\nWe can see by looking at the `setupEventListener` getter that it isn't actually\nreturning a value. Instead, it always returns `undefined`. However, it also adds\nthe `@onClick` argument as an _event listener_ to the button in the template\nwhen the getter is run, as the template is rendering, which is a _side effect_\n- it is an effect of running the code that doesn't have anything to do with the\n\"main\" purpose of that code, in this case to return a dynamically computed\nvalue. In fact, this code doesn't compute a value at all, so this component is\n_misusing_ the getter in order to run its side effect whenever it is rendered in\nthe template.\n\nUnmanaged side effects can make code very difficult to reason about, since any\nfunction could be updating a value elsewhere. In fact, the code above is very\nbuggy:\n\n1. If the `@onClick` argument ever changes, it won't remove the old event\n   listener, it'll just keep adding new ones.\n2. It won't remove the old event listener when the component is removed.\n3. It uses a document element selector that may not be unique, and it has no\n   guarantee that the element will exist when it runs.\n4. It _will_ run in Fastboot/Server Side Rendering, where no DOM exists at all,\n   and it'll throw errors because of this.\n\nHowever, there are lots of times where its difficult to write code that\n_doesn't_ have side effects. Sometimes it would mean having to rewrite a large\nportion of an application. Sometimes, like in the case of modifying DOM, there\nisn't a clear way to do it at _all_ with just getters and components.\n\nThis is where _modifiers_ come in. Modifiers exist as a way to bridge the gap\nbetween derived state and side effects in way that is _contained_ and\n_consistent_, so that users of a modifier don't have to think about them.\n\n### Managing \"side effects\" effectively\n\nLet's look again at our original example:\n\n```hbs\n<button {{on \"click\" @onClick}}>\n  {{@text}}\n</button>\n```\n\nWe can see pretty clearly from this template that Ember will:\n\n1. Create a `<button>` element\n2. Append the contents of the `@text` argument to that button\n3. Add a click event handler to the button that runs the `@onClick` argument\n\nIf `@text` or `@onClick` ever change, Ember will keep everything in sync for us.\nWe don't ever have to manually set `element.textContent` or update anything\nourselves. In this way, we can say the template is _declarative_ - it tells\nEmber what we want the output to be, and Ember handles all of the bookkeeping\nitself.\n\nHere's how we could _implement_ the `{{on}}` modifier so that it always keeps\nthings in sync correctly:\n\n```js\nimport { modifier } from 'ember-modifier';\n\nexport default modifier((element, [eventName, handler]) => {\n  element.addEventListener(eventName, handler);\n\n  return () => {\n    element.removeEventListener(eventName, handler);\n  }\n});\n```\n\nHere, we setup the event listener using the positional parameters passed to the\nmodifier. Then, we return a _destructor_ - a function that _undoes_ our setup,\nand is effectively the _opposite_ side effect. This way, if the `@onClick`\nhandler ever changes, we first teardown the first event listener we added -\nleaving the element in its _original_ state before the modifier ever ran - and\nthen setup the new handler.\n\nThis is what allows us to treat the `{{on}}` modifier as if it were just like\nthe `{{@text}}` value we put in the template. While it _is_ side effecting, it\nknows how to setup and teardown that side effect and manage its state. The side\neffect is _contained_ - it doesn't escape into the rest of our application, it\ndoesn't cause other unrelated changes, and we can think about it as another\npiece of declarative, derived state. Just another part of the template!\n\nIn general, when writing modifiers, especially general purpose/reusable\nmodifiers, they should be designed with this in mind. Which specific effects are\nthey trying to accomplish, how to manage them effectively, and how to do it in\na way that is _transparent_ to the user of the modifier.\n\nUsage\n------------------------------------------------------------------------------\n\nThis addon does not provide any modifiers out of the box. Instead, this library\nallows you to write your own. There are two ways to write modifiers:\n\n1. Function-based modifiers\n2. Class-based modifiers\n\nThese are analogous to Ember's Helper APIs, `helper` and `Helper`.\n\n### Function-Based Modifiers\n\n`modifier` is an API for writing simple modifiers. For instance, you could\nimplement Ember's built-in `{{on}}` modifier like so with `modifier`:\n\n```js\n// /app/modifiers/on.js\nimport { modifier } from 'ember-modifier';\n\nexport default modifier((element, [eventName, handler]) => {\n  element.addEventListener(eventName, handler);\n\n  return () => {\n    element.removeEventListener(eventName, handler);\n  }\n});\n```\n\nFunction-based modifiers consist of a function that receives:\n\n1. The `element`\n2. An array of positional arguments\n3. An object of named arguments\n\n```js\nmodifier((element, positional, named) => { /* */ });\n```\n\nThis function runs the first time when the element the modifier was applied to\nis inserted into the DOM, and it _autotracks_ while running. Any tracked values\nthat it accesses will be tracked, including the arguments it receives, and if\nany of them changes, the function will run again.[^changes]\n\nThe modifier can also optionally return a _destructor_. The destructor function\nwill be run just before the next update, and when the element is being removed\nentirely. It should generally clean up the changes that the modifier made in the\nfirst place.\n\n[^changes]: As with autotracking in general, “changes” here actually means that the tracked property was set—even if it was set to the same value. This is because autotracking does not cache the *values* of properties, only the last time they changed. See [this blog post](https://v5.chriskrycho.com/journal/autotracking-elegant-dx-via-cutting-edge-cs/) for a deep dive on how it works!\n\n#### Generating a Function-Based Modifier\n\nTo create a modifier (and a corresponding integration test), run:\n\n```\nember g modifier scroll-top\n```\n\n#### Example without Cleanup\n\nFor example, if you wanted to implement your own `scrollTop` modifier (similar\nto [this][scroll-example]), you may do something like this:\n\n[scroll-example]: https://github.com/emberjs/ember-render-modifiers#example-scrolling-an-element-to-a-position\n\n```js\n// app/modifiers/scroll-top.js\nimport { modifier } from 'ember-modifier';\n\nexport default modifier((element, [scrollPosition]) => {\n  element.scrollTop = scrollPosition;\n})\n```\n```hbs\n<div class=\"scroll-container\" {{scroll-top @scrollPosition}}>\n  {{yield}}\n</div>\n```\n\n#### Example with Cleanup\n\nIf the functionality you add in the modifier needs to be torn down when the\nelement is removed, you can return a function for the teardown method.\n\nFor example, if you wanted to have your elements dance randomly on the page\nusing `setInterval`, but you wanted to make sure that was canceled when the\nelement was removed, you could do:\n\n```js\n// app/modifiers/move-randomly.js\nimport { modifier } from 'ember-modifier';\n\nconst { random, round } = Math;\n\nexport default modifier(element => {\n  const id = setInterval(() => {\n    const top = round(random() * 500);\n    const left = round(random() * 500);\n    element.style.transform = `translate(${left}px, ${top}px)`;\n  }, 1000);\n\n  return () => clearInterval(id);\n});\n\n```\n```hbs\n<button {{move-randomly}}>\n  {{yield}}\n</button>\n```\n\n### Class-Based Modifiers\n\nSometimes you may need to do something more complicated than what can be handled\nby function-based modifiers. For instance:\n\n1. You may need to inject services and access them\n2. You may need fine-grained control of updates, either for performance or\n   convenience reasons, and don't want to teardown the state of your modifier\n   every time only to set it up again.\n3. You may need to store some local state within your modifier.\n\nIn these cases, you can use a _class-based modifier_ instead. Here's how you\nwould implement the `{{on}}` modifier with a class:\n\n```js\nimport Modifier from 'ember-modifier';\nimport { registerDestructor } from '@ember/destroyable';\n\nfunction cleanup(instance: OnModifier) {\n  let { element, event, handler } = instance;\n\n  if (element && event && handler) {\n    element.removeEventListener(event, handler);\n\n    instance.element = null;\n    instance.event = null;\n    instance.handler = null;\n  }\n}\n\nexport default class OnModifier extends Modifier {\n  element = null;\n  event = null;\n  handler = null;\n\n  modify(element, [event, handler]) {\n    this.addEventListener(element, event, handler);\n    registerDestructor(this, cleanup)\n  }\n\n  // methods for reuse\n  addEventListener = (element, event, handler) => {\n    // Store the current element, event, and handler for when we need to remove\n    // them during cleanup.\n    this.element = element;\n    this.event = event;\n    this.handler = handler;\n\n    element.addEventListener(event, handler);\n  };\n}\n```\n\nWhile this is slightly more complicated than the function-based version, but\nthat complexity comes along with much more _control_.\n\nAs with function-based modifiers, the lifecycle hooks of class modifiers are\n_tracked_. When they run, then any values they access will be added to the\nmodifier, and the modifier will update if any of those values change.\n\n#### Generating a Class Modifier\n\nTo create a modifier (and a corresponding integration test), run:\n\n```\nember g modifier scroll-top --class\n```\n\n#### Example without Cleanup\n\nFor example, let's say you want to implement your own `{{scroll-position}}`\nmodifier (similar to [this](https://github.com/emberjs/ember-render-modifiers#example-scrolling-an-element-to-a-position)).\n\nThis modifier can be attached to any element and accepts a single positional\nargument. When the element is inserted, and whenever the argument is updated, it\nwill set the element's `scrollTop` property to the value of its argument.\n\n(Note that this example does not require the use of a class, and could be\nimplemented equally well with a function-based modifier!)\n\n```js\n// app/modifiers/scroll-position.js\nimport Modifier from 'ember-modifier';\n\nexport default class ScrollPositionModifier extends Modifier {\n  modify(element, [scrollPosition], { relative }) {\n    if(relative) {\n      element.scrollTop += scrollPosition;\n    } else {\n      element.scrollTop = scrollPosition;\n    }\n  }\n}\n```\n\nUsage:\n\n```handlebars\n{{!-- app/components/scroll-container.hbs --}}\n\n<div\n  class=\"scroll-container\"\n  style=\"width: 300px; heigh: 300px; overflow-y: scroll\"\n  {{scroll-position this.scrollPosition relative=false}}\n>\n  {{yield this.scrollToTop}}\n</div>\n```\n\n```js\n// app/components/scroll-container.js\n\nimport Component from '@glimmer/component';\nimport { tracked } from '@glimmer/tracking';\nimport { action } from '@ember/object';\n\nexport default class ScrollContainerComponent extends Component {\n  @tracked scrollPosition = 0;\n\n  @action scrollToTop() {\n    this.scrollPosition = 0;\n  }\n}\n```\n\n```handlebars\n{{!-- app/templates/application.hbs --}}\n\n<ScrollContainer as |scroll|>\n  A lot of content...\n\n  <button {{on \"click\" scroll}}>Back To Top</button>\n</ScrollContainer>\n```\n\n#### Example with Cleanup\n\nIf the functionality you add in the modifier needs to be torn down when the\nmodifier is removed, you can use `registerDestructor` from `@ember/destroyable`.\n\nFor example, if you want to have your elements dance randomly on the page using\n`setInterval`, but you wanted to make sure that was canceled when the modifier\nwas removed, you could do this:\n\n```js\n// app/modifiers/move-randomly.js\n\nimport Modifier from 'ember-modifier';\nimport { registerDestructor } from '@ember/destroyable'\n\nconst { random, round } = Math;\nconst DEFAULT_DELAY = 1000;\n\nfunction cleanup(instance) {\n  if (instance.setIntervalId !== null) {\n    clearInterval(instance.setIntervalId);\n    instance.setIntervalId = null;\n  }\n}\n\nexport default class MoveRandomlyModifier extends Modifier {\n  element = null;\n  setIntervalId = null;\n\n  constructor(owner, args) {\n    super(owner, args);\n    registerDestructor(this, cleanup);\n  }\n\n  modify(element, _, { delay }) {\n    // Save off the element the first time for convenience with #moveElement\n    if (!this.element) {\n      this.element = element;\n    }\n\n    // Reset from any previous state.\n    cleanup(this);\n\n    this.setIntervalId = setInterval(this.#moveElement, delay ?? DEFAULT_DELAY);\n  }\n\n  #moveElement = (element) => {\n    let top = round(random() * 500);\n    let left = round(random() * 500);\n    this.element.style.transform = `translate(${left}px, ${top}px)`;\n  };\n}\n```\n\nUsage:\n\n```hbs\n<div {{move-randomly}}>\n  Catch me if you can!\n</div>\n```\n\n#### Example with Service Injection\n\nYou can also use services into your modifier, just like any other class in Ember.\n\nFor example, suppose you wanted to track click events with `ember-metrics`:\n\n```js\n// app/modifiers/track-click.js\n\nimport { inject as service } from '@ember/service';\nimport Modifier from 'ember-modifier';\nimport { registerDestructor } from '@ember/destroyable';\n\nfunction cleanup(instance) {\n  instance.element?.removeEventListener('click', instance.onClick, true);\n}\n\nexport default class TrackClick extends Modifier {\n  @service metrics;\n\n  constructor(owner, args) {\n    super(owner, args);\n    registerDestructor(this, this.cleanup);\n  }\n\n  modify(element, [eventName], options) {\n    this.element = element;\n    this.eventName = eventName;\n    this.options = options;\n\n    this.cleanup();\n    element.addEventListener('click', this.onClick, true);\n  }\n\n  onClick = () => {\n    this.metrics.trackEvent(this.eventName, this.options);\n  };\n}\n```\n\nUsage:\n\n```hbs\n<button {{track-click \"like-button-click\" page=\"some page\" title=\"some title\"}}>\n  Click Me!\n</button>\n```\n\n#### API\n\n<dl>\n<dt><code>constructor(owner, args)</code>\n<dd>Constructor for the modifier. You must call <code>super(...arguments)</code> before performing other initialization.</dd>\n<dt><code>modify(element, positionalArgs, namedArgs)</code>\n<dd>The primary hook for running a modifier. It gets called when the modifier is installed on the element, and any time any tracked state it uses changes. That tracked state can be from its arguments, which are auto-tracked, or from any other kind of tracked state, including but not limited to state on injected services.</dd>\n</dl>\n\n## TypeScript\n\nBoth the function- and class-based APIs can be used with TypeScript!\n\nBefore checking out the [Examples with Typescript](#examples-with-type-script) below, there is an important caveat you should understand about type safety!\n\nThere are, today, two basic approaches you can take to dealing with your modifier's arguments and element in a type safe way:\n\n1. You can use a type definition which specifies those for the outside world, relying on tooling like [Glint][glint] to check that the invocation is correct, and treat input as safe accordingly.\n2. You can provide the minimal public interface which *all* modifiers conform to, and do runtime type checking with `assert` calls to make your internal implementation safe.\n\nIf you have a code base which is strictly typed from end to end, including with template type checking via Glint, then (1) is a great choice. If you have a mixed code base, or are publishing an addon for others to use, then [it's usually best to do both (1) *and* (2)][safe-ts-libs]!\n\n[glint]: https://github.com/typed-ember/glint\n[safe-ts-libs]: https://v5.chriskrycho.com/journal/writing-robust-typescript-libraries/s\n\nTo handle runtime checking, for non-type-checked templates (including projects not yet using Glint or supporting external callers), you should *act* as though the arguments passed to your modifier can be *anything*. They’re typed as `unknown` by default, which means by default TypeScript will *require* you to work out the type passed to you at runtime. For example, with the `ScrollPositionModifier` shown above, you can combine TypeScript’s [type narrowing] with the default types for the class to provide runtime errors if the caller passes the wrong types, while providing safety throughout the rest of the body of the modifier. Here, `modify` would be *guaranteed* to have the correct types for `scrollPosition` and `relative`:\n\n[type narrowing]: https://www.typescriptlang.org/docs/handbook/advanced-types.html#type-guards-and-differentiating-types\n\n```ts\nimport Modifier from 'ember-modifier';\nimport { assert } from '@ember/debug';\n\nexport class ScrollPositionModifier extends ClassBasedModifier {\n  modify(element, [scrollPosition], { relative }) {\n    assert(,\n      `first argument to 'scroll-position' must be a number, but ${scrollPosition} was ${typeof scrollPosition}`,\n      typeof scrollPosition === \"number\"\n    );\n\n    assert(\n      `'relative' argument to 'scroll-position' must be a boolean, but ${relative} was ${typeof relative}`,\n      typeof relative === \"boolean\"\n    );\n\n    if (relative) {\n      element.scrollTop += scrollPosition;\n    } else {\n      element.scrollTop = scrollPosition;\n    }\n  }\n}\n```\n\nIf you were writing for a fully-typed context, you can define your `Modifier` with a `Signature` interface, similar to the way you would define your signature for a Glimmer Component:\n\n```ts\n// app/modifiers/scroll-position.ts\nimport Modifier from 'ember-modifier';\n\ninterface ScrollPositionModifierSignature {\n  Args: {\n    Positional: [number];\n    Named: {\n      relative: boolean;\n    };\n  };\n}\n\nexport default class ScrollPositionModifier\n    extends Modifier<ScrollPositionModifierSignature> {\n  modify(element, [scrollPosition], { relative }) {\n    if (relative) {\n      element.scrollTop += scrollPosition;\n    } else {\n      element.scrollTop = scrollPosition;\n    }\n  }\n}\n```\n\nBesides supporting integration with [Glint][glint], this also provides nice hooks for documentation tooling. Note, however, that it can result in *much worse* feedback in tests or at runtime if someone passes the wrong kind of arguments to your modifier and you *haven't* included assertions: users who pass the wrong thing will just have the modifier fail. For example, if you fail to pass the positional argument, `scrollPosition` would simply be `undefined`, and then `element.scrollTop` could end up being set to `NaN`. Whoops! For that reason, if your modifier will be used by non-TypeScript consumers, you should both publish the types for it *and* add dev-time assertions:\n\n```ts\n// app/modifiers/scroll-position.ts\nimport Modifier from 'ember-modifier';\n\ninterface ScrollPositionModifierSignature {\n  Args: {\n    Positional: [scrollPosition: number];\n    Named: {\n      relative: boolean;\n    };\n  };\n  Element: Element; // not required: it'll be set by default\n}\n\nexport default class ScrollPositionModifier\n    extends Modifier<ScrollPositionModifierSignature> {\n  modify(element, [scrollPosition], { relative }) {\n    assert(,\n      `first argument to 'scroll-position' must be a number, but ${scrollPosition} was ${typeof scrollPosition}`,\n      typeof scrollPosition === \"number\"\n    );\n\n    assert(\n      `'relative' argument to 'scroll-position' must be a boolean, but ${relative} was ${typeof relative}`,\n      typeof relative === \"boolean\"\n    );\n\n    if (relative) {\n      element.scrollTop += scrollPosition;\n    } else {\n      element.scrollTop = scrollPosition;\n    }\n  }\n}\n```\n\n### The `Signature` type\n\nThe `Signature` for a modifier is the combination of the positional and named arguments it receives and the element to which it may be applied.\n\n```ts\ninterface Signature {\n  Args: {\n    Named: {\n      [argName: string]: unknown;\n    };\n    Positional: unknown[];\n  };\n  Element: Element;\n}\n```\n\nWhen writing a signature yourself, all of those are optional: the types for modifiers will fall back to the correct defaults of `Element`, an object for named arguments, and an array for positional arguments. You can apply a signature when defining either a function-based or a class-based modifier.\n\nIn a function-based modifier, the callback arguments will be inferred from the signature, so you do not need to specify the types twice:\n\n```ts\ninterface MySignature {\n  Element: HTMLMediaElement;\n  Args: {\n    Named: {\n      when: boolean;\n    };\n    Positional: [];\n  };\n}\n\nconst play = modifier<MySignature>((el, _, { when: shouldPlay }) => {\n  if (shouldPlay) {\n    el.play();\n  } else {\n    el.pause();\n  }\n})\n```\n\nYou never *need* to specify a signature in this way for a function-based modifier: you can simply write the types inline instead:\n\n```ts\nconst play = modifier(\n  (el: HTMLMediaElement, _: [], { when: shouldPlay }: { when: boolean}) => {\n    if (shouldPlay) {\n      el.play();\n    } else {\n      el.pause();\n    }\n  }\n);\n```\n\nHowever, the explicit `modifier<Signature>(...)` form is tested to keep working, since it can be useful for documentation!\n\nThe same basic approach works with a class-based modifier:\n\n```ts\ninterface MySignature {\n  // ...\n}\n\nexport default class MyModifier extends Modifier<MySignature> {\n  // ...\n}\n```\n\nIn that case, the `element` and `args` will always have the right types throughout the body. Since the type of `args` in the constructor are derived from the signature, you can use the `ArgsFor` type helper to avoid having to write the type out separately:\n\n```ts\nimport Modifier, { ArgsFor } from 'ember-modifier';\n\ninterface MySignature {\n  // ...\n}\n\nexport default class MyModifier extends Modifier<MySignature> {\n  constructor(owner: unknown, args: ArgsFor<MySignature>) {\n    // ...\n  }\n}\n```\n\n`ArgsFor` isn't magic: it just takes the `Args` from the `Signature` you provide and turns it into the right shape for the constructor: the `Named` type ends up as the `named` field and the `Positional` type ends up as the type for `args.positional`, so you could write it out yourself if you preferred:\n\n```ts\nimport Modifier from 'ember-modifier';\n\ninterface MySignature {\n  // ...\n}\n\nexport default class MyModifier extends Modifier<MySignature> {\n  constructor(\n    owner: unknown,\n    args: {\n      named: MySignature['Args']['Named'];\n      positional: MySignature['Args']['Positional'];\n    }\n  ) {\n    // ...\n  }\n}\n```\n\n### Examples with TypeScript\n\n#### Function-based modifier\n\nLet’s look at a variant of the `move-randomly` example from above, implemented in TypeScript, and now requiring a named argument, the maximum offset. Using the recommended combination of types and runtime type-checking, it would look like this:\n\n```ts\n// app/modifiers/move-randomly.js\nimport { modifier } from 'ember-modifier';\nimport { assert } from '@ember/debug';\n\nconst { random, round } = Math;\n\nexport default modifier(\n  (element: HTMLElement, _: [], named: { maxOffset: number }\n) => {\n  assert(\n    'move-randomly can only be installed on HTML elements!',\n    element instanceof HTMLElement\n  );\n\n  const { maxOffset } = named;\n  assert(\n    `The 'max-offset' argument to 'move-randomly' must be a number, but was ${typeof maxOffset}`,\n    typeof maxOffset === \"number\"\n  );\n\n  const id = setInterval(() => {\n    const top = round(random() * maxOffset);\n    const left = round(random() * maxOffset);\n    element.style.transform = `translate(${left}px, ${top}px)`;\n  }, 1000);\n\n  return () => clearInterval(id);\n});\n```\n\nA few things to notice here:\n\n1.  TypeScript correctly infers the *base* types of the arguments for the function passed to the modifier; you don't need to specify what `element` or `positional` or `named` are unless you are doing like we are in this example and providing a usefully more-specific type to callers.\n\n2.  If we returned a teardown function which had the wrong type signature, that would also be an error.\n\n    If we return a value instead of a function, for example:\n\n    ```ts\n    export default modifier((element, _, named) => {\n      // ...\n\n      return id;\n    });\n    ```\n\n    TypeScript will report:\n\n    > ```\n    > Type 'Timeout' is not assignable to type 'void | Teardown'.\n    > ```\n\n    Likewise, if we return a function with the wrong signature, we will see the same kinds of errors. If we expected to receive an argument in the teardown callback, like this:\n\n    ```ts\n    export default modifier((element, _, named) => {\n      // \n\n      return (interval: number) => clearTimeout(interval);\n    });\n    ```\n\n    TypeScript will report:\n\n    > ```\n    > Type '(interval: number) => void' is not assignable to type 'void | Teardown'.\n    > ```\n\n####  Class-based\n\nTo support correctly typing `args` in the `constructor` for the case where you do runtime type checking, we supply an `ArgsFor` type utility. (This is useful because the `Signature` type, matching Glimmer Component and other \"invokable\" items in Ember/Glimmer, has capital letters for the names of the types, while `args.named` and `args.positional` are lower-case.) Here’s how that would look with a fully typed modifier that alerts \"This is a typesafe modifier!\" an amount of time after receiving arguments that depends on the length of the first argument and an *optional* multiplier (a nonsensical thing to do, but one that illustrates a fully type-safe class-based modifier):\n\n```ts\nimport Modifier, { ArgsFor, PositionalArgs, NamedArgs } from 'ember-modifier';\nimport { assert } from '@ember/debug';\n\ninterface NeatSignature {\n  Args: {\n    Named: {\n      multiplier?: number;\n    };\n    Positional: [string];\n  }\n}\n\n\nfunction cleanup(instance: Neat) => {\n  if (instance.interval) {\n    clearInterval(instance.interval);\n  }\n}\n\nexport default class Neat extends Modifier<NeatSignature> {\n  interval?: number;\n\n  constructor(owner: unknown, args: ArgsFor<NeatSignature>) {\n    super(owner, args);\n    registerDestructor(this, cleanup);\n  }\n\n  modify(\n    element: Element,\n    [lengthOfInput]: PositionalArgs<NeatSignature>,\n    { multiplier }: NamedArgs<NeatSignature>\n  ) {\n    assert(\n  \t  `positional arg must be 'string' but was ${typeof lengthOfInput}`,\n  \t  typeof lengthOfInput === 'string'\n  \t);\n\n    assert(\n    \t`'multiplier' arg must be a number but was ${typeof multiplier}`,\n    \tmultiplier ? typeof multiplier === \"number\" : true\n    );\n\n    multiplier = modifier ?? 1000;\n\n    let updateTime = multiplier * lengthOfInput;\n    this.interval = setInterval(() => {\n      element.innerText =\n        `Behold, a type safe modifier moved after ${updateTime / 1000}s`;\n    }, updateTime)\n  }\n}\n```\n\nContributing\n------------------------------------------------------------------------------\n\nSee the [Contributing](CONTRIBUTING.md) guide for details.\n\n\nLicense\n------------------------------------------------------------------------------\n\nThis project is licensed under the [MIT License](LICENSE.md).\n","engines":{"node":"14.* || 16.* || >= 18"},"exports":{".":"./dist/index.js","./*":"./dist/*","./addon-main.js":"./addon-main.js"},"gitHead":"9301aeccc82a7d6b93d4f620b87fe27cb244b1d3","scripts":{"lint":"eslint . --cache --ext .ts,.js","test":"echo 'Please refer to test-app for addon tests'","build":"rollup --config","start":"rollup --config --watch","lint:fix":"eslint . --fix --ext .ts,.js","typecheck":"tsc --noEmit","prepublishOnly":"rollup --config"},"_npmUser":{"name":"sergeastapov","email":"sergeastapov@gmail.com"},"repository":{"url":"git+https://github.com/ember-modifier/ember-modifier.git","type":"git"},"_npmVersion":"8.10.0","description":"A library for writing Ember modifiers","directories":{"doc":"doc","test":"tests"},"ember-addon":{"main":"addon-main.js","type":"addon","version":2},"_nodeVersion":"14.19.2","dependencies":{"@embroider/addon-shim":"^1.6.0","ember-cli-string-utils":"^1.1.0","ember-cli-normalize-entity-name":"^1.0.0"},"publishConfig":{"registry":"https://registry.npmjs.org"},"typesVersions":{"*":{"*":["./dist/*"],".":["./dist/index.d.ts"],"./-private/signature":["./dist/-private/signature.d.ts"]}},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"tslib":"^2.4.0","eslint":"^8.15.0","rollup":"^2.73.0","prettier":"^2.4.1","typescript":"^4.6.4","@babel/core":"^7.17.10","@types/rsvp":"^4.0.4","expect-type":"^0.13.0","@types/qunit":"^2.11.2","rollup-plugin-ts":"^2.0.7","@types/ember-qunit":"~5.0.0","eslint-plugin-node":"^11.1.0","@types/ember__debug":"~4.0.1","eslint-plugin-ember":"^10.6.1","@babel/eslint-parser":"^7.15.8","@embroider/addon-dev":"^1.6.0","@rollup/plugin-babel":"^5.3.1","@types/ember-resolver":"^5.0.10","@types/ember__modifier":"~4.0.1","eslint-config-prettier":"^8.3.0","eslint-plugin-prettier":"^4.0.0","@babel/preset-typescript":"^7.15.0","@types/ember__destroyable":"~4.0.0","@typescript-eslint/parser":"^5.23.0","@types/ember__test-helpers":"^2.0.2","ember-destroyable-polyfill":"^2.0.3","@typescript-eslint/eslint-plugin":"^5.23.0","@babel/plugin-proposal-decorators":"^7.17.9","@babel/plugin-proposal-class-properties":"^7.16.7"},"peerDependencies":{"ember-source":"*"},"peerDependenciesMeta":{"ember-source":{"optional":true}},"_npmOperationalInternal":{"tmp":"tmp/ember-modifier_4.0.0-beta.1-unstable.9301aec_1652709279994_0.5132878684876079","host":"s3://npm-registry-packages"}},"4.0.0-beta.1-unstable.4a5c2b6":{"name":"ember-modifier","version":"4.0.0-beta.1-unstable.4a5c2b6","keywords":["ember-addon"],"author":"","license":"MIT","_id":"ember-modifier@4.0.0-beta.1-unstable.4a5c2b6","maintainers":[{"name":"rwjblue","email":"me@rwjblue.com"},{"name":"chriskrycho","email":"chris@chriskrycho.com"},{"name":"pzuraq","email":"opensource@pzuraq.com"},{"name":"sergeastapov","email":"sergeastapov@gmail.com"}],"homepage":"https://github.com/ember-modifier/ember-modifier#readme","bugs":{"url":"https://github.com/ember-modifier/ember-modifier/issues"},"dist":{"shasum":"426b41add6010e277e4dfc34c4b42dabb8c8f8ab","tarball":"https://registry.npmjs.org/ember-modifier/-/ember-modifier-4.0.0-beta.1-unstable.4a5c2b6.tgz","fileCount":14,"integrity":"sha512-bwggBxAwF/5m+csGPfOQWzI7C5WAjg7WVAzFNia3V9j2n1LQHAtSGIHbAdmtTX9XUgHEi3ELDINhDYVI/oaR9g==","signatures":[{"sig":"MEUCIQDd0pStLsJWdofZ0UZrTdQja/2RjhnTWFGTusnXTqBciQIgPNj5+YKWx4WYauXxrrpiFD6BgfztcYv/4+jxWaWnFMc=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":57098,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJigletACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqNOhAAjUKuxjAMaW/Ckmzm24qNijwprgETWDvrczUbZ6lwivUg+pC3\r\nIVs1wX2ZVIJp5Dq66VjMwlaLaCP6KglbtSCWZlnV+Leh5b7qL0kvgFpZkrcV\r\nfW9D4NLFr2kiJ//LBiCv1ObAGewjlfp5hk0mMTgqXdsMnL0Kcc9TS/BQNROn\r\nfDMHBp0GVMv6gyaAMtAFwWBDwuzC8S7VsEUBiiYh1VdLUhYPiUhgjTsZiybf\r\nm1xKURthmZPBib949XlVhNSp/sJkyxdExf25LfnZkmJgAallz8IpHBIAo/wL\r\nzFxu5DAEBSgz5InJFA5jDKANUHCSm6sBeFk9S72PoHxMkk9YYT1C7cCHjF0e\r\n6ZD1cRRolXSUKYuUV5j/FelWb7RbTlQmYGHnBVPCYTlkiQL/B5ffv8j45E1S\r\n3PZdiaZDGjN+VkgSPgmvaVssvKUKXwkH1/7m22vbMaRZZtuQtRCY49G4mJIW\r\numy4SVHmtH9SvrCh5vkcxWYZaKvZ6dwIYwl8ubA8lPCwRGvX6Py0K5u+HI+V\r\njhxPdCX4vx5XW91V8NrQg/N6213WAPCbXdzOVQs4z4vXJ3wNxUARl0MFIin1\r\nm8c0hrw2uNyiBPfPk/b7KdAHTEbqzhfnKWwhqJj+jqnLLjIp2RdjBPkeFyXu\r\nJ9ZkhRbOMPDrJ3eeooqoVm3fjN4rtYjMzj4=\r\n=7Pmx\r\n-----END PGP SIGNATURE-----\r\n"},"ember":{"edition":"octane"},"volta":{"extends":"../package.json"},"readme":"ember-modifier\n==============================================================================\n\nThis addon provides an API for authoring [element modifiers] in Ember. It\nmirrors Ember's [helper] API, with variations for writing both simple\nfunction-based modifiers and more complicated class-based modifiers.\n\n[element modifiers]: https://blog.emberjs.com/2019/03/06/coming-soon-in-ember-octane-part-4.html\n[helper]: https://octane-guides-preview.emberjs.com/release/templates/writing-helpers\n\n:warning: **NOTE:** this is the README for the v4 release (currently available in beta)! For the v3 README, see [here](https://github.com/ember-modifier/ember-modifier/blob/v3/README.md). :warning:\n\n- [Compatibility](#compatibility)\n  - [TypeScript](#typescript)\n- [Installation](#installation)\n- [Philosophy](#philosophy)\n  - [Whoa whoa whoa, hold on, what's a _\"side effect\"_?](#whoa-whoa-whoa-hold-on-whats-a-side-effect)\n  - [Managing \"side effects\" effectively](#managing-side-effects-effectively)\n- [Usage](#usage)\n  - [Function-Based Modifiers](#function-based-modifiers)\n    - [Generating a Function-Based Modifier](#generating-a-function-based-modifier)\n    - [Example without Cleanup](#example-without-cleanup)\n    - [Example with Cleanup](#example-with-cleanup)\n  - [Class-Based Modifiers](#class-based-modifiers)\n    - [Generating a Class Modifier](#generating-a-class-modifier)\n    - [Example without Cleanup](#example-without-cleanup-1)\n    - [Example with Cleanup](#example-with-cleanup-1)\n    - [Example with Service Injection](#example-with-service-injection)\n    - [API](#api)\n- [TypeScript](#typescript-1)\n  - [The `Signature` type](#the-signature-type)\n  - [Examples with TypeScript](#examples-with-typescript)\n    - [Function-based modifier](#function-based-modifier)\n    - [Class-based](#class-based)\n- [Contributing](#contributing)\n- [License](#license)\n\nCompatibility\n------------------------------------------------------------------------------\n\n* Ember.js v3.24 or above\n* Ember CLI v2.13 or above\n* Node.js v14 or above\n\n### TypeScript\n\nThis project follows the current draft of [the Semantic Versioning for TypeScript Types][semver] proposal.\n\n- **Currently supported TypeScript versions:** v4.2, v4.3, v4.4, v4.5, and v4.6\n- **Compiler support policy:** [simple majors][sm]\n- **Public API:** all published types not in a `-private` module are public\n\n[semver]: https://github.com/chriskrycho/ember-rfcs/blob/semver-for-ts/text/0730-semver-for-ts.md\n[sm]: https://github.com/chriskrycho/ember-rfcs/blob/semver-for-ts/text/0730-semver-for-ts.md#simple-majors\n\n\nInstallation\n------------------------------------------------------------------------------\n\n```\nember install ember-modifier\n```\n\n\nPhilosophy\n------------------------------------------------------------------------------\n\nModifiers are a basic primitive for interacting with the DOM in Ember. For\nexample, Ember ships with a built-in modifier, `{{on}}`:\n\n```hbs\n<button {{on \"click\" @onClick}}>\n  {{@text}}\n</button>\n```\n\nAll modifiers get applied to elements directly this way (if you see a similar\nvalue that _isn't_ in an element, it is probably a _helper_ instead), and they\nare passed the element when applying their effects.\n\nConceptually, modifiers take _tracked, derived state_, and turn it into some\nsort of _side effect_ related in some way to the DOM element they are applied\nto.\n\n### Whoa whoa whoa, hold on, what's a _\"side effect\"_?\n\nA \"side effect\" is something that happens in programming all the time. Here's an\nexample of one in an Ember component that attempts to make a button like in the\nfirst example, but without modifiers:\n\n```js\n// 🛑 DO NOT COPY THIS 🛑\nimport Component from '@glimmer/component';\n\nexport default class MyButton extends Component {\n  get setupEventHandler() {\n    document.querySelector('#my-button').addEventListener(this.args.onClick);\n\n    return undefined;\n  }\n}\n```\n```hbs\n<button id=\"#my-button\">\n  {{this.setupEventHandler}}\n\n  {{@text}}\n</button>\n```\n\nWe can see by looking at the `setupEventListener` getter that it isn't actually\nreturning a value. Instead, it always returns `undefined`. However, it also adds\nthe `@onClick` argument as an _event listener_ to the button in the template\nwhen the getter is run, as the template is rendering, which is a _side effect_\n- it is an effect of running the code that doesn't have anything to do with the\n\"main\" purpose of that code, in this case to return a dynamically computed\nvalue. In fact, this code doesn't compute a value at all, so this component is\n_misusing_ the getter in order to run its side effect whenever it is rendered in\nthe template.\n\nUnmanaged side effects can make code very difficult to reason about, since any\nfunction could be updating a value elsewhere. In fact, the code above is very\nbuggy:\n\n1. If the `@onClick` argument ever changes, it won't remove the old event\n   listener, it'll just keep adding new ones.\n2. It won't remove the old event listener when the component is removed.\n3. It uses a document element selector that may not be unique, and it has no\n   guarantee that the element will exist when it runs.\n4. It _will_ run in Fastboot/Server Side Rendering, where no DOM exists at all,\n   and it'll throw errors because of this.\n\nHowever, there are lots of times where its difficult to write code that\n_doesn't_ have side effects. Sometimes it would mean having to rewrite a large\nportion of an application. Sometimes, like in the case of modifying DOM, there\nisn't a clear way to do it at _all_ with just getters and components.\n\nThis is where _modifiers_ come in. Modifiers exist as a way to bridge the gap\nbetween derived state and side effects in way that is _contained_ and\n_consistent_, so that users of a modifier don't have to think about them.\n\n### Managing \"side effects\" effectively\n\nLet's look again at our original example:\n\n```hbs\n<button {{on \"click\" @onClick}}>\n  {{@text}}\n</button>\n```\n\nWe can see pretty clearly from this template that Ember will:\n\n1. Create a `<button>` element\n2. Append the contents of the `@text` argument to that button\n3. Add a click event handler to the button that runs the `@onClick` argument\n\nIf `@text` or `@onClick` ever change, Ember will keep everything in sync for us.\nWe don't ever have to manually set `element.textContent` or update anything\nourselves. In this way, we can say the template is _declarative_ - it tells\nEmber what we want the output to be, and Ember handles all of the bookkeeping\nitself.\n\nHere's how we could _implement_ the `{{on}}` modifier so that it always keeps\nthings in sync correctly:\n\n```js\nimport { modifier } from 'ember-modifier';\n\nexport default modifier((element, [eventName, handler]) => {\n  element.addEventListener(eventName, handler);\n\n  return () => {\n    element.removeEventListener(eventName, handler);\n  }\n});\n```\n\nHere, we setup the event listener using the positional parameters passed to the\nmodifier. Then, we return a _destructor_ - a function that _undoes_ our setup,\nand is effectively the _opposite_ side effect. This way, if the `@onClick`\nhandler ever changes, we first teardown the first event listener we added -\nleaving the element in its _original_ state before the modifier ever ran - and\nthen setup the new handler.\n\nThis is what allows us to treat the `{{on}}` modifier as if it were just like\nthe `{{@text}}` value we put in the template. While it _is_ side effecting, it\nknows how to setup and teardown that side effect and manage its state. The side\neffect is _contained_ - it doesn't escape into the rest of our application, it\ndoesn't cause other unrelated changes, and we can think about it as another\npiece of declarative, derived state. Just another part of the template!\n\nIn general, when writing modifiers, especially general purpose/reusable\nmodifiers, they should be designed with this in mind. Which specific effects are\nthey trying to accomplish, how to manage them effectively, and how to do it in\na way that is _transparent_ to the user of the modifier.\n\nUsage\n------------------------------------------------------------------------------\n\nThis addon does not provide any modifiers out of the box. Instead, this library\nallows you to write your own. There are two ways to write modifiers:\n\n1. Function-based modifiers\n2. Class-based modifiers\n\nThese are analogous to Ember's Helper APIs, `helper` and `Helper`.\n\n### Function-Based Modifiers\n\n`modifier` is an API for writing simple modifiers. For instance, you could\nimplement Ember's built-in `{{on}}` modifier like so with `modifier`:\n\n```js\n// /app/modifiers/on.js\nimport { modifier } from 'ember-modifier';\n\nexport default modifier((element, [eventName, handler]) => {\n  element.addEventListener(eventName, handler);\n\n  return () => {\n    element.removeEventListener(eventName, handler);\n  }\n});\n```\n\nFunction-based modifiers consist of a function that receives:\n\n1. The `element`\n2. An array of positional arguments\n3. An object of named arguments\n\n```js\nmodifier((element, positional, named) => { /* */ });\n```\n\nThis function runs the first time when the element the modifier was applied to\nis inserted into the DOM, and it _autotracks_ while running. Any tracked values\nthat it accesses will be tracked, including the arguments it receives, and if\nany of them changes, the function will run again.[^changes]\n\nThe modifier can also optionally return a _destructor_. The destructor function\nwill be run just before the next update, and when the element is being removed\nentirely. It should generally clean up the changes that the modifier made in the\nfirst place.\n\n[^changes]: As with autotracking in general, “changes” here actually means that the tracked property was set—even if it was set to the same value. This is because autotracking does not cache the *values* of properties, only the last time they changed. See [this blog post](https://v5.chriskrycho.com/journal/autotracking-elegant-dx-via-cutting-edge-cs/) for a deep dive on how it works!\n\n#### Generating a Function-Based Modifier\n\nTo create a modifier (and a corresponding integration test), run:\n\n```\nember g modifier scroll-top\n```\n\n#### Example without Cleanup\n\nFor example, if you wanted to implement your own `scrollTop` modifier (similar\nto [this][scroll-example]), you may do something like this:\n\n[scroll-example]: https://github.com/emberjs/ember-render-modifiers#example-scrolling-an-element-to-a-position\n\n```js\n// app/modifiers/scroll-top.js\nimport { modifier } from 'ember-modifier';\n\nexport default modifier((element, [scrollPosition]) => {\n  element.scrollTop = scrollPosition;\n})\n```\n```hbs\n<div class=\"scroll-container\" {{scroll-top @scrollPosition}}>\n  {{yield}}\n</div>\n```\n\n#### Example with Cleanup\n\nIf the functionality you add in the modifier needs to be torn down when the\nelement is removed, you can return a function for the teardown method.\n\nFor example, if you wanted to have your elements dance randomly on the page\nusing `setInterval`, but you wanted to make sure that was canceled when the\nelement was removed, you could do:\n\n```js\n// app/modifiers/move-randomly.js\nimport { modifier } from 'ember-modifier';\n\nconst { random, round } = Math;\n\nexport default modifier(element => {\n  const id = setInterval(() => {\n    const top = round(random() * 500);\n    const left = round(random() * 500);\n    element.style.transform = `translate(${left}px, ${top}px)`;\n  }, 1000);\n\n  return () => clearInterval(id);\n});\n\n```\n```hbs\n<button {{move-randomly}}>\n  {{yield}}\n</button>\n```\n\n### Class-Based Modifiers\n\nSometimes you may need to do something more complicated than what can be handled\nby function-based modifiers. For instance:\n\n1. You may need to inject services and access them\n2. You may need fine-grained control of updates, either for performance or\n   convenience reasons, and don't want to teardown the state of your modifier\n   every time only to set it up again.\n3. You may need to store some local state within your modifier.\n\nIn these cases, you can use a _class-based modifier_ instead. Here's how you\nwould implement the `{{on}}` modifier with a class:\n\n```js\nimport Modifier from 'ember-modifier';\nimport { registerDestructor } from '@ember/destroyable';\n\nfunction cleanup(instance: OnModifier) {\n  let { element, event, handler } = instance;\n\n  if (element && event && handler) {\n    element.removeEventListener(event, handler);\n\n    instance.element = null;\n    instance.event = null;\n    instance.handler = null;\n  }\n}\n\nexport default class OnModifier extends Modifier {\n  element = null;\n  event = null;\n  handler = null;\n\n  modify(element, [event, handler]) {\n    this.addEventListener(element, event, handler);\n    registerDestructor(this, cleanup)\n  }\n\n  // methods for reuse\n  addEventListener = (element, event, handler) => {\n    // Store the current element, event, and handler for when we need to remove\n    // them during cleanup.\n    this.element = element;\n    this.event = event;\n    this.handler = handler;\n\n    element.addEventListener(event, handler);\n  };\n}\n```\n\nWhile this is slightly more complicated than the function-based version, but\nthat complexity comes along with much more _control_.\n\nAs with function-based modifiers, the lifecycle hooks of class modifiers are\n_tracked_. When they run, then any values they access will be added to the\nmodifier, and the modifier will update if any of those values change.\n\n#### Generating a Class Modifier\n\nTo create a modifier (and a corresponding integration test), run:\n\n```\nember g modifier scroll-top --class\n```\n\n#### Example without Cleanup\n\nFor example, let's say you want to implement your own `{{scroll-position}}`\nmodifier (similar to [this](https://github.com/emberjs/ember-render-modifiers#example-scrolling-an-element-to-a-position)).\n\nThis modifier can be attached to any element and accepts a single positional\nargument. When the element is inserted, and whenever the argument is updated, it\nwill set the element's `scrollTop` property to the value of its argument.\n\n(Note that this example does not require the use of a class, and could be\nimplemented equally well with a function-based modifier!)\n\n```js\n// app/modifiers/scroll-position.js\nimport Modifier from 'ember-modifier';\n\nexport default class ScrollPositionModifier extends Modifier {\n  modify(element, [scrollPosition], { relative }) {\n    if(relative) {\n      element.scrollTop += scrollPosition;\n    } else {\n      element.scrollTop = scrollPosition;\n    }\n  }\n}\n```\n\nUsage:\n\n```handlebars\n{{!-- app/components/scroll-container.hbs --}}\n\n<div\n  class=\"scroll-container\"\n  style=\"width: 300px; heigh: 300px; overflow-y: scroll\"\n  {{scroll-position this.scrollPosition relative=false}}\n>\n  {{yield this.scrollToTop}}\n</div>\n```\n\n```js\n// app/components/scroll-container.js\n\nimport Component from '@glimmer/component';\nimport { tracked } from '@glimmer/tracking';\nimport { action } from '@ember/object';\n\nexport default class ScrollContainerComponent extends Component {\n  @tracked scrollPosition = 0;\n\n  @action scrollToTop() {\n    this.scrollPosition = 0;\n  }\n}\n```\n\n```handlebars\n{{!-- app/templates/application.hbs --}}\n\n<ScrollContainer as |scroll|>\n  A lot of content...\n\n  <button {{on \"click\" scroll}}>Back To Top</button>\n</ScrollContainer>\n```\n\n#### Example with Cleanup\n\nIf the functionality you add in the modifier needs to be torn down when the\nmodifier is removed, you can use `registerDestructor` from `@ember/destroyable`.\n\nFor example, if you want to have your elements dance randomly on the page using\n`setInterval`, but you wanted to make sure that was canceled when the modifier\nwas removed, you could do this:\n\n```js\n// app/modifiers/move-randomly.js\n\nimport Modifier from 'ember-modifier';\nimport { registerDestructor } from '@ember/destroyable'\n\nconst { random, round } = Math;\nconst DEFAULT_DELAY = 1000;\n\nfunction cleanup(instance) {\n  if (instance.setIntervalId !== null) {\n    clearInterval(instance.setIntervalId);\n    instance.setIntervalId = null;\n  }\n}\n\nexport default class MoveRandomlyModifier extends Modifier {\n  element = null;\n  setIntervalId = null;\n\n  constructor(owner, args) {\n    super(owner, args);\n    registerDestructor(this, cleanup);\n  }\n\n  modify(element, _, { delay }) {\n    // Save off the element the first time for convenience with #moveElement\n    if (!this.element) {\n      this.element = element;\n    }\n\n    // Reset from any previous state.\n    cleanup(this);\n\n    this.setIntervalId = setInterval(this.#moveElement, delay ?? DEFAULT_DELAY);\n  }\n\n  #moveElement = (element) => {\n    let top = round(random() * 500);\n    let left = round(random() * 500);\n    this.element.style.transform = `translate(${left}px, ${top}px)`;\n  };\n}\n```\n\nUsage:\n\n```hbs\n<div {{move-randomly}}>\n  Catch me if you can!\n</div>\n```\n\n#### Example with Service Injection\n\nYou can also use services into your modifier, just like any other class in Ember.\n\nFor example, suppose you wanted to track click events with `ember-metrics`:\n\n```js\n// app/modifiers/track-click.js\n\nimport { inject as service } from '@ember/service';\nimport Modifier from 'ember-modifier';\nimport { registerDestructor } from '@ember/destroyable';\n\nfunction cleanup(instance) {\n  instance.element?.removeEventListener('click', instance.onClick, true);\n}\n\nexport default class TrackClick extends Modifier {\n  @service metrics;\n\n  constructor(owner, args) {\n    super(owner, args);\n    registerDestructor(this, this.cleanup);\n  }\n\n  modify(element, [eventName], options) {\n    this.element = element;\n    this.eventName = eventName;\n    this.options = options;\n\n    this.cleanup();\n    element.addEventListener('click', this.onClick, true);\n  }\n\n  onClick = () => {\n    this.metrics.trackEvent(this.eventName, this.options);\n  };\n}\n```\n\nUsage:\n\n```hbs\n<button {{track-click \"like-button-click\" page=\"some page\" title=\"some title\"}}>\n  Click Me!\n</button>\n```\n\n#### API\n\n<dl>\n<dt><code>constructor(owner, args)</code>\n<dd>Constructor for the modifier. You must call <code>super(...arguments)</code> before performing other initialization.</dd>\n<dt><code>modify(element, positionalArgs, namedArgs)</code>\n<dd>The primary hook for running a modifier. It gets called when the modifier is installed on the element, and any time any tracked state it uses changes. That tracked state can be from its arguments, which are auto-tracked, or from any other kind of tracked state, including but not limited to state on injected services.</dd>\n</dl>\n\n## TypeScript\n\nBoth the function- and class-based APIs can be used with TypeScript!\n\nBefore checking out the [Examples with Typescript](#examples-with-type-script) below, there is an important caveat you should understand about type safety!\n\nThere are, today, two basic approaches you can take to dealing with your modifier's arguments and element in a type safe way:\n\n1. You can use a type definition which specifies those for the outside world, relying on tooling like [Glint][glint] to check that the invocation is correct, and treat input as safe accordingly.\n2. You can provide the minimal public interface which *all* modifiers conform to, and do runtime type checking with `assert` calls to make your internal implementation safe.\n\nIf you have a code base which is strictly typed from end to end, including with template type checking via Glint, then (1) is a great choice. If you have a mixed code base, or are publishing an addon for others to use, then [it's usually best to do both (1) *and* (2)][safe-ts-libs]!\n\n[glint]: https://github.com/typed-ember/glint\n[safe-ts-libs]: https://v5.chriskrycho.com/journal/writing-robust-typescript-libraries/s\n\nTo handle runtime checking, for non-type-checked templates (including projects not yet using Glint or supporting external callers), you should *act* as though the arguments passed to your modifier can be *anything*. They’re typed as `unknown` by default, which means by default TypeScript will *require* you to work out the type passed to you at runtime. For example, with the `ScrollPositionModifier` shown above, you can combine TypeScript’s [type narrowing] with the default types for the class to provide runtime errors if the caller passes the wrong types, while providing safety throughout the rest of the body of the modifier. Here, `modify` would be *guaranteed* to have the correct types for `scrollPosition` and `relative`:\n\n[type narrowing]: https://www.typescriptlang.org/docs/handbook/advanced-types.html#type-guards-and-differentiating-types\n\n```ts\nimport Modifier from 'ember-modifier';\nimport { assert } from '@ember/debug';\n\nexport class ScrollPositionModifier extends ClassBasedModifier {\n  modify(element, [scrollPosition], { relative }) {\n    assert(,\n      `first argument to 'scroll-position' must be a number, but ${scrollPosition} was ${typeof scrollPosition}`,\n      typeof scrollPosition === \"number\"\n    );\n\n    assert(\n      `'relative' argument to 'scroll-position' must be a boolean, but ${relative} was ${typeof relative}`,\n      typeof relative === \"boolean\"\n    );\n\n    if (relative) {\n      element.scrollTop += scrollPosition;\n    } else {\n      element.scrollTop = scrollPosition;\n    }\n  }\n}\n```\n\nIf you were writing for a fully-typed context, you can define your `Modifier` with a `Signature` interface, similar to the way you would define your signature for a Glimmer Component:\n\n```ts\n// app/modifiers/scroll-position.ts\nimport Modifier from 'ember-modifier';\n\ninterface ScrollPositionModifierSignature {\n  Args: {\n    Positional: [number];\n    Named: {\n      relative: boolean;\n    };\n  };\n}\n\nexport default class ScrollPositionModifier\n    extends Modifier<ScrollPositionModifierSignature> {\n  modify(element, [scrollPosition], { relative }) {\n    if (relative) {\n      element.scrollTop += scrollPosition;\n    } else {\n      element.scrollTop = scrollPosition;\n    }\n  }\n}\n```\n\nBesides supporting integration with [Glint][glint], this also provides nice hooks for documentation tooling. Note, however, that it can result in *much worse* feedback in tests or at runtime if someone passes the wrong kind of arguments to your modifier and you *haven't* included assertions: users who pass the wrong thing will just have the modifier fail. For example, if you fail to pass the positional argument, `scrollPosition` would simply be `undefined`, and then `element.scrollTop` could end up being set to `NaN`. Whoops! For that reason, if your modifier will be used by non-TypeScript consumers, you should both publish the types for it *and* add dev-time assertions:\n\n```ts\n// app/modifiers/scroll-position.ts\nimport Modifier from 'ember-modifier';\n\ninterface ScrollPositionModifierSignature {\n  Args: {\n    Positional: [scrollPosition: number];\n    Named: {\n      relative: boolean;\n    };\n  };\n  Element: Element; // not required: it'll be set by default\n}\n\nexport default class ScrollPositionModifier\n    extends Modifier<ScrollPositionModifierSignature> {\n  modify(element, [scrollPosition], { relative }) {\n    assert(,\n      `first argument to 'scroll-position' must be a number, but ${scrollPosition} was ${typeof scrollPosition}`,\n      typeof scrollPosition === \"number\"\n    );\n\n    assert(\n      `'relative' argument to 'scroll-position' must be a boolean, but ${relative} was ${typeof relative}`,\n      typeof relative === \"boolean\"\n    );\n\n    if (relative) {\n      element.scrollTop += scrollPosition;\n    } else {\n      element.scrollTop = scrollPosition;\n    }\n  }\n}\n```\n\n### The `Signature` type\n\nThe `Signature` for a modifier is the combination of the positional and named arguments it receives and the element to which it may be applied.\n\n```ts\ninterface Signature {\n  Args: {\n    Named: {\n      [argName: string]: unknown;\n    };\n    Positional: unknown[];\n  };\n  Element: Element;\n}\n```\n\nWhen writing a signature yourself, all of those are optional: the types for modifiers will fall back to the correct defaults of `Element`, an object for named arguments, and an array for positional arguments. You can apply a signature when defining either a function-based or a class-based modifier.\n\nIn a function-based modifier, the callback arguments will be inferred from the signature, so you do not need to specify the types twice:\n\n```ts\ninterface MySignature {\n  Element: HTMLMediaElement;\n  Args: {\n    Named: {\n      when: boolean;\n    };\n    Positional: [];\n  };\n}\n\nconst play = modifier<MySignature>((el, _, { when: shouldPlay }) => {\n  if (shouldPlay) {\n    el.play();\n  } else {\n    el.pause();\n  }\n})\n```\n\nYou never *need* to specify a signature in this way for a function-based modifier: you can simply write the types inline instead:\n\n```ts\nconst play = modifier(\n  (el: HTMLMediaElement, _: [], { when: shouldPlay }: { when: boolean}) => {\n    if (shouldPlay) {\n      el.play();\n    } else {\n      el.pause();\n    }\n  }\n);\n```\n\nHowever, the explicit `modifier<Signature>(...)` form is tested to keep working, since it can be useful for documentation!\n\nThe same basic approach works with a class-based modifier:\n\n```ts\ninterface MySignature {\n  // ...\n}\n\nexport default class MyModifier extends Modifier<MySignature> {\n  // ...\n}\n```\n\nIn that case, the `element` and `args` will always have the right types throughout the body. Since the type of `args` in the constructor are derived from the signature, you can use the `ArgsFor` type helper to avoid having to write the type out separately:\n\n```ts\nimport Modifier, { ArgsFor } from 'ember-modifier';\n\ninterface MySignature {\n  // ...\n}\n\nexport default class MyModifier extends Modifier<MySignature> {\n  constructor(owner: unknown, args: ArgsFor<MySignature>) {\n    // ...\n  }\n}\n```\n\n`ArgsFor` isn't magic: it just takes the `Args` from the `Signature` you provide and turns it into the right shape for the constructor: the `Named` type ends up as the `named` field and the `Positional` type ends up as the type for `args.positional`, so you could write it out yourself if you preferred:\n\n```ts\nimport Modifier from 'ember-modifier';\n\ninterface MySignature {\n  // ...\n}\n\nexport default class MyModifier extends Modifier<MySignature> {\n  constructor(\n    owner: unknown,\n    args: {\n      named: MySignature['Args']['Named'];\n      positional: MySignature['Args']['Positional'];\n    }\n  ) {\n    // ...\n  }\n}\n```\n\n### Examples with TypeScript\n\n#### Function-based modifier\n\nLet’s look at a variant of the `move-randomly` example from above, implemented in TypeScript, and now requiring a named argument, the maximum offset. Using the recommended combination of types and runtime type-checking, it would look like this:\n\n```ts\n// app/modifiers/move-randomly.js\nimport { modifier } from 'ember-modifier';\nimport { assert } from '@ember/debug';\n\nconst { random, round } = Math;\n\nexport default modifier(\n  (element: HTMLElement, _: [], named: { maxOffset: number }\n) => {\n  assert(\n    'move-randomly can only be installed on HTML elements!',\n    element instanceof HTMLElement\n  );\n\n  const { maxOffset } = named;\n  assert(\n    `The 'max-offset' argument to 'move-randomly' must be a number, but was ${typeof maxOffset}`,\n    typeof maxOffset === \"number\"\n  );\n\n  const id = setInterval(() => {\n    const top = round(random() * maxOffset);\n    const left = round(random() * maxOffset);\n    element.style.transform = `translate(${left}px, ${top}px)`;\n  }, 1000);\n\n  return () => clearInterval(id);\n});\n```\n\nA few things to notice here:\n\n1.  TypeScript correctly infers the *base* types of the arguments for the function passed to the modifier; you don't need to specify what `element` or `positional` or `named` are unless you are doing like we are in this example and providing a usefully more-specific type to callers.\n\n2.  If we returned a teardown function which had the wrong type signature, that would also be an error.\n\n    If we return a value instead of a function, for example:\n\n    ```ts\n    export default modifier((element, _, named) => {\n      // ...\n\n      return id;\n    });\n    ```\n\n    TypeScript will report:\n\n    > ```\n    > Type 'Timeout' is not assignable to type 'void | Teardown'.\n    > ```\n\n    Likewise, if we return a function with the wrong signature, we will see the same kinds of errors. If we expected to receive an argument in the teardown callback, like this:\n\n    ```ts\n    export default modifier((element, _, named) => {\n      // \n\n      return (interval: number) => clearTimeout(interval);\n    });\n    ```\n\n    TypeScript will report:\n\n    > ```\n    > Type '(interval: number) => void' is not assignable to type 'void | Teardown'.\n    > ```\n\n####  Class-based\n\nTo support correctly typing `args` in the `constructor` for the case where you do runtime type checking, we supply an `ArgsFor` type utility. (This is useful because the `Signature` type, matching Glimmer Component and other \"invokable\" items in Ember/Glimmer, has capital letters for the names of the types, while `args.named` and `args.positional` are lower-case.) Here’s how that would look with a fully typed modifier that alerts \"This is a typesafe modifier!\" an amount of time after receiving arguments that depends on the length of the first argument and an *optional* multiplier (a nonsensical thing to do, but one that illustrates a fully type-safe class-based modifier):\n\n```ts\nimport Modifier, { ArgsFor, PositionalArgs, NamedArgs } from 'ember-modifier';\nimport { assert } from '@ember/debug';\n\ninterface NeatSignature {\n  Args: {\n    Named: {\n      multiplier?: number;\n    };\n    Positional: [string];\n  }\n}\n\n\nfunction cleanup(instance: Neat) => {\n  if (instance.interval) {\n    clearInterval(instance.interval);\n  }\n}\n\nexport default class Neat extends Modifier<NeatSignature> {\n  interval?: number;\n\n  constructor(owner: unknown, args: ArgsFor<NeatSignature>) {\n    super(owner, args);\n    registerDestructor(this, cleanup);\n  }\n\n  modify(\n    element: Element,\n    [lengthOfInput]: PositionalArgs<NeatSignature>,\n    { multiplier }: NamedArgs<NeatSignature>\n  ) {\n    assert(\n  \t  `positional arg must be 'string' but was ${typeof lengthOfInput}`,\n  \t  typeof lengthOfInput === 'string'\n  \t);\n\n    assert(\n    \t`'multiplier' arg must be a number but was ${typeof multiplier}`,\n    \tmultiplier ? typeof multiplier === \"number\" : true\n    );\n\n    multiplier = modifier ?? 1000;\n\n    let updateTime = multiplier * lengthOfInput;\n    this.interval = setInterval(() => {\n      element.innerText =\n        `Behold, a type safe modifier moved after ${updateTime / 1000}s`;\n    }, updateTime)\n  }\n}\n```\n\nContributing\n------------------------------------------------------------------------------\n\nSee the [Contributing](CONTRIBUTING.md) guide for details.\n\n\nLicense\n------------------------------------------------------------------------------\n\nThis project is licensed under the [MIT License](LICENSE.md).\n","engines":{"node":"14.* || 16.* || >= 18"},"exports":{".":"./dist/index.js","./*":"./dist/*","./addon-main.js":"./addon-main.js"},"gitHead":"4a5c2b682524f57a5a90aa57f647d6bc2fee36ed","scripts":{"lint":"eslint . --cache --ext .ts,.js","test":"echo 'Please refer to test-app for addon tests'","build":"rollup --config","start":"rollup --config --watch","lint:fix":"eslint . --fix --ext .ts,.js","typecheck":"tsc --noEmit","prepublishOnly":"rollup --config"},"_npmUser":{"name":"sergeastapov","email":"sergeastapov@gmail.com"},"repository":{"url":"git+https://github.com/ember-modifier/ember-modifier.git","type":"git"},"_npmVersion":"8.10.0","description":"A library for writing Ember modifiers","directories":{"doc":"doc","test":"tests"},"ember-addon":{"main":"addon-main.js","type":"addon","version":2},"_nodeVersion":"14.19.2","dependencies":{"@embroider/addon-shim":"^1.6.0","ember-cli-string-utils":"^1.1.0","ember-cli-normalize-entity-name":"^1.0.0"},"publishConfig":{"registry":"https://registry.npmjs.org"},"typesVersions":{"*":{"*":["./dist/*"],".":["./dist/index.d.ts"],"./-private/signature":["./dist/-private/signature.d.ts"]}},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"tslib":"^2.4.0","eslint":"^8.15.0","rollup":"^2.73.0","prettier":"^2.4.1","typescript":"^4.6.4","@babel/core":"^7.17.10","@types/rsvp":"^4.0.4","expect-type":"^0.13.0","@types/qunit":"^2.11.2","rollup-plugin-ts":"^2.0.7","@types/ember-qunit":"~5.0.0","eslint-plugin-node":"^11.1.0","@types/ember__debug":"~4.0.1","eslint-plugin-ember":"^10.6.1","@babel/eslint-parser":"^7.15.8","@embroider/addon-dev":"^1.6.0","@rollup/plugin-babel":"^5.3.1","@types/ember-resolver":"^5.0.10","@types/ember__modifier":"~4.0.1","eslint-config-prettier":"^8.3.0","eslint-plugin-prettier":"^4.0.0","@babel/preset-typescript":"^7.15.0","@types/ember__destroyable":"~4.0.0","@typescript-eslint/parser":"^5.23.0","@types/ember__test-helpers":"^2.0.2","ember-destroyable-polyfill":"^2.0.3","@typescript-eslint/eslint-plugin":"^5.23.0","@babel/plugin-proposal-decorators":"^7.17.9","@babel/plugin-proposal-class-properties":"^7.16.7"},"peerDependencies":{"ember-source":"*"},"peerDependenciesMeta":{"ember-source":{"optional":true}},"_npmOperationalInternal":{"tmp":"tmp/ember-modifier_4.0.0-beta.1-unstable.4a5c2b6_1652709292904_0.46893109486243834","host":"s3://npm-registry-packages"}},"4.0.0-beta.1-unstable.ede0053":{"name":"ember-modifier","version":"4.0.0-beta.1-unstable.ede0053","keywords":["ember-addon"],"author":"","license":"MIT","_id":"ember-modifier@4.0.0-beta.1-unstable.ede0053","maintainers":[{"name":"rwjblue","email":"me@rwjblue.com"},{"name":"chriskrycho","email":"chris@chriskrycho.com"},{"name":"pzuraq","email":"opensource@pzuraq.com"},{"name":"sergeastapov","email":"sergeastapov@gmail.com"}],"homepage":"https://github.com/ember-modifier/ember-modifier#readme","bugs":{"url":"https://github.com/ember-modifier/ember-modifier/issues"},"dist":{"shasum":"f6e51380ff341d4a84cd52731e9e20645742e203","tarball":"https://registry.npmjs.org/ember-modifier/-/ember-modifier-4.0.0-beta.1-unstable.ede0053.tgz","fileCount":14,"integrity":"sha512-NdnqTTrUfVkKbFBuJWP2ytW25hL/7yZwKwBUXRS5+INkkBEmBnE3kDKDZxMbsfxHA0FOzI1VtnCEIvNUk6jK+w==","signatures":[{"sig":"MEYCIQC421xxDdf1DTj1f3NniuLOP2odC1QeEWF6mrNa/I6u7gIhAK41GIKViHWPQk8Gsuo77HLbajfX/qw5Y2VrcFhL0CPb","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":57090,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjT0saACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqauBAAjCLw/FslrNsf4nYBxU6NH3M6r+Nt1b0/JylKPoaxboiglMjT\r\nztijBIMjtTjF/VnqC8nR12SI8SkvkON5m/OqABVIwdRIvE1LcMp6PzItWThf\r\n0+zYKqJuFg6kGoSZKR/U5LjFI9f+D7E/ZESehuvhs6xsxMWFSR3b/Hfp9z3Z\r\nIPdcn51pXNVCtuyZLn5RSvC+/X1pQhYaMdQOoUUqT3lPsxjTswh9G/NmY3M6\r\ntsBhPH15xcv8Gq5fq+PNlbK8KulQws2AAc8pjvVYPKsaRrDpsCwfFxHTHrq6\r\nioars4aRy+pvaoXgQGcigh6zuDJeJa1hvRQtEKvy+h7NPZj+lLZ6qRrXwx8g\r\nD8GpSZXuOfODNDwZTphc7VeeVGj9xMhwq9qTVD3zEunoZKB0BCeXNNJwyPUL\r\nhkKM2CeVVSD5NRrmFA5Hcxr60HAx2qC+DPRLPyWfQs305m6mKRwRw/Mmcica\r\n1+lJtpOtll6VVrnr3H5c5gmA/dZzaXsKadAUecscozT63OfQLzp6JEKYVe2g\r\nw/6cjRB9wcyc4K6o9J2RywvpmQVpR89sYWWsoZdrzdInUsqppF6ryJMWkIW3\r\nqBme8kaFx+xvA5AK8LKm1AeKZDl/ImimLw1jCcvcIBGCUkJ2wXc3RIyVcNdX\r\n8OEauACH4NNpGt2xGn08IVDnOSvnXEi4VDo=\r\n=1Cfs\r\n-----END PGP SIGNATURE-----\r\n"},"ember":{"edition":"octane"},"volta":{"extends":"../package.json"},"readme":"ember-modifier\n==============================================================================\n\nThis addon provides an API for authoring [element modifiers] in Ember. It\nmirrors Ember's [helper] API, with variations for writing both simple\nfunction-based modifiers and more complicated class-based modifiers.\n\n[element modifiers]: https://blog.emberjs.com/2019/03/06/coming-soon-in-ember-octane-part-4.html\n[helper]: https://octane-guides-preview.emberjs.com/release/templates/writing-helpers\n\n:warning: **NOTE:** this is the README for the v4 release (currently available in beta)! For the v3 README, see [here](https://github.com/ember-modifier/ember-modifier/blob/v3/README.md). :warning:\n\n- [Compatibility](#compatibility)\n  - [TypeScript](#typescript)\n- [Installation](#installation)\n- [Philosophy](#philosophy)\n  - [Whoa whoa whoa, hold on, what's a _\"side effect\"_?](#whoa-whoa-whoa-hold-on-whats-a-side-effect)\n  - [Managing \"side effects\" effectively](#managing-side-effects-effectively)\n- [Usage](#usage)\n  - [Function-Based Modifiers](#function-based-modifiers)\n    - [Generating a Function-Based Modifier](#generating-a-function-based-modifier)\n    - [Example without Cleanup](#example-without-cleanup)\n    - [Example with Cleanup](#example-with-cleanup)\n  - [Class-Based Modifiers](#class-based-modifiers)\n    - [Generating a Class Modifier](#generating-a-class-modifier)\n    - [Example without Cleanup](#example-without-cleanup-1)\n    - [Example with Cleanup](#example-with-cleanup-1)\n    - [Example with Service Injection](#example-with-service-injection)\n    - [API](#api)\n- [TypeScript](#typescript-1)\n  - [The `Signature` type](#the-signature-type)\n  - [Examples with TypeScript](#examples-with-typescript)\n    - [Function-based modifier](#function-based-modifier)\n    - [Class-based](#class-based)\n- [Contributing](#contributing)\n- [License](#license)\n\nCompatibility\n------------------------------------------------------------------------------\n\n* Ember.js v3.24 or above\n* Ember CLI v2.13 or above\n* Node.js v14 or above\n\n### TypeScript\n\nThis project follows the current draft of [the Semantic Versioning for TypeScript Types][semver] proposal.\n\n- **Currently supported TypeScript versions:** v4.2, v4.3, v4.4, v4.5, and v4.6\n- **Compiler support policy:** [simple majors][sm]\n- **Public API:** all published types not in a `-private` module are public\n\n[semver]: https://github.com/chriskrycho/ember-rfcs/blob/semver-for-ts/text/0730-semver-for-ts.md\n[sm]: https://github.com/chriskrycho/ember-rfcs/blob/semver-for-ts/text/0730-semver-for-ts.md#simple-majors\n\n\nInstallation\n------------------------------------------------------------------------------\n\n```\nember install ember-modifier\n```\n\n\nPhilosophy\n------------------------------------------------------------------------------\n\nModifiers are a basic primitive for interacting with the DOM in Ember. For\nexample, Ember ships with a built-in modifier, `{{on}}`:\n\n```hbs\n<button {{on \"click\" @onClick}}>\n  {{@text}}\n</button>\n```\n\nAll modifiers get applied to elements directly this way (if you see a similar\nvalue that _isn't_ in an element, it is probably a _helper_ instead), and they\nare passed the element when applying their effects.\n\nConceptually, modifiers take _tracked, derived state_, and turn it into some\nsort of _side effect_ related in some way to the DOM element they are applied\nto.\n\n### Whoa whoa whoa, hold on, what's a _\"side effect\"_?\n\nA \"side effect\" is something that happens in programming all the time. Here's an\nexample of one in an Ember component that attempts to make a button like in the\nfirst example, but without modifiers:\n\n```js\n// 🛑 DO NOT COPY THIS 🛑\nimport Component from '@glimmer/component';\n\nexport default class MyButton extends Component {\n  get setupEventHandler() {\n    document.querySelector('#my-button').addEventListener(this.args.onClick);\n\n    return undefined;\n  }\n}\n```\n```hbs\n<button id=\"#my-button\">\n  {{this.setupEventHandler}}\n\n  {{@text}}\n</button>\n```\n\nWe can see by looking at the `setupEventListener` getter that it isn't actually\nreturning a value. Instead, it always returns `undefined`. However, it also adds\nthe `@onClick` argument as an _event listener_ to the button in the template\nwhen the getter is run, as the template is rendering, which is a _side effect_\n- it is an effect of running the code that doesn't have anything to do with the\n\"main\" purpose of that code, in this case to return a dynamically computed\nvalue. In fact, this code doesn't compute a value at all, so this component is\n_misusing_ the getter in order to run its side effect whenever it is rendered in\nthe template.\n\nUnmanaged side effects can make code very difficult to reason about, since any\nfunction could be updating a value elsewhere. In fact, the code above is very\nbuggy:\n\n1. If the `@onClick` argument ever changes, it won't remove the old event\n   listener, it'll just keep adding new ones.\n2. It won't remove the old event listener when the component is removed.\n3. It uses a document element selector that may not be unique, and it has no\n   guarantee that the element will exist when it runs.\n4. It _will_ run in Fastboot/Server Side Rendering, where no DOM exists at all,\n   and it'll throw errors because of this.\n\nHowever, there are lots of times where its difficult to write code that\n_doesn't_ have side effects. Sometimes it would mean having to rewrite a large\nportion of an application. Sometimes, like in the case of modifying DOM, there\nisn't a clear way to do it at _all_ with just getters and components.\n\nThis is where _modifiers_ come in. Modifiers exist as a way to bridge the gap\nbetween derived state and side effects in way that is _contained_ and\n_consistent_, so that users of a modifier don't have to think about them.\n\n### Managing \"side effects\" effectively\n\nLet's look again at our original example:\n\n```hbs\n<button {{on \"click\" @onClick}}>\n  {{@text}}\n</button>\n```\n\nWe can see pretty clearly from this template that Ember will:\n\n1. Create a `<button>` element\n2. Append the contents of the `@text` argument to that button\n3. Add a click event handler to the button that runs the `@onClick` argument\n\nIf `@text` or `@onClick` ever change, Ember will keep everything in sync for us.\nWe don't ever have to manually set `element.textContent` or update anything\nourselves. In this way, we can say the template is _declarative_ - it tells\nEmber what we want the output to be, and Ember handles all of the bookkeeping\nitself.\n\nHere's how we could _implement_ the `{{on}}` modifier so that it always keeps\nthings in sync correctly:\n\n```js\nimport { modifier } from 'ember-modifier';\n\nexport default modifier((element, [eventName, handler]) => {\n  element.addEventListener(eventName, handler);\n\n  return () => {\n    element.removeEventListener(eventName, handler);\n  }\n});\n```\n\nHere, we setup the event listener using the positional parameters passed to the\nmodifier. Then, we return a _destructor_ - a function that _undoes_ our setup,\nand is effectively the _opposite_ side effect. This way, if the `@onClick`\nhandler ever changes, we first teardown the first event listener we added -\nleaving the element in its _original_ state before the modifier ever ran - and\nthen setup the new handler.\n\nThis is what allows us to treat the `{{on}}` modifier as if it were just like\nthe `{{@text}}` value we put in the template. While it _is_ side effecting, it\nknows how to setup and teardown that side effect and manage its state. The side\neffect is _contained_ - it doesn't escape into the rest of our application, it\ndoesn't cause other unrelated changes, and we can think about it as another\npiece of declarative, derived state. Just another part of the template!\n\nIn general, when writing modifiers, especially general purpose/reusable\nmodifiers, they should be designed with this in mind. Which specific effects are\nthey trying to accomplish, how to manage them effectively, and how to do it in\na way that is _transparent_ to the user of the modifier.\n\nUsage\n------------------------------------------------------------------------------\n\nThis addon does not provide any modifiers out of the box. Instead, this library\nallows you to write your own. There are two ways to write modifiers:\n\n1. Function-based modifiers\n2. Class-based modifiers\n\nThese are analogous to Ember's Helper APIs, `helper` and `Helper`.\n\n### Function-Based Modifiers\n\n`modifier` is an API for writing simple modifiers. For instance, you could\nimplement Ember's built-in `{{on}}` modifier like so with `modifier`:\n\n```js\n// /app/modifiers/on.js\nimport { modifier } from 'ember-modifier';\n\nexport default modifier((element, [eventName, handler]) => {\n  element.addEventListener(eventName, handler);\n\n  return () => {\n    element.removeEventListener(eventName, handler);\n  }\n});\n```\n\nFunction-based modifiers consist of a function that receives:\n\n1. The `element`\n2. An array of positional arguments\n3. An object of named arguments\n\n```js\nmodifier((element, positional, named) => { /* */ });\n```\n\nThis function runs the first time when the element the modifier was applied to\nis inserted into the DOM, and it _autotracks_ while running. Any tracked values\nthat it accesses will be tracked, including the arguments it receives, and if\nany of them changes, the function will run again.[^changes]\n\nThe modifier can also optionally return a _destructor_. The destructor function\nwill be run just before the next update, and when the element is being removed\nentirely. It should generally clean up the changes that the modifier made in the\nfirst place.\n\n[^changes]: As with autotracking in general, “changes” here actually means that the tracked property was set—even if it was set to the same value. This is because autotracking does not cache the *values* of properties, only the last time they changed. See [this blog post](https://v5.chriskrycho.com/journal/autotracking-elegant-dx-via-cutting-edge-cs/) for a deep dive on how it works!\n\n#### Generating a Function-Based Modifier\n\nTo create a modifier (and a corresponding integration test), run:\n\n```\nember g modifier scroll-top\n```\n\n#### Example without Cleanup\n\nFor example, if you wanted to implement your own `scrollTop` modifier (similar\nto [this][scroll-example]), you may do something like this:\n\n[scroll-example]: https://github.com/emberjs/ember-render-modifiers#example-scrolling-an-element-to-a-position\n\n```js\n// app/modifiers/scroll-top.js\nimport { modifier } from 'ember-modifier';\n\nexport default modifier((element, [scrollPosition]) => {\n  element.scrollTop = scrollPosition;\n})\n```\n```hbs\n<div class=\"scroll-container\" {{scroll-top @scrollPosition}}>\n  {{yield}}\n</div>\n```\n\n#### Example with Cleanup\n\nIf the functionality you add in the modifier needs to be torn down when the\nelement is removed, you can return a function for the teardown method.\n\nFor example, if you wanted to have your elements dance randomly on the page\nusing `setInterval`, but you wanted to make sure that was canceled when the\nelement was removed, you could do:\n\n```js\n// app/modifiers/move-randomly.js\nimport { modifier } from 'ember-modifier';\n\nconst { random, round } = Math;\n\nexport default modifier(element => {\n  const id = setInterval(() => {\n    const top = round(random() * 500);\n    const left = round(random() * 500);\n    element.style.transform = `translate(${left}px, ${top}px)`;\n  }, 1000);\n\n  return () => clearInterval(id);\n});\n\n```\n```hbs\n<button {{move-randomly}}>\n  {{yield}}\n</button>\n```\n\n### Class-Based Modifiers\n\nSometimes you may need to do something more complicated than what can be handled\nby function-based modifiers. For instance:\n\n1. You may need to inject services and access them\n2. You may need fine-grained control of updates, either for performance or\n   convenience reasons, and don't want to teardown the state of your modifier\n   every time only to set it up again.\n3. You may need to store some local state within your modifier.\n\nIn these cases, you can use a _class-based modifier_ instead. Here's how you\nwould implement the `{{on}}` modifier with a class:\n\n```js\nimport Modifier from 'ember-modifier';\nimport { registerDestructor } from '@ember/destroyable';\n\nfunction cleanup(instance: OnModifier) {\n  let { element, event, handler } = instance;\n\n  if (element && event && handler) {\n    element.removeEventListener(event, handler);\n\n    instance.element = null;\n    instance.event = null;\n    instance.handler = null;\n  }\n}\n\nexport default class OnModifier extends Modifier {\n  element = null;\n  event = null;\n  handler = null;\n\n  modify(element, [event, handler]) {\n    this.addEventListener(element, event, handler);\n    registerDestructor(this, cleanup)\n  }\n\n  // methods for reuse\n  addEventListener = (element, event, handler) => {\n    // Store the current element, event, and handler for when we need to remove\n    // them during cleanup.\n    this.element = element;\n    this.event = event;\n    this.handler = handler;\n\n    element.addEventListener(event, handler);\n  };\n}\n```\n\nWhile this is slightly more complicated than the function-based version, but\nthat complexity comes along with much more _control_.\n\nAs with function-based modifiers, the lifecycle hooks of class modifiers are\n_tracked_. When they run, then any values they access will be added to the\nmodifier, and the modifier will update if any of those values change.\n\n#### Generating a Class Modifier\n\nTo create a modifier (and a corresponding integration test), run:\n\n```\nember g modifier scroll-top --class\n```\n\n#### Example without Cleanup\n\nFor example, let's say you want to implement your own `{{scroll-position}}`\nmodifier (similar to [this](https://github.com/emberjs/ember-render-modifiers#example-scrolling-an-element-to-a-position)).\n\nThis modifier can be attached to any element and accepts a single positional\nargument. When the element is inserted, and whenever the argument is updated, it\nwill set the element's `scrollTop` property to the value of its argument.\n\n(Note that this example does not require the use of a class, and could be\nimplemented equally well with a function-based modifier!)\n\n```js\n// app/modifiers/scroll-position.js\nimport Modifier from 'ember-modifier';\n\nexport default class ScrollPositionModifier extends Modifier {\n  modify(element, [scrollPosition], { relative }) {\n    if(relative) {\n      element.scrollTop += scrollPosition;\n    } else {\n      element.scrollTop = scrollPosition;\n    }\n  }\n}\n```\n\nUsage:\n\n```handlebars\n{{!-- app/components/scroll-container.hbs --}}\n\n<div\n  class=\"scroll-container\"\n  style=\"width: 300px; heigh: 300px; overflow-y: scroll\"\n  {{scroll-position this.scrollPosition relative=false}}\n>\n  {{yield this.scrollToTop}}\n</div>\n```\n\n```js\n// app/components/scroll-container.js\n\nimport Component from '@glimmer/component';\nimport { tracked } from '@glimmer/tracking';\nimport { action } from '@ember/object';\n\nexport default class ScrollContainerComponent extends Component {\n  @tracked scrollPosition = 0;\n\n  @action scrollToTop() {\n    this.scrollPosition = 0;\n  }\n}\n```\n\n```handlebars\n{{!-- app/templates/application.hbs --}}\n\n<ScrollContainer as |scroll|>\n  A lot of content...\n\n  <button {{on \"click\" scroll}}>Back To Top</button>\n</ScrollContainer>\n```\n\n#### Example with Cleanup\n\nIf the functionality you add in the modifier needs to be torn down when the\nmodifier is removed, you can use `registerDestructor` from `@ember/destroyable`.\n\nFor example, if you want to have your elements dance randomly on the page using\n`setInterval`, but you wanted to make sure that was canceled when the modifier\nwas removed, you could do this:\n\n```js\n// app/modifiers/move-randomly.js\n\nimport Modifier from 'ember-modifier';\nimport { registerDestructor } from '@ember/destroyable'\n\nconst { random, round } = Math;\nconst DEFAULT_DELAY = 1000;\n\nfunction cleanup(instance) {\n  if (instance.setIntervalId !== null) {\n    clearInterval(instance.setIntervalId);\n    instance.setIntervalId = null;\n  }\n}\n\nexport default class MoveRandomlyModifier extends Modifier {\n  element = null;\n  setIntervalId = null;\n\n  constructor(owner, args) {\n    super(owner, args);\n    registerDestructor(this, cleanup);\n  }\n\n  modify(element, _, { delay }) {\n    // Save off the element the first time for convenience with #moveElement\n    if (!this.element) {\n      this.element = element;\n    }\n\n    // Reset from any previous state.\n    cleanup(this);\n\n    this.setIntervalId = setInterval(this.#moveElement, delay ?? DEFAULT_DELAY);\n  }\n\n  #moveElement = (element) => {\n    let top = round(random() * 500);\n    let left = round(random() * 500);\n    this.element.style.transform = `translate(${left}px, ${top}px)`;\n  };\n}\n```\n\nUsage:\n\n```hbs\n<div {{move-randomly}}>\n  Catch me if you can!\n</div>\n```\n\n#### Example with Service Injection\n\nYou can also use services into your modifier, just like any other class in Ember.\n\nFor example, suppose you wanted to track click events with `ember-metrics`:\n\n```js\n// app/modifiers/track-click.js\n\nimport { inject as service } from '@ember/service';\nimport Modifier from 'ember-modifier';\nimport { registerDestructor } from '@ember/destroyable';\n\nfunction cleanup(instance) {\n  instance.element?.removeEventListener('click', instance.onClick, true);\n}\n\nexport default class TrackClick extends Modifier {\n  @service metrics;\n\n  constructor(owner, args) {\n    super(owner, args);\n    registerDestructor(this, this.cleanup);\n  }\n\n  modify(element, [eventName], options) {\n    this.element = element;\n    this.eventName = eventName;\n    this.options = options;\n\n    this.cleanup();\n    element.addEventListener('click', this.onClick, true);\n  }\n\n  onClick = () => {\n    this.metrics.trackEvent(this.eventName, this.options);\n  };\n}\n```\n\nUsage:\n\n```hbs\n<button {{track-click \"like-button-click\" page=\"some page\" title=\"some title\"}}>\n  Click Me!\n</button>\n```\n\n#### API\n\n<dl>\n<dt><code>constructor(owner, args)</code>\n<dd>Constructor for the modifier. You must call <code>super(...arguments)</code> before performing other initialization.</dd>\n<dt><code>modify(element, positionalArgs, namedArgs)</code>\n<dd>The primary hook for running a modifier. It gets called when the modifier is installed on the element, and any time any tracked state it uses changes. That tracked state can be from its arguments, which are auto-tracked, or from any other kind of tracked state, including but not limited to state on injected services.</dd>\n</dl>\n\n## TypeScript\n\nBoth the function- and class-based APIs can be used with TypeScript!\n\nBefore checking out the [Examples with Typescript](#examples-with-type-script) below, there is an important caveat you should understand about type safety!\n\nThere are, today, two basic approaches you can take to dealing with your modifier's arguments and element in a type safe way:\n\n1. You can use a type definition which specifies those for the outside world, relying on tooling like [Glint][glint] to check that the invocation is correct, and treat input as safe accordingly.\n2. You can provide the minimal public interface which *all* modifiers conform to, and do runtime type checking with `assert` calls to make your internal implementation safe.\n\nIf you have a code base which is strictly typed from end to end, including with template type checking via Glint, then (1) is a great choice. If you have a mixed code base, or are publishing an addon for others to use, then [it's usually best to do both (1) *and* (2)][safe-ts-libs]!\n\n[glint]: https://github.com/typed-ember/glint\n[safe-ts-libs]: https://v5.chriskrycho.com/journal/writing-robust-typescript-libraries/s\n\nTo handle runtime checking, for non-type-checked templates (including projects not yet using Glint or supporting external callers), you should *act* as though the arguments passed to your modifier can be *anything*. They’re typed as `unknown` by default, which means by default TypeScript will *require* you to work out the type passed to you at runtime. For example, with the `ScrollPositionModifier` shown above, you can combine TypeScript’s [type narrowing] with the default types for the class to provide runtime errors if the caller passes the wrong types, while providing safety throughout the rest of the body of the modifier. Here, `modify` would be *guaranteed* to have the correct types for `scrollPosition` and `relative`:\n\n[type narrowing]: https://www.typescriptlang.org/docs/handbook/advanced-types.html#type-guards-and-differentiating-types\n\n```ts\nimport Modifier from 'ember-modifier';\nimport { assert } from '@ember/debug';\n\nexport class ScrollPositionModifier extends Modifier {\n  modify(element, [scrollPosition], { relative }) {\n    assert(,\n      `first argument to 'scroll-position' must be a number, but ${scrollPosition} was ${typeof scrollPosition}`,\n      typeof scrollPosition === \"number\"\n    );\n\n    assert(\n      `'relative' argument to 'scroll-position' must be a boolean, but ${relative} was ${typeof relative}`,\n      typeof relative === \"boolean\"\n    );\n\n    if (relative) {\n      element.scrollTop += scrollPosition;\n    } else {\n      element.scrollTop = scrollPosition;\n    }\n  }\n}\n```\n\nIf you were writing for a fully-typed context, you can define your `Modifier` with a `Signature` interface, similar to the way you would define your signature for a Glimmer Component:\n\n```ts\n// app/modifiers/scroll-position.ts\nimport Modifier from 'ember-modifier';\n\ninterface ScrollPositionModifierSignature {\n  Args: {\n    Positional: [number];\n    Named: {\n      relative: boolean;\n    };\n  };\n}\n\nexport default class ScrollPositionModifier\n    extends Modifier<ScrollPositionModifierSignature> {\n  modify(element, [scrollPosition], { relative }) {\n    if (relative) {\n      element.scrollTop += scrollPosition;\n    } else {\n      element.scrollTop = scrollPosition;\n    }\n  }\n}\n```\n\nBesides supporting integration with [Glint][glint], this also provides nice hooks for documentation tooling. Note, however, that it can result in *much worse* feedback in tests or at runtime if someone passes the wrong kind of arguments to your modifier and you *haven't* included assertions: users who pass the wrong thing will just have the modifier fail. For example, if you fail to pass the positional argument, `scrollPosition` would simply be `undefined`, and then `element.scrollTop` could end up being set to `NaN`. Whoops! For that reason, if your modifier will be used by non-TypeScript consumers, you should both publish the types for it *and* add dev-time assertions:\n\n```ts\n// app/modifiers/scroll-position.ts\nimport Modifier from 'ember-modifier';\n\ninterface ScrollPositionModifierSignature {\n  Args: {\n    Positional: [scrollPosition: number];\n    Named: {\n      relative: boolean;\n    };\n  };\n  Element: Element; // not required: it'll be set by default\n}\n\nexport default class ScrollPositionModifier\n    extends Modifier<ScrollPositionModifierSignature> {\n  modify(element, [scrollPosition], { relative }) {\n    assert(,\n      `first argument to 'scroll-position' must be a number, but ${scrollPosition} was ${typeof scrollPosition}`,\n      typeof scrollPosition === \"number\"\n    );\n\n    assert(\n      `'relative' argument to 'scroll-position' must be a boolean, but ${relative} was ${typeof relative}`,\n      typeof relative === \"boolean\"\n    );\n\n    if (relative) {\n      element.scrollTop += scrollPosition;\n    } else {\n      element.scrollTop = scrollPosition;\n    }\n  }\n}\n```\n\n### The `Signature` type\n\nThe `Signature` for a modifier is the combination of the positional and named arguments it receives and the element to which it may be applied.\n\n```ts\ninterface Signature {\n  Args: {\n    Named: {\n      [argName: string]: unknown;\n    };\n    Positional: unknown[];\n  };\n  Element: Element;\n}\n```\n\nWhen writing a signature yourself, all of those are optional: the types for modifiers will fall back to the correct defaults of `Element`, an object for named arguments, and an array for positional arguments. You can apply a signature when defining either a function-based or a class-based modifier.\n\nIn a function-based modifier, the callback arguments will be inferred from the signature, so you do not need to specify the types twice:\n\n```ts\ninterface MySignature {\n  Element: HTMLMediaElement;\n  Args: {\n    Named: {\n      when: boolean;\n    };\n    Positional: [];\n  };\n}\n\nconst play = modifier<MySignature>((el, _, { when: shouldPlay }) => {\n  if (shouldPlay) {\n    el.play();\n  } else {\n    el.pause();\n  }\n})\n```\n\nYou never *need* to specify a signature in this way for a function-based modifier: you can simply write the types inline instead:\n\n```ts\nconst play = modifier(\n  (el: HTMLMediaElement, _: [], { when: shouldPlay }: { when: boolean}) => {\n    if (shouldPlay) {\n      el.play();\n    } else {\n      el.pause();\n    }\n  }\n);\n```\n\nHowever, the explicit `modifier<Signature>(...)` form is tested to keep working, since it can be useful for documentation!\n\nThe same basic approach works with a class-based modifier:\n\n```ts\ninterface MySignature {\n  // ...\n}\n\nexport default class MyModifier extends Modifier<MySignature> {\n  // ...\n}\n```\n\nIn that case, the `element` and `args` will always have the right types throughout the body. Since the type of `args` in the constructor are derived from the signature, you can use the `ArgsFor` type helper to avoid having to write the type out separately:\n\n```ts\nimport Modifier, { ArgsFor } from 'ember-modifier';\n\ninterface MySignature {\n  // ...\n}\n\nexport default class MyModifier extends Modifier<MySignature> {\n  constructor(owner: unknown, args: ArgsFor<MySignature>) {\n    // ...\n  }\n}\n```\n\n`ArgsFor` isn't magic: it just takes the `Args` from the `Signature` you provide and turns it into the right shape for the constructor: the `Named` type ends up as the `named` field and the `Positional` type ends up as the type for `args.positional`, so you could write it out yourself if you preferred:\n\n```ts\nimport Modifier from 'ember-modifier';\n\ninterface MySignature {\n  // ...\n}\n\nexport default class MyModifier extends Modifier<MySignature> {\n  constructor(\n    owner: unknown,\n    args: {\n      named: MySignature['Args']['Named'];\n      positional: MySignature['Args']['Positional'];\n    }\n  ) {\n    // ...\n  }\n}\n```\n\n### Examples with TypeScript\n\n#### Function-based modifier\n\nLet’s look at a variant of the `move-randomly` example from above, implemented in TypeScript, and now requiring a named argument, the maximum offset. Using the recommended combination of types and runtime type-checking, it would look like this:\n\n```ts\n// app/modifiers/move-randomly.js\nimport { modifier } from 'ember-modifier';\nimport { assert } from '@ember/debug';\n\nconst { random, round } = Math;\n\nexport default modifier(\n  (element: HTMLElement, _: [], named: { maxOffset: number }\n) => {\n  assert(\n    'move-randomly can only be installed on HTML elements!',\n    element instanceof HTMLElement\n  );\n\n  const { maxOffset } = named;\n  assert(\n    `The 'max-offset' argument to 'move-randomly' must be a number, but was ${typeof maxOffset}`,\n    typeof maxOffset === \"number\"\n  );\n\n  const id = setInterval(() => {\n    const top = round(random() * maxOffset);\n    const left = round(random() * maxOffset);\n    element.style.transform = `translate(${left}px, ${top}px)`;\n  }, 1000);\n\n  return () => clearInterval(id);\n});\n```\n\nA few things to notice here:\n\n1.  TypeScript correctly infers the *base* types of the arguments for the function passed to the modifier; you don't need to specify what `element` or `positional` or `named` are unless you are doing like we are in this example and providing a usefully more-specific type to callers.\n\n2.  If we returned a teardown function which had the wrong type signature, that would also be an error.\n\n    If we return a value instead of a function, for example:\n\n    ```ts\n    export default modifier((element, _, named) => {\n      // ...\n\n      return id;\n    });\n    ```\n\n    TypeScript will report:\n\n    > ```\n    > Type 'Timeout' is not assignable to type 'void | Teardown'.\n    > ```\n\n    Likewise, if we return a function with the wrong signature, we will see the same kinds of errors. If we expected to receive an argument in the teardown callback, like this:\n\n    ```ts\n    export default modifier((element, _, named) => {\n      // \n\n      return (interval: number) => clearTimeout(interval);\n    });\n    ```\n\n    TypeScript will report:\n\n    > ```\n    > Type '(interval: number) => void' is not assignable to type 'void | Teardown'.\n    > ```\n\n####  Class-based\n\nTo support correctly typing `args` in the `constructor` for the case where you do runtime type checking, we supply an `ArgsFor` type utility. (This is useful because the `Signature` type, matching Glimmer Component and other \"invokable\" items in Ember/Glimmer, has capital letters for the names of the types, while `args.named` and `args.positional` are lower-case.) Here’s how that would look with a fully typed modifier that alerts \"This is a typesafe modifier!\" an amount of time after receiving arguments that depends on the length of the first argument and an *optional* multiplier (a nonsensical thing to do, but one that illustrates a fully type-safe class-based modifier):\n\n```ts\nimport Modifier, { ArgsFor, PositionalArgs, NamedArgs } from 'ember-modifier';\nimport { assert } from '@ember/debug';\n\ninterface NeatSignature {\n  Args: {\n    Named: {\n      multiplier?: number;\n    };\n    Positional: [string];\n  }\n}\n\n\nfunction cleanup(instance: Neat) => {\n  if (instance.interval) {\n    clearInterval(instance.interval);\n  }\n}\n\nexport default class Neat extends Modifier<NeatSignature> {\n  interval?: number;\n\n  constructor(owner: unknown, args: ArgsFor<NeatSignature>) {\n    super(owner, args);\n    registerDestructor(this, cleanup);\n  }\n\n  modify(\n    element: Element,\n    [lengthOfInput]: PositionalArgs<NeatSignature>,\n    { multiplier }: NamedArgs<NeatSignature>\n  ) {\n    assert(\n  \t  `positional arg must be 'string' but was ${typeof lengthOfInput}`,\n  \t  typeof lengthOfInput === 'string'\n  \t);\n\n    assert(\n    \t`'multiplier' arg must be a number but was ${typeof multiplier}`,\n    \tmultiplier ? typeof multiplier === \"number\" : true\n    );\n\n    multiplier = modifier ?? 1000;\n\n    let updateTime = multiplier * lengthOfInput;\n    this.interval = setInterval(() => {\n      element.innerText =\n        `Behold, a type safe modifier moved after ${updateTime / 1000}s`;\n    }, updateTime)\n  }\n}\n```\n\nContributing\n------------------------------------------------------------------------------\n\nSee the [Contributing](CONTRIBUTING.md) guide for details.\n\n\nLicense\n------------------------------------------------------------------------------\n\nThis project is licensed under the [MIT License](LICENSE.md).\n","engines":{"node":"14.* || 16.* || >= 18"},"exports":{".":"./dist/index.js","./*":"./dist/*","./addon-main.js":"./addon-main.js"},"gitHead":"ede005311f30cad3ccc070adbf0ea149e6056123","scripts":{"lint":"eslint . --cache --ext .ts,.js","test":"echo 'Please refer to test-app for addon tests'","build":"rollup --config","start":"rollup --config --watch","lint:fix":"eslint . --fix --ext .ts,.js","typecheck":"tsc --noEmit","prepublishOnly":"rollup --config"},"_npmUser":{"name":"sergeastapov","email":"sergeastapov@gmail.com"},"repository":{"url":"git+https://github.com/ember-modifier/ember-modifier.git","type":"git"},"_npmVersion":"8.19.2","description":"A library for writing Ember modifiers","directories":{"doc":"doc","test":"tests"},"ember-addon":{"main":"addon-main.js","type":"addon","version":2},"_nodeVersion":"14.20.1","dependencies":{"@embroider/addon-shim":"^1.7.1","ember-cli-string-utils":"^1.1.0","ember-cli-normalize-entity-name":"^1.0.0"},"publishConfig":{"registry":"https://registry.npmjs.org"},"typesVersions":{"*":{"*":["./dist/*"],".":["./dist/index.d.ts"],"./-private/signature":["./dist/-private/signature.d.ts"]}},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"tslib":"^2.4.0","eslint":"^8.15.0","rollup":"^2.74.1","prettier":"^2.4.1","typescript":"^4.6.4","@babel/core":"^7.18.0","@types/rsvp":"^4.0.4","expect-type":"^0.13.0","@types/qunit":"^2.11.2","rollup-plugin-ts":"^2.0.7","@types/ember-qunit":"~5.0.0","eslint-plugin-node":"^11.1.0","@types/ember__debug":"~4.0.1","eslint-plugin-ember":"^10.6.1","@babel/eslint-parser":"^7.15.8","@embroider/addon-dev":"^1.7.1","@rollup/plugin-babel":"^5.3.1","@types/ember-resolver":"^5.0.10","@types/ember__modifier":"~4.0.1","eslint-config-prettier":"^8.3.0","eslint-plugin-prettier":"^4.0.0","@babel/preset-typescript":"^7.17.12","@types/ember__destroyable":"~4.0.0","@typescript-eslint/parser":"^5.26.0","@types/ember__test-helpers":"^2.0.2","ember-destroyable-polyfill":"^2.0.3","@typescript-eslint/eslint-plugin":"^5.26.0","@babel/plugin-proposal-decorators":"^7.17.12","@babel/plugin-proposal-class-properties":"^7.17.12"},"peerDependencies":{"ember-source":"*"},"peerDependenciesMeta":{"ember-source":{"optional":true}},"_npmOperationalInternal":{"tmp":"tmp/ember-modifier_4.0.0-beta.1-unstable.ede0053_1666140954095_0.5452941245684226","host":"s3://npm-registry-packages"}},"4.0.0-beta.1-unstable.0a0dd32":{"name":"ember-modifier","version":"4.0.0-beta.1-unstable.0a0dd32","keywords":["ember-addon"],"author":"","license":"MIT","_id":"ember-modifier@4.0.0-beta.1-unstable.0a0dd32","maintainers":[{"name":"rwjblue","email":"me@rwjblue.com"},{"name":"chriskrycho","email":"chris@chriskrycho.com"},{"name":"pzuraq","email":"opensource@pzuraq.com"},{"name":"sergeastapov","email":"sergeastapov@gmail.com"}],"homepage":"https://github.com/ember-modifier/ember-modifier#readme","bugs":{"url":"https://github.com/ember-modifier/ember-modifier/issues"},"dist":{"shasum":"c392f867c00b46e99f38b67c746dd6a6fd8a333f","tarball":"https://registry.npmjs.org/ember-modifier/-/ember-modifier-4.0.0-beta.1-unstable.0a0dd32.tgz","fileCount":14,"integrity":"sha512-ewfcx18wPAlrqpPNq/nW+t8zjQYIYtApHFGPhXNH02DAeMNSeX40Z8xhoR527gODVf/5ahveQXQwElB4jb11Dw==","signatures":[{"sig":"MEQCIDcng1oUKs1cJkWJahj/7ZBunk1eDW4AohPgjrlqyhkzAiBhPU+LFbFFXrr8u651fb07lX7IolWnYFw+Wjqv4FsSJA==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":57656,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjax1rACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmo/eg/+Olh7SyGWakt9HQCQk4fbnzYa1/SoBjSYOyXTVR/1L1fBkZHK\r\nX+LkI1A1MSTQOMfae6zDHZQDOJ4gqFj1vFckW6vXFecYy79wshemtX3d36FL\r\nOcO/tGLIo4KF8/iUOFV3NpF6SePfOeQcegg/k0ER+a5Px/NLmxWgMdb26FeD\r\nsWVBQTv6YbqAtC9V20doHFmZzBCNm79ZZj4+Kv47AA1nlXiKRXrFBEWTftb2\r\n9ksU9XQiCr4O23lZygivmMXLc4qzhIU4fVxMw/AAPRqqBb8CrWS5lCIvJxuR\r\ntMwxtaa4sFiy9NqIZ7IpCPLCg7QZ1XKxRAu3Z59jzRNJa4suSe7UDqWcsp1K\r\n/SUciZUdG8f493d1/oTBhoITUQUfhrxvZNL4c7/TQIgBTkn6/fAYx2cVdugN\r\nbWAbhXlBC27A3D3CyNSadDhod96tqyiZ7Z/3B+mb3JKcs49bvdMOHt+5QQMZ\r\nqmsZ6EG/iWWOpDhGWymQt6LUEpen4C1E8CZrPoygJsQVacEBjQLE/v+Ld9uQ\r\nBj6aVa9i8TmMW1eFpwusmFb+opreLINy8Of2Sp9ouztOIyxZhWtGUdkkeCS1\r\nfYgSKECR0qpEA8dv5uqdIjFGOfHzYDrURPrDNfaoHXaE02WQw6+R/FTtSYhI\r\neHBdsAxQ0S3GFNmWpE9a+wMNk9cs79cWi6s=\r\n=W6RF\r\n-----END PGP SIGNATURE-----\r\n"},"ember":{"edition":"octane"},"volta":{"extends":"../package.json"},"readme":"ember-modifier\n==============================================================================\n\nThis addon provides an API for authoring [element modifiers] in Ember. It\nmirrors Ember's [helper] API, with variations for writing both simple\nfunction-based modifiers and more complicated class-based modifiers.\n\n[element modifiers]: https://blog.emberjs.com/2019/03/06/coming-soon-in-ember-octane-part-4.html\n[helper]: https://octane-guides-preview.emberjs.com/release/templates/writing-helpers\n\n:warning: **NOTE:** this is the README for the v4 release (currently available in beta)! For the v3 README, see [here](https://github.com/ember-modifier/ember-modifier/blob/v3/README.md). :warning:\n\n- [Compatibility](#compatibility)\n  - [TypeScript](#typescript)\n- [Installation](#installation)\n- [Philosophy](#philosophy)\n  - [Whoa whoa whoa, hold on, what's a _\"side effect\"_?](#whoa-whoa-whoa-hold-on-whats-a-side-effect)\n  - [Managing \"side effects\" effectively](#managing-side-effects-effectively)\n- [Usage](#usage)\n  - [Function-Based Modifiers](#function-based-modifiers)\n    - [Generating a Function-Based Modifier](#generating-a-function-based-modifier)\n    - [Example without Cleanup](#example-without-cleanup)\n    - [Example with Cleanup](#example-with-cleanup)\n  - [Class-Based Modifiers](#class-based-modifiers)\n    - [Generating a Class Modifier](#generating-a-class-modifier)\n    - [Example without Cleanup](#example-without-cleanup-1)\n    - [Example with Cleanup](#example-with-cleanup-1)\n    - [Example with Service Injection](#example-with-service-injection)\n    - [API](#api)\n- [TypeScript](#typescript-1)\n  - [The `Signature` type](#the-signature-type)\n  - [Examples with TypeScript](#examples-with-typescript)\n    - [Function-based modifier](#function-based-modifier)\n    - [Class-based](#class-based)\n- [Contributing](#contributing)\n- [License](#license)\n\nCompatibility\n------------------------------------------------------------------------------\n\n* Ember.js v3.24 or above\n* Ember CLI v2.13 or above\n* Node.js v14 or above\n\n### TypeScript\n\nThis project follows the current draft of [the Semantic Versioning for TypeScript Types][semver] proposal.\n\n- **Currently supported TypeScript versions:** v4.2, v4.3, v4.4, v4.5, and v4.6\n- **Compiler support policy:** [simple majors][sm]\n- **Public API:** all published types not in a `-private` module are public\n\n[semver]: https://github.com/chriskrycho/ember-rfcs/blob/semver-for-ts/text/0730-semver-for-ts.md\n[sm]: https://github.com/chriskrycho/ember-rfcs/blob/semver-for-ts/text/0730-semver-for-ts.md#simple-majors\n\n\nInstallation\n------------------------------------------------------------------------------\n\n```\nember install ember-modifier\n```\n\n\nPhilosophy\n------------------------------------------------------------------------------\n\nModifiers are a basic primitive for interacting with the DOM in Ember. For\nexample, Ember ships with a built-in modifier, `{{on}}`:\n\n```hbs\n<button {{on \"click\" @onClick}}>\n  {{@text}}\n</button>\n```\n\nAll modifiers get applied to elements directly this way (if you see a similar\nvalue that _isn't_ in an element, it is probably a _helper_ instead), and they\nare passed the element when applying their effects.\n\nConceptually, modifiers take _tracked, derived state_, and turn it into some\nsort of _side effect_ related in some way to the DOM element they are applied\nto.\n\n### Whoa whoa whoa, hold on, what's a _\"side effect\"_?\n\nA \"side effect\" is something that happens in programming all the time. Here's an\nexample of one in an Ember component that attempts to make a button like in the\nfirst example, but without modifiers:\n\n```js\n// 🛑 DO NOT COPY THIS 🛑\nimport Component from '@glimmer/component';\n\nexport default class MyButton extends Component {\n  get setupEventHandler() {\n    document.querySelector('#my-button').addEventListener(this.args.onClick);\n\n    return undefined;\n  }\n}\n```\n```hbs\n<button id=\"#my-button\">\n  {{this.setupEventHandler}}\n\n  {{@text}}\n</button>\n```\n\nWe can see by looking at the `setupEventListener` getter that it isn't actually\nreturning a value. Instead, it always returns `undefined`. However, it also adds\nthe `@onClick` argument as an _event listener_ to the button in the template\nwhen the getter is run, as the template is rendering, which is a _side effect_\n- it is an effect of running the code that doesn't have anything to do with the\n\"main\" purpose of that code, in this case to return a dynamically computed\nvalue. In fact, this code doesn't compute a value at all, so this component is\n_misusing_ the getter in order to run its side effect whenever it is rendered in\nthe template.\n\nUnmanaged side effects can make code very difficult to reason about, since any\nfunction could be updating a value elsewhere. In fact, the code above is very\nbuggy:\n\n1. If the `@onClick` argument ever changes, it won't remove the old event\n   listener, it'll just keep adding new ones.\n2. It won't remove the old event listener when the component is removed.\n3. It uses a document element selector that may not be unique, and it has no\n   guarantee that the element will exist when it runs.\n4. It _will_ run in Fastboot/Server Side Rendering, where no DOM exists at all,\n   and it'll throw errors because of this.\n\nHowever, there are lots of times where its difficult to write code that\n_doesn't_ have side effects. Sometimes it would mean having to rewrite a large\nportion of an application. Sometimes, like in the case of modifying DOM, there\nisn't a clear way to do it at _all_ with just getters and components.\n\nThis is where _modifiers_ come in. Modifiers exist as a way to bridge the gap\nbetween derived state and side effects in way that is _contained_ and\n_consistent_, so that users of a modifier don't have to think about them.\n\n### Managing \"side effects\" effectively\n\nLet's look again at our original example:\n\n```hbs\n<button {{on \"click\" @onClick}}>\n  {{@text}}\n</button>\n```\n\nWe can see pretty clearly from this template that Ember will:\n\n1. Create a `<button>` element\n2. Append the contents of the `@text` argument to that button\n3. Add a click event handler to the button that runs the `@onClick` argument\n\nIf `@text` or `@onClick` ever change, Ember will keep everything in sync for us.\nWe don't ever have to manually set `element.textContent` or update anything\nourselves. In this way, we can say the template is _declarative_ - it tells\nEmber what we want the output to be, and Ember handles all of the bookkeeping\nitself.\n\nHere's how we could _implement_ the `{{on}}` modifier so that it always keeps\nthings in sync correctly:\n\n```js\nimport { modifier } from 'ember-modifier';\n\nexport default modifier((element, [eventName, handler]) => {\n  element.addEventListener(eventName, handler);\n\n  return () => {\n    element.removeEventListener(eventName, handler);\n  }\n});\n```\n\nHere, we setup the event listener using the positional parameters passed to the\nmodifier. Then, we return a _destructor_ - a function that _undoes_ our setup,\nand is effectively the _opposite_ side effect. This way, if the `@onClick`\nhandler ever changes, we first teardown the first event listener we added -\nleaving the element in its _original_ state before the modifier ever ran - and\nthen setup the new handler.\n\nThis is what allows us to treat the `{{on}}` modifier as if it were just like\nthe `{{@text}}` value we put in the template. While it _is_ side effecting, it\nknows how to setup and teardown that side effect and manage its state. The side\neffect is _contained_ - it doesn't escape into the rest of our application, it\ndoesn't cause other unrelated changes, and we can think about it as another\npiece of declarative, derived state. Just another part of the template!\n\nIn general, when writing modifiers, especially general purpose/reusable\nmodifiers, they should be designed with this in mind. Which specific effects are\nthey trying to accomplish, how to manage them effectively, and how to do it in\na way that is _transparent_ to the user of the modifier.\n\nUsage\n------------------------------------------------------------------------------\n\nThis addon does not provide any modifiers out of the box. Instead, this library\nallows you to write your own. There are two ways to write modifiers:\n\n1. Function-based modifiers\n2. Class-based modifiers\n\nThese are analogous to Ember's Helper APIs, `helper` and `Helper`.\n\n### Function-Based Modifiers\n\n`modifier` is an API for writing simple modifiers. For instance, you could\nimplement Ember's built-in `{{on}}` modifier like so with `modifier`:\n\n```js\n// /app/modifiers/on.js\nimport { modifier } from 'ember-modifier';\n\nexport default modifier((element, [eventName, handler]) => {\n  element.addEventListener(eventName, handler);\n\n  return () => {\n    element.removeEventListener(eventName, handler);\n  }\n});\n```\n\nFunction-based modifiers consist of a function that receives:\n\n1. The `element`\n2. An array of positional arguments\n3. An object of named arguments\n\n```js\nmodifier((element, positional, named) => { /* */ });\n```\n\nThis function runs the first time when the element the modifier was applied to\nis inserted into the DOM, and it _autotracks_ while running. Any tracked values\nthat it accesses will be tracked, including the arguments it receives, and if\nany of them changes, the function will run again.[^changes]\n\nThe modifier can also optionally return a _destructor_. The destructor function\nwill be run just before the next update, and when the element is being removed\nentirely. It should generally clean up the changes that the modifier made in the\nfirst place.\n\n[^changes]: As with autotracking in general, “changes” here actually means that the tracked property was set—even if it was set to the same value. This is because autotracking does not cache the *values* of properties, only the last time they changed. See [this blog post](https://v5.chriskrycho.com/journal/autotracking-elegant-dx-via-cutting-edge-cs/) for a deep dive on how it works!\n\n#### Generating a Function-Based Modifier\n\nTo create a modifier (and a corresponding integration test), run:\n\n```\nember g modifier scroll-top\n```\n\n#### Example without Cleanup\n\nFor example, if you wanted to implement your own `scrollTop` modifier (similar\nto [this][scroll-example]), you may do something like this:\n\n[scroll-example]: https://github.com/emberjs/ember-render-modifiers#example-scrolling-an-element-to-a-position\n\n```js\n// app/modifiers/scroll-top.js\nimport { modifier } from 'ember-modifier';\n\nexport default modifier((element, [scrollPosition]) => {\n  element.scrollTop = scrollPosition;\n})\n```\n```hbs\n<div class=\"scroll-container\" {{scroll-top @scrollPosition}}>\n  {{yield}}\n</div>\n```\n\n#### Example with Cleanup\n\nIf the functionality you add in the modifier needs to be torn down when the\nelement is removed, you can return a function for the teardown method.\n\nFor example, if you wanted to have your elements dance randomly on the page\nusing `setInterval`, but you wanted to make sure that was canceled when the\nelement was removed, you could do:\n\n```js\n// app/modifiers/move-randomly.js\nimport { modifier } from 'ember-modifier';\n\nconst { random, round } = Math;\n\nexport default modifier(element => {\n  const id = setInterval(() => {\n    const top = round(random() * 500);\n    const left = round(random() * 500);\n    element.style.transform = `translate(${left}px, ${top}px)`;\n  }, 1000);\n\n  return () => clearInterval(id);\n});\n\n```\n```hbs\n<button {{move-randomly}}>\n  {{yield}}\n</button>\n```\n\n### Class-Based Modifiers\n\nSometimes you may need to do something more complicated than what can be handled\nby function-based modifiers. For instance:\n\n1. You may need to inject services and access them\n2. You may need fine-grained control of updates, either for performance or\n   convenience reasons, and don't want to teardown the state of your modifier\n   every time only to set it up again.\n3. You may need to store some local state within your modifier.\n\nIn these cases, you can use a _class-based modifier_ instead. Here's how you\nwould implement the `{{on}}` modifier with a class:\n\n```js\nimport Modifier from 'ember-modifier';\nimport { registerDestructor } from '@ember/destroyable';\n\nfunction cleanup(instance: OnModifier) {\n  let { element, event, handler } = instance;\n\n  if (element && event && handler) {\n    element.removeEventListener(event, handler);\n\n    instance.element = null;\n    instance.event = null;\n    instance.handler = null;\n  }\n}\n\nexport default class OnModifier extends Modifier {\n  element = null;\n  event = null;\n  handler = null;\n\n  modify(element, [event, handler]) {\n    this.addEventListener(element, event, handler);\n    registerDestructor(this, cleanup)\n  }\n\n  // methods for reuse\n  addEventListener = (element, event, handler) => {\n    // Store the current element, event, and handler for when we need to remove\n    // them during cleanup.\n    this.element = element;\n    this.event = event;\n    this.handler = handler;\n\n    element.addEventListener(event, handler);\n  };\n}\n```\n\nWhile this is slightly more complicated than the function-based version, but\nthat complexity comes along with much more _control_.\n\nAs with function-based modifiers, the lifecycle hooks of class modifiers are\n_tracked_. When they run, then any values they access will be added to the\nmodifier, and the modifier will update if any of those values change.\n\n#### Generating a Class Modifier\n\nTo create a modifier (and a corresponding integration test), run:\n\n```\nember g modifier scroll-top --class\n```\n\n#### Example without Cleanup\n\nFor example, let's say you want to implement your own `{{scroll-position}}`\nmodifier (similar to [this](https://github.com/emberjs/ember-render-modifiers#example-scrolling-an-element-to-a-position)).\n\nThis modifier can be attached to any element and accepts a single positional\nargument. When the element is inserted, and whenever the argument is updated, it\nwill set the element's `scrollTop` property to the value of its argument.\n\n(Note that this example does not require the use of a class, and could be\nimplemented equally well with a function-based modifier!)\n\n```js\n// app/modifiers/scroll-position.js\nimport Modifier from 'ember-modifier';\n\nexport default class ScrollPositionModifier extends Modifier {\n  modify(element, [scrollPosition], { relative }) {\n    if(relative) {\n      element.scrollTop += scrollPosition;\n    } else {\n      element.scrollTop = scrollPosition;\n    }\n  }\n}\n```\n\nUsage:\n\n```handlebars\n{{!-- app/components/scroll-container.hbs --}}\n\n<div\n  class=\"scroll-container\"\n  style=\"width: 300px; heigh: 300px; overflow-y: scroll\"\n  {{scroll-position this.scrollPosition relative=false}}\n>\n  {{yield this.scrollToTop}}\n</div>\n```\n\n```js\n// app/components/scroll-container.js\n\nimport Component from '@glimmer/component';\nimport { tracked } from '@glimmer/tracking';\nimport { action } from '@ember/object';\n\nexport default class ScrollContainerComponent extends Component {\n  @tracked scrollPosition = 0;\n\n  @action scrollToTop() {\n    this.scrollPosition = 0;\n  }\n}\n```\n\n```handlebars\n{{!-- app/templates/application.hbs --}}\n\n<ScrollContainer as |scroll|>\n  A lot of content...\n\n  <button {{on \"click\" scroll}}>Back To Top</button>\n</ScrollContainer>\n```\n\n#### Example with Cleanup\n\nIf the functionality you add in the modifier needs to be torn down when the\nmodifier is removed, you can use `registerDestructor` from `@ember/destroyable`.\n\nFor example, if you want to have your elements dance randomly on the page using\n`setInterval`, but you wanted to make sure that was canceled when the modifier\nwas removed, you could do this:\n\n```js\n// app/modifiers/move-randomly.js\n\nimport Modifier from 'ember-modifier';\nimport { registerDestructor } from '@ember/destroyable'\n\nconst { random, round } = Math;\nconst DEFAULT_DELAY = 1000;\n\nfunction cleanup(instance) {\n  if (instance.setIntervalId !== null) {\n    clearInterval(instance.setIntervalId);\n    instance.setIntervalId = null;\n  }\n}\n\nexport default class MoveRandomlyModifier extends Modifier {\n  element = null;\n  setIntervalId = null;\n\n  constructor(owner, args) {\n    super(owner, args);\n    registerDestructor(this, cleanup);\n  }\n\n  modify(element, _, { delay }) {\n    // Save off the element the first time for convenience with #moveElement\n    if (!this.element) {\n      this.element = element;\n    }\n\n    // Reset from any previous state.\n    cleanup(this);\n\n    this.setIntervalId = setInterval(this.#moveElement, delay ?? DEFAULT_DELAY);\n  }\n\n  #moveElement = (element) => {\n    let top = round(random() * 500);\n    let left = round(random() * 500);\n    this.element.style.transform = `translate(${left}px, ${top}px)`;\n  };\n}\n```\n\nUsage:\n\n```hbs\n<div {{move-randomly}}>\n  Catch me if you can!\n</div>\n```\n\n#### Example with Service Injection\n\nYou can also use services into your modifier, just like any other class in Ember.\n\nFor example, suppose you wanted to track click events with `ember-metrics`:\n\n```js\n// app/modifiers/track-click.js\n\nimport { inject as service } from '@ember/service';\nimport Modifier from 'ember-modifier';\nimport { registerDestructor } from '@ember/destroyable';\n\nfunction cleanup(instance) {\n  instance.element?.removeEventListener('click', instance.onClick, true);\n}\n\nexport default class TrackClick extends Modifier {\n  @service metrics;\n\n  constructor(owner, args) {\n    super(owner, args);\n    registerDestructor(this, this.cleanup);\n  }\n\n  modify(element, [eventName], options) {\n    this.element = element;\n    this.eventName = eventName;\n    this.options = options;\n\n    this.cleanup();\n    element.addEventListener('click', this.onClick, true);\n  }\n\n  onClick = () => {\n    this.metrics.trackEvent(this.eventName, this.options);\n  };\n}\n```\n\nUsage:\n\n```hbs\n<button {{track-click \"like-button-click\" page=\"some page\" title=\"some title\"}}>\n  Click Me!\n</button>\n```\n\n#### API\n\n<dl>\n<dt><code>constructor(owner, args)</code>\n<dd>Constructor for the modifier. You must call <code>super(...arguments)</code> before performing other initialization.</dd>\n<dt><code>modify(element, positionalArgs, namedArgs)</code>\n<dd>The primary hook for running a modifier. It gets called when the modifier is installed on the element, and any time any tracked state it uses changes. That tracked state can be from its arguments, which are auto-tracked, or from any other kind of tracked state, including but not limited to state on injected services.</dd>\n</dl>\n\n## TypeScript\n\nBoth the function- and class-based APIs can be used with TypeScript!\n\nBefore checking out the [Examples with Typescript](#examples-with-type-script) below, there is an important caveat you should understand about type safety!\n\nThere are, today, two basic approaches you can take to dealing with your modifier's arguments and element in a type safe way:\n\n1. You can use a type definition which specifies those for the outside world, relying on tooling like [Glint][glint] to check that the invocation is correct, and treat input as safe accordingly.\n2. You can provide the minimal public interface which *all* modifiers conform to, and do runtime type checking with `assert` calls to make your internal implementation safe.\n\nIf you have a code base which is strictly typed from end to end, including with template type checking via Glint, then (1) is a great choice. If you have a mixed code base, or are publishing an addon for others to use, then [it's usually best to do both (1) *and* (2)][safe-ts-libs]!\n\n[glint]: https://github.com/typed-ember/glint\n[safe-ts-libs]: https://v5.chriskrycho.com/journal/writing-robust-typescript-libraries/s\n\nTo handle runtime checking, for non-type-checked templates (including projects not yet using Glint or supporting external callers), you should *act* as though the arguments passed to your modifier can be *anything*. They’re typed as `unknown` by default, which means by default TypeScript will *require* you to work out the type passed to you at runtime. For example, with the `ScrollPositionModifier` shown above, you can combine TypeScript’s [type narrowing] with the default types for the class to provide runtime errors if the caller passes the wrong types, while providing safety throughout the rest of the body of the modifier. Here, `modify` would be *guaranteed* to have the correct types for `scrollPosition` and `relative`:\n\n[type narrowing]: https://www.typescriptlang.org/docs/handbook/advanced-types.html#type-guards-and-differentiating-types\n\n```ts\nimport Modifier from 'ember-modifier';\nimport { assert } from '@ember/debug';\n\nexport class ScrollPositionModifier extends Modifier {\n  modify(element, [scrollPosition], { relative }) {\n    assert(,\n      `first argument to 'scroll-position' must be a number, but ${scrollPosition} was ${typeof scrollPosition}`,\n      typeof scrollPosition === \"number\"\n    );\n\n    assert(\n      `'relative' argument to 'scroll-position' must be a boolean, but ${relative} was ${typeof relative}`,\n      typeof relative === \"boolean\"\n    );\n\n    if (relative) {\n      element.scrollTop += scrollPosition;\n    } else {\n      element.scrollTop = scrollPosition;\n    }\n  }\n}\n```\n\nIf you were writing for a fully-typed context, you can define your `Modifier` with a `Signature` interface, similar to the way you would define your signature for a Glimmer Component:\n\n```ts\n// app/modifiers/scroll-position.ts\nimport Modifier from 'ember-modifier';\n\ninterface ScrollPositionModifierSignature {\n  Args: {\n    Positional: [number];\n    Named: {\n      relative: boolean;\n    };\n  };\n}\n\nexport default class ScrollPositionModifier\n    extends Modifier<ScrollPositionModifierSignature> {\n  modify(element, [scrollPosition], { relative }) {\n    if (relative) {\n      element.scrollTop += scrollPosition;\n    } else {\n      element.scrollTop = scrollPosition;\n    }\n  }\n}\n```\n\nBesides supporting integration with [Glint][glint], this also provides nice hooks for documentation tooling. Note, however, that it can result in *much worse* feedback in tests or at runtime if someone passes the wrong kind of arguments to your modifier and you *haven't* included assertions: users who pass the wrong thing will just have the modifier fail. For example, if you fail to pass the positional argument, `scrollPosition` would simply be `undefined`, and then `element.scrollTop` could end up being set to `NaN`. Whoops! For that reason, if your modifier will be used by non-TypeScript consumers, you should both publish the types for it *and* add dev-time assertions:\n\n```ts\n// app/modifiers/scroll-position.ts\nimport Modifier from 'ember-modifier';\n\ninterface ScrollPositionModifierSignature {\n  Args: {\n    Positional: [scrollPosition: number];\n    Named: {\n      relative: boolean;\n    };\n  };\n  Element: Element; // not required: it'll be set by default\n}\n\nexport default class ScrollPositionModifier\n    extends Modifier<ScrollPositionModifierSignature> {\n  modify(element, [scrollPosition], { relative }) {\n    assert(,\n      `first argument to 'scroll-position' must be a number, but ${scrollPosition} was ${typeof scrollPosition}`,\n      typeof scrollPosition === \"number\"\n    );\n\n    assert(\n      `'relative' argument to 'scroll-position' must be a boolean, but ${relative} was ${typeof relative}`,\n      typeof relative === \"boolean\"\n    );\n\n    if (relative) {\n      element.scrollTop += scrollPosition;\n    } else {\n      element.scrollTop = scrollPosition;\n    }\n  }\n}\n```\n\n### The `Signature` type\n\nThe `Signature` for a modifier is the combination of the positional and named arguments it receives and the element to which it may be applied.\n\n```ts\ninterface Signature {\n  Args: {\n    Named: {\n      [argName: string]: unknown;\n    };\n    Positional: unknown[];\n  };\n  Element: Element;\n}\n```\n\nWhen writing a signature yourself, all of those are optional: the types for modifiers will fall back to the correct defaults of `Element`, an object for named arguments, and an array for positional arguments. You can apply a signature when defining either a function-based or a class-based modifier.\n\nIn a function-based modifier, the callback arguments will be inferred from the signature, so you do not need to specify the types twice:\n\n```ts\ninterface MySignature {\n  Element: HTMLMediaElement;\n  Args: {\n    Named: {\n      when: boolean;\n    };\n    Positional: [];\n  };\n}\n\nconst play = modifier<MySignature>((el, _, { when: shouldPlay }) => {\n  if (shouldPlay) {\n    el.play();\n  } else {\n    el.pause();\n  }\n})\n```\n\nYou never *need* to specify a signature in this way for a function-based modifier: you can simply write the types inline instead:\n\n```ts\nconst play = modifier(\n  (el: HTMLMediaElement, _: [], { when: shouldPlay }: { when: boolean}) => {\n    if (shouldPlay) {\n      el.play();\n    } else {\n      el.pause();\n    }\n  }\n);\n```\n\nHowever, the explicit `modifier<Signature>(...)` form is tested to keep working, since it can be useful for documentation!\n\nThe same basic approach works with a class-based modifier:\n\n```ts\ninterface MySignature {\n  // ...\n}\n\nexport default class MyModifier extends Modifier<MySignature> {\n  // ...\n}\n```\n\nIn that case, the `element` and `args` will always have the right types throughout the body. Since the type of `args` in the constructor are derived from the signature, you can use the `ArgsFor` type helper to avoid having to write the type out separately:\n\n```ts\nimport Modifier, { ArgsFor } from 'ember-modifier';\n\ninterface MySignature {\n  // ...\n}\n\nexport default class MyModifier extends Modifier<MySignature> {\n  constructor(owner: unknown, args: ArgsFor<MySignature>) {\n    // ...\n  }\n}\n```\n\n`ArgsFor` isn't magic: it just takes the `Args` from the `Signature` you provide and turns it into the right shape for the constructor: the `Named` type ends up as the `named` field and the `Positional` type ends up as the type for `args.positional`, so you could write it out yourself if you preferred:\n\n```ts\nimport Modifier from 'ember-modifier';\n\ninterface MySignature {\n  // ...\n}\n\nexport default class MyModifier extends Modifier<MySignature> {\n  constructor(\n    owner: unknown,\n    args: {\n      named: MySignature['Args']['Named'];\n      positional: MySignature['Args']['Positional'];\n    }\n  ) {\n    // ...\n  }\n}\n```\n\n### Examples with TypeScript\n\n#### Function-based modifier\n\nLet’s look at a variant of the `move-randomly` example from above, implemented in TypeScript, and now requiring a named argument, the maximum offset. Using the recommended combination of types and runtime type-checking, it would look like this:\n\n```ts\n// app/modifiers/move-randomly.js\nimport { modifier } from 'ember-modifier';\nimport { assert } from '@ember/debug';\n\nconst { random, round } = Math;\n\nexport default modifier(\n  (element: HTMLElement, _: [], named: { maxOffset: number }\n) => {\n  assert(\n    'move-randomly can only be installed on HTML elements!',\n    element instanceof HTMLElement\n  );\n\n  const { maxOffset } = named;\n  assert(\n    `The 'max-offset' argument to 'move-randomly' must be a number, but was ${typeof maxOffset}`,\n    typeof maxOffset === \"number\"\n  );\n\n  const id = setInterval(() => {\n    const top = round(random() * maxOffset);\n    const left = round(random() * maxOffset);\n    element.style.transform = `translate(${left}px, ${top}px)`;\n  }, 1000);\n\n  return () => clearInterval(id);\n});\n```\n\nA few things to notice here:\n\n1.  TypeScript correctly infers the *base* types of the arguments for the function passed to the modifier; you don't need to specify what `element` or `positional` or `named` are unless you are doing like we are in this example and providing a usefully more-specific type to callers.\n\n2.  If we returned a teardown function which had the wrong type signature, that would also be an error.\n\n    If we return a value instead of a function, for example:\n\n    ```ts\n    export default modifier((element, _, named) => {\n      // ...\n\n      return id;\n    });\n    ```\n\n    TypeScript will report:\n\n    > ```\n    > Type 'Timeout' is not assignable to type 'void | Teardown'.\n    > ```\n\n    Likewise, if we return a function with the wrong signature, we will see the same kinds of errors. If we expected to receive an argument in the teardown callback, like this:\n\n    ```ts\n    export default modifier((element, _, named) => {\n      // \n\n      return (interval: number) => clearTimeout(interval);\n    });\n    ```\n\n    TypeScript will report:\n\n    > ```\n    > Type '(interval: number) => void' is not assignable to type 'void | Teardown'.\n    > ```\n\n####  Class-based\n\nTo support correctly typing `args` in the `constructor` for the case where you do runtime type checking, we supply an `ArgsFor` type utility. (This is useful because the `Signature` type, matching Glimmer Component and other \"invokable\" items in Ember/Glimmer, has capital letters for the names of the types, while `args.named` and `args.positional` are lower-case.) Here’s how that would look with a fully typed modifier that alerts \"This is a typesafe modifier!\" an amount of time after receiving arguments that depends on the length of the first argument and an *optional* multiplier (a nonsensical thing to do, but one that illustrates a fully type-safe class-based modifier):\n\n```ts\nimport Modifier, { ArgsFor, PositionalArgs, NamedArgs } from 'ember-modifier';\nimport { assert } from '@ember/debug';\n\ninterface NeatSignature {\n  Args: {\n    Named: {\n      multiplier?: number;\n    };\n    Positional: [string];\n  }\n}\n\n\nfunction cleanup(instance: Neat) => {\n  if (instance.interval) {\n    clearInterval(instance.interval);\n  }\n}\n\nexport default class Neat extends Modifier<NeatSignature> {\n  interval?: number;\n\n  constructor(owner: unknown, args: ArgsFor<NeatSignature>) {\n    super(owner, args);\n    registerDestructor(this, cleanup);\n  }\n\n  modify(\n    element: Element,\n    [lengthOfInput]: PositionalArgs<NeatSignature>,\n    { multiplier }: NamedArgs<NeatSignature>\n  ) {\n    assert(\n  \t  `positional arg must be 'string' but was ${typeof lengthOfInput}`,\n  \t  typeof lengthOfInput === 'string'\n  \t);\n\n    assert(\n    \t`'multiplier' arg must be a number but was ${typeof multiplier}`,\n    \tmultiplier ? typeof multiplier === \"number\" : true\n    );\n\n    multiplier = modifier ?? 1000;\n\n    let updateTime = multiplier * lengthOfInput;\n    this.interval = setInterval(() => {\n      element.innerText =\n        `Behold, a type safe modifier moved after ${updateTime / 1000}s`;\n    }, updateTime)\n  }\n}\n```\n\nContributing\n------------------------------------------------------------------------------\n\nSee the [Contributing](CONTRIBUTING.md) guide for details.\n\n\nLicense\n------------------------------------------------------------------------------\n\nThis project is licensed under the [MIT License](LICENSE.md).\n","engines":{"node":"14.* || 16.* || >= 18"},"exports":{".":"./dist/index.js","./*":"./dist/*","./addon-main.js":"./addon-main.js"},"gitHead":"0a0dd32d5450c36a9a6e0564dfb605ac833f6a9a","scripts":{"lint":"eslint . --cache --ext .ts,.js","test":"echo 'Please refer to test-app for addon tests'","build":"rollup --config","start":"rollup --config --watch","lint:fix":"eslint . --fix --ext .ts,.js","typecheck":"tsc --noEmit","prepublishOnly":"rollup --config"},"_npmUser":{"name":"sergeastapov","email":"sergeastapov@gmail.com"},"repository":{"url":"git+https://github.com/ember-modifier/ember-modifier.git","type":"git"},"_npmVersion":"8.19.3","description":"A library for writing Ember modifiers","directories":{"doc":"doc","test":"tests"},"ember-addon":{"main":"addon-main.js","type":"addon","version":2},"_nodeVersion":"14.20.1","dependencies":{"@embroider/addon-shim":"^1.7.1","ember-cli-string-utils":"^1.1.0","ember-cli-normalize-entity-name":"^1.0.0"},"publishConfig":{"registry":"https://registry.npmjs.org"},"typesVersions":{"*":{"*":["./dist/*"],".":["./dist/index.d.ts"],"./-private/signature":["./dist/-private/signature.d.ts"]}},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"tslib":"^2.4.0","eslint":"^8.15.0","rollup":"^2.74.1","prettier":"^2.4.1","typescript":"^4.6.4","@babel/core":"^7.18.0","@types/rsvp":"^4.0.4","expect-type":"^0.13.0","@types/qunit":"^2.19.3","rollup-plugin-ts":"^3.0.2","@types/ember-qunit":"~5.0.2","eslint-plugin-node":"^11.1.0","@types/ember__debug":"~4.0.1","eslint-plugin-ember":"^10.6.1","@babel/eslint-parser":"^7.15.8","@embroider/addon-dev":"^1.7.1","@rollup/plugin-babel":"^5.3.1","@types/ember-resolver":"^5.0.11","@types/ember__modifier":"~4.0.2","eslint-config-prettier":"^8.3.0","eslint-plugin-prettier":"^4.0.0","@babel/preset-typescript":"^7.17.12","@types/ember__destroyable":"~4.0.0","@typescript-eslint/parser":"^5.26.0","@types/ember__test-helpers":"^2.0.2","ember-destroyable-polyfill":"^2.0.3","@typescript-eslint/eslint-plugin":"^5.26.0","@babel/plugin-proposal-decorators":"^7.17.12","@babel/plugin-proposal-class-properties":"^7.17.12"},"peerDependencies":{"ember-source":"*"},"peerDependenciesMeta":{"ember-source":{"optional":true}},"_npmOperationalInternal":{"tmp":"tmp/ember-modifier_4.0.0-beta.1-unstable.0a0dd32_1667964266796_0.6061221173787388","host":"s3://npm-registry-packages"}},"4.0.0-beta.1-unstable.6060d56":{"name":"ember-modifier","version":"4.0.0-beta.1-unstable.6060d56","keywords":["ember-addon"],"author":"","license":"MIT","_id":"ember-modifier@4.0.0-beta.1-unstable.6060d56","maintainers":[{"name":"rwjblue","email":"me@rwjblue.com"},{"name":"chriskrycho","email":"chris@chriskrycho.com"},{"name":"pzuraq","email":"opensource@pzuraq.com"},{"name":"sergeastapov","email":"sergeastapov@gmail.com"}],"homepage":"https://github.com/ember-modifier/ember-modifier#readme","bugs":{"url":"https://github.com/ember-modifier/ember-modifier/issues"},"dist":{"shasum":"6dc0ec3b882097a3f8f2241aa9570dc6f024ec37","tarball":"https://registry.npmjs.org/ember-modifier/-/ember-modifier-4.0.0-beta.1-unstable.6060d56.tgz","fileCount":12,"integrity":"sha512-bEOXrLqoiDfkXhMjkQaNiQ6FsyaJMJwnsliXtDxm1XOHQ5QsVhRZ9o9MRWumk+MSmRb0E6DZAoW/6trCm8RpUg==","signatures":[{"sig":"MEQCIAKZOaoqja8517ur48X8HFpkfqlc7Zb/O9Qwy/JDH9YuAiBJIVr71+aL5S1TuYDChsG6QONvqpQ+CDYt85vtA/tdaA==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":25935,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjbHEsACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpONA//W+ieZeW8H0il57OLUTVS+nFwc5EiiNfOck5KqAocN1HFJ3B8\r\nGotTyc9lPquMaanp4U9WxT8wKPHuouHLjMWAt3moM1JheQtv3CcBV0c4Gjau\r\naqKC9tIBHVhxobXC2WivNYHvz59lhrsoaJfoB/G8TxgXJULWagVyljQGeKkf\r\nJTUpf3joI4Znf3uGkSbDf8parxPiMFW62at0hghDzfxp9ppE5AO74PnkFxrr\r\nHM8xc7qecxKznJHm31L2fI7ucJTsdFLfz8EuMgtch88SUU5T//qv4EbFu5rm\r\nj/P/muXgOU/PNYjjJqyddLvHFVpbA7YcQNDf1jEM9Gm2Hci4aZb/tKaB8PSM\r\nnug5ecN1cJiNwYv87M8T2XYYKtD4I8hIUzH3geFaTZRNPv2CAKX7AxAuB3j+\r\n+Ucl+/2gBFyzKjXAEy1yQ5dE1w5f2RTm7jVYOYlDYnVfc3qaf7LAfwejGz37\r\njN9x7tonCOaVn4HnyDHOJUcodUY7dndyx0TjTGRw74/78QeEIFNEBQwa4jnA\r\np54gp2rrG3r+tCMcz6hBj1221cFiKRKJ3qh0rq2AmLmKfh5kSt3JL0TmUPCS\r\n0IH27CgjjryYyIP7ekQn57aF/WKbIYSvUreBTjUDm9ijGfK/BI1mRfbPY2as\r\neFO/4AHjHFOJA6d5lx0O4KTwm4ry+Ewd5Qc=\r\n=UfLP\r\n-----END PGP SIGNATURE-----\r\n"},"ember":{"edition":"octane"},"volta":{"extends":"../package.json"},"readme":"ERROR: No README data found!","engines":{"node":"14.* || 16.* || >= 18"},"exports":{".":"./dist/index.js","./*":"./dist/*","./addon-main.js":"./addon-main.js"},"gitHead":"6060d56317fc08f97871dd37fe268088ff4afc6a","scripts":{"lint":"eslint . --cache --ext .ts,.js","test":"echo 'Please refer to test-app for addon tests'","build":"rollup --config","start":"rollup --config --watch","lint:fix":"eslint . --fix --ext .ts,.js","typecheck":"tsc --noEmit","prepublishOnly":"rollup --config"},"_npmUser":{"name":"sergeastapov","email":"sergeastapov@gmail.com"},"repository":{"url":"git+https://github.com/ember-modifier/ember-modifier.git","type":"git"},"_npmVersion":"8.19.3","description":"A library for writing Ember modifiers","directories":{"doc":"doc","test":"tests"},"ember-addon":{"main":"addon-main.js","type":"addon","version":2},"_nodeVersion":"14.20.1","dependencies":{"@embroider/addon-shim":"^1.7.1","ember-cli-string-utils":"^1.1.0","ember-cli-normalize-entity-name":"^1.0.0"},"publishConfig":{"registry":"https://registry.npmjs.org"},"typesVersions":{"*":{"*":["./dist/*"],".":["./dist/index.d.ts"],"./-private/signature":["./dist/-private/signature.d.ts"]}},"_hasShrinkwrap":false,"devDependencies":{"tslib":"^2.4.0","eslint":"^8.15.0","rollup":"^2.74.1","prettier":"^2.4.1","typescript":"^4.8.4","@babel/core":"^7.20.2","@types/rsvp":"^4.0.4","expect-type":"^0.13.0","@types/qunit":"^2.19.3","rollup-plugin-ts":"^3.0.2","@types/ember-qunit":"~5.0.2","eslint-plugin-node":"^11.1.0","@types/ember__debug":"~4.0.1","eslint-plugin-ember":"^10.6.1","@babel/eslint-parser":"^7.15.8","@embroider/addon-dev":"^1.7.1","@rollup/plugin-babel":"^5.3.1","@types/ember-resolver":"^5.0.11","@types/ember__modifier":"~4.0.2","eslint-config-prettier":"^8.3.0","eslint-plugin-prettier":"^4.0.0","@babel/preset-typescript":"^7.17.12","@types/ember__destroyable":"~4.0.0","@typescript-eslint/parser":"^5.26.0","@types/ember__test-helpers":"^2.0.2","ember-destroyable-polyfill":"^2.0.3","@typescript-eslint/eslint-plugin":"^5.26.0","@babel/plugin-proposal-decorators":"^7.17.12","@babel/plugin-proposal-class-properties":"^7.17.12"},"peerDependencies":{"ember-source":"*"},"peerDependenciesMeta":{"ember-source":{"optional":true}},"_npmOperationalInternal":{"tmp":"tmp/ember-modifier_4.0.0-beta.1-unstable.6060d56_1668051244147_0.07176900560607136","host":"s3://npm-registry-packages"}},"4.0.0-beta.1-unstable.593e9f9":{"name":"ember-modifier","version":"4.0.0-beta.1-unstable.593e9f9","keywords":["ember-addon"],"author":"","license":"MIT","_id":"ember-modifier@4.0.0-beta.1-unstable.593e9f9","maintainers":[{"name":"rwjblue","email":"me@rwjblue.com"},{"name":"chriskrycho","email":"chris@chriskrycho.com"},{"name":"pzuraq","email":"opensource@pzuraq.com"},{"name":"sergeastapov","email":"sergeastapov@gmail.com"}],"homepage":"https://github.com/ember-modifier/ember-modifier#readme","bugs":{"url":"https://github.com/ember-modifier/ember-modifier/issues"},"dist":{"shasum":"9b193d74a20810d075cb9375e2d752639a81721a","tarball":"https://registry.npmjs.org/ember-modifier/-/ember-modifier-4.0.0-beta.1-unstable.593e9f9.tgz","fileCount":12,"integrity":"sha512-olHBfpBE1XhMdTT4Taw78Q5YjyH2rxgqEsks3FGUWf42N51UuCFRXDApV11MgBY+8C0gWmlzQD3QLAwgnd5p2Q==","signatures":[{"sig":"MEYCIQC6aFQfwPNel09osJ+OD5PRRwRobUUhJeUxasG1XP/6IgIhAO66re6ZK9eRdL0PyYMa2BeyDCO4EczX50SIZO2BUYBq","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":25935,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjbHeKACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmoYGQ//aqqpYj2peL9ku3zJLH6yD4Q8aY2pPEDoyjID+JYXeqw+R5kN\r\n4VJfUKnfRJUm2s6W+NkDEN7N98t8Fb/QB8WLf0sJOm0PjEg4i+dPNKDgD8bT\r\naQz0ScZw5CgZe2Y6o3dn9/Por5Z2hOnUBmx1x9JBmBHTI73YoTrlFRdsroBR\r\nslHJMDrM2aOdKv9vbwIq9rRWmzbuAzN6qnhS6l/etmX7li8p91pxcaB6Rvuj\r\nV0bsNyftaoeRZkhH8ZG5s9DVleul1g9N5FBMG22DiDQTYrxO47umnuT699Y3\r\nCkQw7qNfvcPncNbkbA4d8/mlkkaaEh6fMAlCoxGZvlnws5wvee7zgTzf+tan\r\n5HMJQtFbH8ll2M8NuIlMegNjG2I2ErFshexb4B5uM2zlPpl2rcvZXHWkA0kW\r\nUax1CKrAw1k51/9tZh6iTzB7Pt4JqZu7Ao3hAPmUwvpeto3CUugxN7+/wCcs\r\n/VaGfabJibbMKTtVl6hb+9NWx2GpUDnxUcfRNHtThj2NuTtI+hb+ETUjXI3T\r\nvNWDs0VTQsI2xngI8uj+A/hPq2RYQmRDljyiAnIAkafXfaTd87IOuNhkZ5B9\r\nAy36SkN5k8HtpDq5SXdQ0bIijGr8SEugzYxEms0CtX4z0YC9VsiagVd1F3Y5\r\nJxL2bT4JNe4QicboVxgtfAoyqk9+jJwAYu8=\r\n=PtUd\r\n-----END PGP SIGNATURE-----\r\n"},"ember":{"edition":"octane"},"volta":{"extends":"../package.json"},"readme":"ERROR: No README data found!","engines":{"node":"14.* || 16.* || >= 18"},"exports":{".":"./dist/index.js","./*":"./dist/*","./addon-main.js":"./addon-main.js"},"gitHead":"593e9f95b9880ccbdcd181ec183f19c57cdbb206","scripts":{"lint":"eslint . --cache --ext .ts,.js","test":"echo 'Please refer to test-app for addon tests'","build":"rollup --config","start":"rollup --config --watch","lint:fix":"eslint . --fix --ext .ts,.js","typecheck":"tsc --noEmit","prepublishOnly":"rollup --config"},"_npmUser":{"name":"sergeastapov","email":"sergeastapov@gmail.com"},"repository":{"url":"git+https://github.com/ember-modifier/ember-modifier.git","type":"git"},"_npmVersion":"8.19.3","description":"A library for writing Ember modifiers","directories":{"doc":"doc","test":"tests"},"ember-addon":{"main":"addon-main.js","type":"addon","version":2},"_nodeVersion":"14.20.1","dependencies":{"@embroider/addon-shim":"^1.7.1","ember-cli-string-utils":"^1.1.0","ember-cli-normalize-entity-name":"^1.0.0"},"publishConfig":{"registry":"https://registry.npmjs.org"},"typesVersions":{"*":{"*":["./dist/*"],".":["./dist/index.d.ts"],"./-private/signature":["./dist/-private/signature.d.ts"]}},"_hasShrinkwrap":false,"devDependencies":{"tslib":"^2.4.0","eslint":"^8.15.0","rollup":"^2.74.1","prettier":"^2.4.1","typescript":"^4.8.4","@babel/core":"^7.20.2","@types/rsvp":"^4.0.4","expect-type":"^0.13.0","@types/qunit":"^2.19.3","rollup-plugin-ts":"^3.0.2","@types/ember-qunit":"~5.0.2","eslint-plugin-node":"^11.1.0","@types/ember__debug":"~4.0.1","eslint-plugin-ember":"^10.6.1","@babel/eslint-parser":"^7.15.8","@embroider/addon-dev":"^1.7.1","@rollup/plugin-babel":"^5.3.1","@types/ember-resolver":"^5.0.11","@types/ember__modifier":"~4.0.2","eslint-config-prettier":"^8.3.0","eslint-plugin-prettier":"^4.0.0","@babel/preset-typescript":"^7.17.12","@types/ember__destroyable":"~4.0.0","@typescript-eslint/parser":"^5.26.0","@types/ember__test-helpers":"^2.0.2","ember-destroyable-polyfill":"^2.0.3","@typescript-eslint/eslint-plugin":"^5.26.0","@babel/plugin-proposal-decorators":"^7.17.12","@babel/plugin-proposal-class-properties":"^7.17.12"},"peerDependencies":{"ember-source":"*"},"peerDependenciesMeta":{"ember-source":{"optional":true}},"_npmOperationalInternal":{"tmp":"tmp/ember-modifier_4.0.0-beta.1-unstable.593e9f9_1668052873782_0.727997651165323","host":"s3://npm-registry-packages"}},"4.0.0-beta.1-unstable.e12131e":{"name":"ember-modifier","version":"4.0.0-beta.1-unstable.e12131e","keywords":["ember-addon"],"author":"","license":"MIT","_id":"ember-modifier@4.0.0-beta.1-unstable.e12131e","maintainers":[{"name":"rwjblue","email":"me@rwjblue.com"},{"name":"chriskrycho","email":"chris@chriskrycho.com"},{"name":"pzuraq","email":"opensource@pzuraq.com"},{"name":"sergeastapov","email":"sergeastapov@gmail.com"}],"homepage":"https://github.com/ember-modifier/ember-modifier#readme","bugs":{"url":"https://github.com/ember-modifier/ember-modifier/issues"},"dist":{"shasum":"a6b3bf8b0370be355593276c10a9cb0df8b6d2ce","tarball":"https://registry.npmjs.org/ember-modifier/-/ember-modifier-4.0.0-beta.1-unstable.e12131e.tgz","fileCount":12,"integrity":"sha512-EvwW1K6yCgq+61yjntsbNP7CWBb0vjNB7xlfh6pf3+mKMctDPiObVb873h+cZg8GkSi3DEwGDSojgIsKcrcIgg==","signatures":[{"sig":"MEUCIGU7kwgu/6WOOPMKQLAI+IF7l5k3Umoyqb2BJuUQAxtAAiEAs3Fu4D7MjhxZV6oBwM+5x+KF9eoe7qf3Av5F/ItLkmc=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":25935,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjbHjvACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmom/g//TIC3VSCI96gMsI9T8flPuBWZAan48bYTFMxTwNEDOoE2Nry6\r\nHPxKrtyVwj+3XmzchDyF/O3Yk2Frw7Mtuz29IHfhCbn9yRCiQy66prEY54yM\r\nNi6NzUWscMYkGNk9eLC/QAMl+6p5hWYVAA7RskE63nVRoAlZS9zZZKQghOjd\r\nAJztNfidpkBr0aJTrkpNm5ZIA/zbWw+aoMICQt6ewAXUkRQhzm21LcK/Z0/t\r\nvZrshhH+RIqSYu5yPnuOOXxk7k5ZMHmtdF0VnXHlHalsLkIZ4lIHGjNnbjLt\r\na/DnlQQmljtcr6v8l1WmV4H0HX34jBiUAx56qbetsLF+uGRUlWuNv3ob1yVH\r\n0Wjr2OJ58EQHoVzWlX+xxoWVVOT8jcw/GkdbcLDTJlGuFB2BbvrI1M7xhJNy\r\n/7pkMa9hJjzOAfHz+gsJUCIjXYH/mCKwki8YFhUfze3NhUCE88eJB1u/e0AE\r\nM1grHBVW4Lh0eZInyqSOn1FX49Oo7E4OB/2hw6oanWa4tdqd0rpyRM1pqrtc\r\nU4etC+BDCOPjx1HZxkRM4LsVHP3QwirX8ZJTntEdKfTYn+7FmigG5dk24eTz\r\nKV8h9z0jnD0OarWzfyxIuTUnnaH6xoCeZ5QE/gqNLzuXmcfQHnVAEY3wPGxf\r\nsh7XgPYoZ22lRFHcmXTR3jtFmfuOfY0VZnA=\r\n=IRfv\r\n-----END PGP SIGNATURE-----\r\n"},"ember":{"edition":"octane"},"volta":{"extends":"../package.json"},"readme":"ERROR: No README data found!","engines":{"node":"14.* || 16.* || >= 18"},"exports":{".":"./dist/index.js","./*":"./dist/*","./addon-main.js":"./addon-main.js"},"gitHead":"e12131e711e6078aaaab791a611aee0aeaecc640","scripts":{"lint":"eslint . --cache --ext .ts,.js","test":"echo 'Please refer to test-app for addon tests'","build":"rollup --config","start":"rollup --config --watch","lint:fix":"eslint . --fix --ext .ts,.js","typecheck":"tsc --noEmit","prepublishOnly":"rollup --config"},"_npmUser":{"name":"sergeastapov","email":"sergeastapov@gmail.com"},"repository":{"url":"git+https://github.com/ember-modifier/ember-modifier.git","type":"git"},"_npmVersion":"8.19.3","description":"A library for writing Ember modifiers","directories":{"doc":"doc","test":"tests"},"ember-addon":{"main":"addon-main.js","type":"addon","version":2},"_nodeVersion":"14.20.1","dependencies":{"@embroider/addon-shim":"^1.7.1","ember-cli-string-utils":"^1.1.0","ember-cli-normalize-entity-name":"^1.0.0"},"publishConfig":{"registry":"https://registry.npmjs.org"},"typesVersions":{"*":{"*":["./dist/*"],".":["./dist/index.d.ts"],"./-private/signature":["./dist/-private/signature.d.ts"]}},"_hasShrinkwrap":false,"devDependencies":{"tslib":"^2.4.0","eslint":"^8.15.0","rollup":"^2.74.1","prettier":"^2.4.1","typescript":"^4.8.4","@babel/core":"^7.20.2","@types/rsvp":"^4.0.4","expect-type":"^0.13.0","@types/qunit":"^2.19.3","rollup-plugin-ts":"^3.0.2","@types/ember-qunit":"~5.0.2","eslint-plugin-node":"^11.1.0","@types/ember__debug":"~4.0.1","eslint-plugin-ember":"^10.6.1","@babel/eslint-parser":"^7.15.8","@embroider/addon-dev":"^1.7.1","@rollup/plugin-babel":"^5.3.1","@types/ember-resolver":"^5.0.11","@types/ember__modifier":"~4.0.2","eslint-config-prettier":"^8.3.0","eslint-plugin-prettier":"^4.0.0","@babel/preset-typescript":"^7.17.12","@types/ember__destroyable":"~4.0.0","@typescript-eslint/parser":"^5.26.0","@types/ember__test-helpers":"^2.0.2","ember-destroyable-polyfill":"^2.0.3","@typescript-eslint/eslint-plugin":"^5.26.0","@babel/plugin-proposal-decorators":"^7.17.12","@babel/plugin-proposal-class-properties":"^7.17.12"},"peerDependencies":{"ember-source":"*"},"peerDependenciesMeta":{"ember-source":{"optional":true}},"_npmOperationalInternal":{"tmp":"tmp/ember-modifier_4.0.0-beta.1-unstable.e12131e_1668053231523_0.3579733393737956","host":"s3://npm-registry-packages"}},"4.0.0-beta.1-unstable.4f9046a":{"name":"ember-modifier","version":"4.0.0-beta.1-unstable.4f9046a","keywords":["ember-addon"],"author":"","license":"MIT","_id":"ember-modifier@4.0.0-beta.1-unstable.4f9046a","maintainers":[{"name":"rwjblue","email":"me@rwjblue.com"},{"name":"chriskrycho","email":"chris@chriskrycho.com"},{"name":"pzuraq","email":"opensource@pzuraq.com"},{"name":"sergeastapov","email":"sergeastapov@gmail.com"}],"homepage":"https://github.com/ember-modifier/ember-modifier#readme","bugs":{"url":"https://github.com/ember-modifier/ember-modifier/issues"},"dist":{"shasum":"ba73c5831655c59578457e9031131e807103f15f","tarball":"https://registry.npmjs.org/ember-modifier/-/ember-modifier-4.0.0-beta.1-unstable.4f9046a.tgz","fileCount":12,"integrity":"sha512-mVPeg578aM630WOLJnxTUiKtxDyyHUhc2BTuzL8n2eKagg24tQqcHvd1WoBj/HXGFnCNrfDPU3spAqzw0RBjpw==","signatures":[{"sig":"MEUCIGdp4XXG3trtUV6rY49eZXDFY/0j0AJjHU8Mu3C8S/GeAiEA3q8y9DtiGaZcyOIB5ifiocZLdcvopf8p8H9jonwvT0w=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":25934,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjbOnAACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpIPBAAlH/Cd2uOcDCwFBBe9AxlN4bMHmkBDuN31PkHcXEvcZFB/Wwg\r\nd5NTJLlpFGhgT/BuyX+Rlts6u8nMj+9MWrwsAgofeyVEWrfT7rdcVByawnfk\r\nMdJjhrauepWGBoJOse0An6LX8pzO9Z+PxIT61c4a7Db8vqtR2mu5WquKtJDn\r\nNnTKTAvJbNh2uJYd2b84iyZIoUk3RpyAXPXOlaioGOQvpBU9mdmpigbxqVq1\r\nEufxbcc5ZGDZUB73+mFmtWNtdSX/224/nCBOFejgip0j5sf2umoGI9yzdq1m\r\nL1lw5YTabhE5w0pMKU8XbvXSv6kRkimY++Mrt7p2ohbtSkPorwYfqCBOe6yP\r\nozlGgGS9qM1Ge2z55T7ekSvm+eUAd8/f1zSsYAZzAbm19SnMaxNtuP/+MPSv\r\nBoOeNsMVKEnqwcPuZivPrZFCZAAQ+d9CEpxSHzCmVWnPj/GJsFhWbexzkmaY\r\nBudi8XNb1jzOgZgdWZOG7IVwCVUps84TZ+Hs4flCGgaQmS8ca0rOSLHWeuwl\r\nJbulIanxXikm/P331HSuk3wIQal0e5efz/znlTzSpPJAdi1cFG0okZJPDmHi\r\nOqrWEtKXbSidoVq95+kmclQYskr9LrjPJdpUbMPIT9I3jf0IlxPfbA8f3ZiO\r\nM/bGN+2U5rcp9pa3HcTO0JB2PxHIkdV7WZU=\r\n=EG/w\r\n-----END PGP SIGNATURE-----\r\n"},"ember":{"edition":"octane"},"volta":{"extends":"../package.json"},"readme":"ERROR: No README data found!","engines":{"node":"14.* || 16.* || >= 18"},"exports":{".":"./dist/index.js","./*":"./dist/*","./addon-main.js":"./addon-main.js"},"gitHead":"4f9046ab03fb233d175212483a5bf68a1cc17908","scripts":{"lint":"eslint . --cache --ext .ts,.js","test":"echo 'Please refer to test-app for addon tests'","build":"rollup --config","start":"rollup --config --watch","lint:fix":"eslint . --fix --ext .ts,.js","typecheck":"tsc --noEmit","prepublishOnly":"rollup --config"},"_npmUser":{"name":"sergeastapov","email":"sergeastapov@gmail.com"},"repository":{"url":"git+https://github.com/ember-modifier/ember-modifier.git","type":"git"},"_npmVersion":"8.19.3","description":"A library for writing Ember modifiers","directories":{"doc":"doc","test":"tests"},"ember-addon":{"main":"addon-main.js","type":"addon","version":2},"_nodeVersion":"14.20.1","dependencies":{"@embroider/addon-shim":"^1.7.1","ember-cli-string-utils":"^1.1.0","ember-cli-normalize-entity-name":"^1.0.0"},"publishConfig":{"registry":"https://registry.npmjs.org"},"typesVersions":{"*":{"*":["./dist/*"],".":["./dist/index.d.ts"],"./-private/signature":["./dist/-private/signature.d.ts"]}},"_hasShrinkwrap":false,"devDependencies":{"tslib":"^2.4.0","eslint":"^8.15.0","rollup":"^2.74.1","prettier":"^2.4.1","typescript":"^4.8.4","@babel/core":"^7.20.2","@types/rsvp":"^4.0.4","expect-type":"^0.13.0","@types/qunit":"^2.19.3","rollup-plugin-ts":"^3.0.2","@types/ember-qunit":"~5.0.2","eslint-plugin-node":"^11.1.0","@types/ember__debug":"~4.0.1","eslint-plugin-ember":"^10.6.1","@babel/eslint-parser":"^7.15.8","@embroider/addon-dev":"^1.7.1","@rollup/plugin-babel":"^5.3.1","@types/ember-resolver":"^5.0.11","@types/ember__modifier":"~4.0.2","eslint-config-prettier":"^8.3.0","eslint-plugin-prettier":"^4.0.0","@babel/preset-typescript":"^7.17.12","@types/ember__destroyable":"~4.0.1","@typescript-eslint/parser":"^5.26.0","@types/ember__test-helpers":"^2.0.2","ember-destroyable-polyfill":"^2.0.3","@typescript-eslint/eslint-plugin":"^5.26.0","@babel/plugin-proposal-decorators":"^7.17.12","@babel/plugin-proposal-class-properties":"^7.17.12"},"peerDependencies":{"ember-source":"*"},"peerDependenciesMeta":{"ember-source":{"optional":true}},"_npmOperationalInternal":{"tmp":"tmp/ember-modifier_4.0.0-beta.1-unstable.4f9046a_1668082112395_0.7244499727125902","host":"s3://npm-registry-packages"}},"4.0.0-beta.1-unstable.958eb4a":{"name":"ember-modifier","version":"4.0.0-beta.1-unstable.958eb4a","keywords":["ember-addon"],"author":"","license":"MIT","_id":"ember-modifier@4.0.0-beta.1-unstable.958eb4a","maintainers":[{"name":"rwjblue","email":"me@rwjblue.com"},{"name":"chriskrycho","email":"chris@chriskrycho.com"},{"name":"pzuraq","email":"opensource@pzuraq.com"},{"name":"sergeastapov","email":"sergeastapov@gmail.com"}],"homepage":"https://github.com/ember-modifier/ember-modifier#readme","bugs":{"url":"https://github.com/ember-modifier/ember-modifier/issues"},"dist":{"shasum":"f6047185d26d0664813834c1fe14496682cd50d0","tarball":"https://registry.npmjs.org/ember-modifier/-/ember-modifier-4.0.0-beta.1-unstable.958eb4a.tgz","fileCount":12,"integrity":"sha512-fHvlaWeX8irCWt9BSokqttTlruXHFEurRMzknBcwcrB8CX23xGe3yOVhBGIFY7hZtbxREj0bhcrHF2FcTrrz0A==","signatures":[{"sig":"MEUCIQC8nvaEvq/YrYHJY35IZZ4Dz5wOTFVayRrQJhznkvze9gIgF05CZDuK1Fy/vb029/HrUF3EyCVcmPGkromJqcvkl7I=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":25934,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjblQBACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmoYhBAApST5jB+FSAbGXCbuPsatva3mFLnrk4MHC7kqwScLlUvZCakw\r\n6HdoQRTXOr42IWRnKpBLJ+QsD/D3+CqEuh1RgNrQrpU7h5pz9WBX0WKbp5uY\r\nl/tXAVociDhFEpqFR95k6LSDYlsVQvkUpz2D3fDEufmEgifhYITRcv7rGTu6\r\n2qx0i85rkZ+p6SFl3DiSTxal8XOCj5D9J1ReoJSUssB0uAdIjeiLmPB7S2EN\r\nZwFhbrplt+fav4UWw8PO9wd2ZvkHExEEdHKGlWDV7nVoFMEMZ4VlFuwxZBSN\r\nmymd6+EpBWyFr3v4kSSleS6mklLzQs2pWDHkoeaMIDkWNUcLpWfsr9nTBpLS\r\nsPQ12g1PIY/v00CJITu6xbZZW/stgD2vNTgEfPMAlaLNXfNqdZhNkcdmCD+F\r\nCnxhXeDAhH0AXjH0z3lK4SHDBk3TBsAPqb4hYjsDh3iw29TGrI2PurQXEK/U\r\nArRVXCRaqiuqagrv/f698WwqNKeDfHNzGhQ/IuLheWQdfrGCcjYbXWlVBnkk\r\nnzWSCXaVCcSBes2kWhEPcTEO8+qUgogJiZxp2Sh69yrAnDpbBSj46fmE7jUL\r\nHItDi8Gzi4bNgyYZgCmVlkzvK5Y3DP7A+3IW9bN8GltA1hu21zJLv+YImm3m\r\nO97zl+MnWsHhr5FA/89Aty1vtyErz3kntws=\r\n=n80k\r\n-----END PGP SIGNATURE-----\r\n"},"ember":{"edition":"octane"},"volta":{"extends":"../package.json"},"readme":"ERROR: No README data found!","engines":{"node":"14.* || 16.* || >= 18"},"exports":{".":"./dist/index.js","./*":"./dist/*","./addon-main.js":"./addon-main.js"},"gitHead":"958eb4a9dd9c7fe5ca800ea7a728e87508705232","scripts":{"lint":"eslint . --cache --ext .ts,.js","test":"echo 'Please refer to test-app for addon tests'","build":"rollup --config","start":"rollup --config --watch","lint:fix":"eslint . --fix --ext .ts,.js","typecheck":"tsc --noEmit","prepublishOnly":"rollup --config"},"_npmUser":{"name":"sergeastapov","email":"sergeastapov@gmail.com"},"repository":{"url":"git+https://github.com/ember-modifier/ember-modifier.git","type":"git"},"_npmVersion":"8.19.3","description":"A library for writing Ember modifiers","directories":{"doc":"doc","test":"tests"},"ember-addon":{"main":"addon-main.js","type":"addon","version":2},"_nodeVersion":"14.20.1","dependencies":{"@embroider/addon-shim":"^1.7.1","ember-cli-string-utils":"^1.1.0","ember-cli-normalize-entity-name":"^1.0.0"},"publishConfig":{"registry":"https://registry.npmjs.org"},"typesVersions":{"*":{"*":["./dist/*"],".":["./dist/index.d.ts"],"./-private/signature":["./dist/-private/signature.d.ts"]}},"_hasShrinkwrap":false,"devDependencies":{"tslib":"^2.4.1","eslint":"^8.27.0","rollup":"^2.74.1","prettier":"^2.4.1","typescript":"^4.8.4","@babel/core":"^7.20.2","@types/rsvp":"^4.0.4","expect-type":"^0.13.0","@types/qunit":"^2.19.3","rollup-plugin-ts":"^3.0.2","@types/ember-qunit":"~5.0.2","eslint-plugin-node":"^11.1.0","@types/ember__debug":"~4.0.1","eslint-plugin-ember":"^10.6.1","@babel/eslint-parser":"^7.15.8","@embroider/addon-dev":"^1.7.1","@rollup/plugin-babel":"^5.3.1","@types/ember-resolver":"^5.0.11","@types/ember__modifier":"~4.0.2","eslint-config-prettier":"^8.3.0","eslint-plugin-prettier":"^4.0.0","@babel/preset-typescript":"^7.17.12","@types/ember__destroyable":"~4.0.1","@typescript-eslint/parser":"^5.26.0","@types/ember__test-helpers":"^2.0.2","ember-destroyable-polyfill":"^2.0.3","@typescript-eslint/eslint-plugin":"^5.26.0","@babel/plugin-proposal-decorators":"^7.20.2","@babel/plugin-proposal-class-properties":"^7.17.12"},"peerDependencies":{"ember-source":"*"},"peerDependenciesMeta":{"ember-source":{"optional":true}},"_npmOperationalInternal":{"tmp":"tmp/ember-modifier_4.0.0-beta.1-unstable.958eb4a_1668174849340_0.9707993727566009","host":"s3://npm-registry-packages"}},"4.0.0-beta.1-unstable.782c457":{"name":"ember-modifier","version":"4.0.0-beta.1-unstable.782c457","keywords":["ember-addon"],"author":"","license":"MIT","_id":"ember-modifier@4.0.0-beta.1-unstable.782c457","maintainers":[{"name":"rwjblue","email":"me@rwjblue.com"},{"name":"chriskrycho","email":"chris@chriskrycho.com"},{"name":"pzuraq","email":"opensource@pzuraq.com"},{"name":"sergeastapov","email":"sergeastapov@gmail.com"}],"homepage":"https://github.com/ember-modifier/ember-modifier#readme","bugs":{"url":"https://github.com/ember-modifier/ember-modifier/issues"},"dist":{"shasum":"e9b1fb04bf70e305f65b78382a22cd3a772aa7f2","tarball":"https://registry.npmjs.org/ember-modifier/-/ember-modifier-4.0.0-beta.1-unstable.782c457.tgz","fileCount":12,"integrity":"sha512-eYb1WxnpeEI2ALASVoXpDc7h5UTE/gRfFu9GPqZ0k3UCdEoJzRiVjkEgeeP5RuQEi8hmhrGQLD/ngDtc8VP9ig==","signatures":[{"sig":"MEYCIQC+tnSqURdKe1Xk9icbeEr4/X6axch44mY9S+/d722pAAIhANsZgtqJyeBSKbHVy+KBsPFipSo/eZUdket0IiwiugAv","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":25934,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjccboACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmoMnQ/9FefJVNSkCPhjUTmIjfqXa0JY5KiZYmF2DC6CdBfXhPVMP13f\r\nmfWuD0cWbb5jc/o+EGDD/dX2oxDAZPD4v/taaHIUgtwylZspvM3UftDW5jaD\r\nAYC74V2U1qSA7yLMFhecTHEh7mPF9u/O0DfSP3SXeG+5F0v/CrY3lGLmdLmu\r\n6b9E9uwQY+DewfoyY+G9pKu4yJCzZPcHlW6P5TdOZ8tIKsZPCPwlmA2PMduq\r\nd4O3iBiIIHRdB4ac+AHNE7/7XBZQCKnwCFU/HGOX8cAdz25lukGvJ7Ek03L0\r\nqeqlvGxsrWWPiF+S3JwMmB4Nzg4Olrjw9dXEEJ6nKVsOJwbEQgZoLTpHOQbA\r\n2gRsybEI8M6uScFX8S21//IaSZ0Jxo8p3NuCectVPUijG8LO839k35fVWKpa\r\nTPqyyyCXEpIVbU1xqOpSenv/BNMYIzMGdRc3J2e+Y+snVeGMk8Urapjt3AoA\r\nSqtVqN6b6dcqN793/0W4YOhNjLogNeHBeA9eMNSxrBoK2Vmoqt271D9JSa7B\r\n1q/mCm1zBZGfa4lX9aZED4snzCKWx6zga69AkrIe+oc//d7ZBXwv7N0r6JZU\r\nFKYu0vaU+oeBHyo3D6cMa4KWcf9nru6xmMkGE4O40bZVE/t51KBFI9xjYAqj\r\nEhswm+4Cn4qcNX6yL0T3bZGVnh3ZV96MGHM=\r\n=cKyk\r\n-----END PGP SIGNATURE-----\r\n"},"ember":{"edition":"octane"},"volta":{"extends":"../package.json"},"readme":"ERROR: No README data found!","engines":{"node":"14.* || 16.* || >= 18"},"exports":{".":"./dist/index.js","./*":"./dist/*","./addon-main.js":"./addon-main.js"},"gitHead":"782c457920bd0fd146d953191c118c9d6f992f94","scripts":{"lint":"eslint . --cache --ext .ts,.js","test":"echo 'Please refer to test-app for addon tests'","build":"rollup --config","start":"rollup --config --watch","lint:fix":"eslint . --fix --ext .ts,.js","typecheck":"tsc --noEmit","prepublishOnly":"rollup --config"},"_npmUser":{"name":"sergeastapov","email":"sergeastapov@gmail.com"},"repository":{"url":"git+https://github.com/ember-modifier/ember-modifier.git","type":"git"},"_npmVersion":"8.19.3","description":"A library for writing Ember modifiers","directories":{"doc":"doc","test":"tests"},"ember-addon":{"main":"addon-main.js","type":"addon","version":2},"_nodeVersion":"14.20.1","dependencies":{"@embroider/addon-shim":"^1.7.1","ember-cli-string-utils":"^1.1.0","ember-cli-normalize-entity-name":"^1.0.0"},"publishConfig":{"registry":"https://registry.npmjs.org"},"typesVersions":{"*":{"*":["./dist/*"],".":["./dist/index.d.ts"],"./-private/signature":["./dist/-private/signature.d.ts"]}},"_hasShrinkwrap":false,"devDependencies":{"tslib":"^2.4.1","eslint":"^8.27.0","rollup":"^2.74.1","prettier":"^2.4.1","typescript":"^4.8.4","@babel/core":"^7.20.2","@types/rsvp":"^4.0.4","expect-type":"^0.13.0","@types/qunit":"^2.19.3","rollup-plugin-ts":"^3.0.2","@types/ember-qunit":"~5.0.2","eslint-plugin-node":"^11.1.0","@types/ember__debug":"~4.0.1","eslint-plugin-ember":"^10.6.1","@babel/eslint-parser":"^7.15.8","@embroider/addon-dev":"^1.7.1","@rollup/plugin-babel":"^5.3.1","@types/ember-resolver":"^5.0.11","@types/ember__modifier":"~4.0.3","eslint-config-prettier":"^8.3.0","eslint-plugin-prettier":"^4.0.0","@babel/preset-typescript":"^7.17.12","@types/ember__destroyable":"~4.0.1","@typescript-eslint/parser":"^5.26.0","@types/ember__test-helpers":"^2.0.2","ember-destroyable-polyfill":"^2.0.3","@typescript-eslint/eslint-plugin":"^5.26.0","@babel/plugin-proposal-decorators":"^7.20.2","@babel/plugin-proposal-class-properties":"^7.17.12"},"peerDependencies":{"ember-source":"*"},"peerDependenciesMeta":{"ember-source":{"optional":true}},"_npmOperationalInternal":{"tmp":"tmp/ember-modifier_4.0.0-beta.1-unstable.782c457_1668400872129_0.4323688843408724","host":"s3://npm-registry-packages"}},"4.0.0-beta.1-unstable.0519b2e":{"name":"ember-modifier","version":"4.0.0-beta.1-unstable.0519b2e","keywords":["ember-addon"],"author":"","license":"MIT","_id":"ember-modifier@4.0.0-beta.1-unstable.0519b2e","maintainers":[{"name":"rwjblue","email":"me@rwjblue.com"},{"name":"chriskrycho","email":"chris@chriskrycho.com"},{"name":"pzuraq","email":"opensource@pzuraq.com"},{"name":"sergeastapov","email":"sergeastapov@gmail.com"}],"homepage":"https://github.com/ember-modifier/ember-modifier#readme","bugs":{"url":"https://github.com/ember-modifier/ember-modifier/issues"},"dist":{"shasum":"d6fcf69937467c082155687812f091700ce0ca5d","tarball":"https://registry.npmjs.org/ember-modifier/-/ember-modifier-4.0.0-beta.1-unstable.0519b2e.tgz","fileCount":12,"integrity":"sha512-BMuJfK9T9VxQu5PpOA3T01s0/+YbQV1LJlqxUvph8NiSwdPYfQYSwNDgTkg7xSBYcvDEZ3WFc4CcABMOmsvtdg==","signatures":[{"sig":"MEQCIEXK+Tx5ERIhVD62+ugIvv0FNR6l6cSqSrXPLqTM7sXAAiAPvfq202t5uufgs2gYd2VaTEo3ee22HwVHKxxoP8AzpQ==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":25934,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjc4luACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqOaQ//fi2ZsDsgQgaLRebdo8L/pnLtqAfQsGpdVHiO7pj5saY2GEpa\r\nEnzujxpYpETERs/Wsdh3pJZJT8O7NBS0EOVzSWUkN3LgoZjPjO/WNZxzIZ8y\r\nsLxPUg2eyuuvJn7j6VOjeB786DzT1sNrjIVZl2DV2SRREJIIG/tmmoSnk6Vo\r\nCaoxXreaMOgozp2amgEXsHp2l3k64ThuaVlvmjjkAfw8DKqhofnIhukgkUsz\r\n16CFtPuCGYTvkej4GhwdqzSpVxHPNbpPtiWdgSsP/YphCj+9MNcc/++VLU9I\r\nrJKgTszkWcRdeUQ4hBMQEawIl+rAnWGXLSYu6cWVAutMhjS4hoZFjY7WwyHV\r\nIKC4KHyORChYKJ5stZD9NeIgkyOjdRCztbJccn+wziMYZtm+w8jCg+m769tD\r\nGlTzWJ3SVylbCgeMy4+SIFbUT1iRnHPdQGPRtWSOKcZbWyZ/9aIjvox2Z5XQ\r\nhYvGJ1e4r4texVaFqwGFJZiWgoNgXVWZjCBCRfkpkcTLRxIv6GjwY44uR0c6\r\neoeQ1ft4ChMwvpj08Ndt7bGand8mbcOfK3sIlPGYqAQzUdeH/AxThdf43RuJ\r\n5St2dQtc/1f0VLV55DT8Xm+WY17f13w9qPTKR1FG4AnDapZdO0XPEX11aAcx\r\nIKpOkTna0TDCxtWjDumhUX9fWefWrtGBaas=\r\n=QypL\r\n-----END PGP SIGNATURE-----\r\n"},"ember":{"edition":"octane"},"volta":{"extends":"../package.json"},"readme":"ERROR: No README data found!","engines":{"node":"14.* || 16.* || >= 18"},"exports":{".":"./dist/index.js","./*":"./dist/*","./addon-main.js":"./addon-main.js"},"gitHead":"0519b2ea5fa86a1bde7d010897d050b75e891b4d","scripts":{"lint":"eslint . --cache --ext .ts,.js","test":"echo 'Please refer to test-app for addon tests'","build":"rollup --config","start":"rollup --config --watch","lint:fix":"eslint . --fix --ext .ts,.js","typecheck":"tsc --noEmit","prepublishOnly":"rollup --config"},"_npmUser":{"name":"sergeastapov","email":"sergeastapov@gmail.com"},"repository":{"url":"git+https://github.com/ember-modifier/ember-modifier.git","type":"git"},"_npmVersion":"8.19.3","description":"A library for writing Ember modifiers","directories":{"doc":"doc","test":"tests"},"ember-addon":{"main":"addon-main.js","type":"addon","version":2},"_nodeVersion":"14.20.1","dependencies":{"@embroider/addon-shim":"^1.7.1","ember-cli-string-utils":"^1.1.0","ember-cli-normalize-entity-name":"^1.0.0"},"publishConfig":{"registry":"https://registry.npmjs.org"},"typesVersions":{"*":{"*":["./dist/*"],".":["./dist/index.d.ts"],"./-private/signature":["./dist/-private/signature.d.ts"]}},"_hasShrinkwrap":false,"devDependencies":{"tslib":"^2.4.1","eslint":"^8.27.0","rollup":"^2.74.1","prettier":"^2.4.1","typescript":"^4.8.4","@babel/core":"^7.20.2","@types/rsvp":"^4.0.4","expect-type":"^0.13.0","@types/qunit":"^2.19.3","rollup-plugin-ts":"^3.0.2","@types/ember-qunit":"~5.0.2","eslint-plugin-node":"^11.1.0","@types/ember__debug":"~4.0.1","eslint-plugin-ember":"^10.6.1","@babel/eslint-parser":"^7.15.8","@embroider/addon-dev":"^1.7.1","@rollup/plugin-babel":"^5.3.1","@types/ember-resolver":"^5.0.11","@types/ember__modifier":"~4.0.3","eslint-config-prettier":"^8.3.0","eslint-plugin-prettier":"^4.0.0","@babel/preset-typescript":"^7.17.12","@types/ember__destroyable":"~4.0.1","@typescript-eslint/parser":"^5.26.0","@types/ember__test-helpers":"^2.0.2","ember-destroyable-polyfill":"^2.0.3","@typescript-eslint/eslint-plugin":"^5.26.0","@babel/plugin-proposal-decorators":"^7.20.2","@babel/plugin-proposal-class-properties":"^7.17.12"},"peerDependencies":{"ember-source":"*"},"peerDependenciesMeta":{"ember-source":{"optional":true}},"_npmOperationalInternal":{"tmp":"tmp/ember-modifier_4.0.0-beta.1-unstable.0519b2e_1668516206166_0.47492669330019277","host":"s3://npm-registry-packages"}},"4.0.0-beta.1-unstable.4ff97cc":{"name":"ember-modifier","version":"4.0.0-beta.1-unstable.4ff97cc","keywords":["ember-addon"],"author":"","license":"MIT","_id":"ember-modifier@4.0.0-beta.1-unstable.4ff97cc","maintainers":[{"name":"rwjblue","email":"me@rwjblue.com"},{"name":"chriskrycho","email":"chris@chriskrycho.com"},{"name":"pzuraq","email":"opensource@pzuraq.com"},{"name":"sergeastapov","email":"sergeastapov@gmail.com"}],"homepage":"https://github.com/ember-modifier/ember-modifier#readme","bugs":{"url":"https://github.com/ember-modifier/ember-modifier/issues"},"dist":{"shasum":"4f06d32991b90f64b4dbb819465a7b710d5a1054","tarball":"https://registry.npmjs.org/ember-modifier/-/ember-modifier-4.0.0-beta.1-unstable.4ff97cc.tgz","fileCount":12,"integrity":"sha512-Q9adRn2pwWKHY+UN7mpv9nQXaDh/LuVRl/X9kMcWCNGDDqdOcKMmT6jSqZcH3va982HtwP8MW3Ddh/1rbSOuMQ==","signatures":[{"sig":"MEUCIAFKIj22fw04WgHqqoIFXuVRnsLyf4YZsxp0N3ZWIulyAiEAip2SMP3pv5zW857Xrh0pqZMGliZ1COnbDMYZG21gCPM=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":25934,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjc4mgACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpWgw/9GSgkw1phwHXMPWfEsB+5sn1NzbOZsrN1V0Fwu+0/iBoT+en8\r\n7vxBRaG5aGxPv4M0xcF3DxKD2kBYoENWRhoOD4+qf/QUN2N44lJ3Vcexbj7n\r\nxnKfZCUx+tQZ7RPjRtoMLAHXq5Ae2MsF5b822VRzySdrlGujeNvzEosscolV\r\nkq5Sme6VM4G7OnwtpeBJfsk4hGJUj7DasMlKsYEsV2LAr+N2WlqsiFakSEp0\r\nvVE49qznYx8YL30xL9g6qcrdKYAMZDxPsgmG7OJyfjnLRX5STsH2Xqcm03o+\r\nkE9LFjTMMlXT0TLTDzLdIexTwtAbYm0pBY81UycuOiP1hLm6y4TQKdlOxcvE\r\ncGL4m7S9ZGyCA0m0XD9m9RVP9D7ZA49oG9iyrESQRUc/pefWd2fi61JAm6Hh\r\n/3E56j9mUFVEAQljEVPYZ0zZcGAAqXDmkVrZTHxDy9EMmAb428qjbKt6NF8g\r\nhtRjz39KuReyLrD8lBAzJfZEcPVeJqZIFTOVXWMgasVMt/rDxOjCk2tM3nzv\r\n0iJgVNvVLPKv0lDvQlgrulB6NIgJ52vdmAnJRJcSsDa09kDT6xqmH2QmkXiF\r\nBo9Vlbm1g9VEFLfJSb5yUcQsFhvhemAH8c+CaN8BXhhnQlC7Vc0qUCJSCA4k\r\npnxOvDtyglbh9qZOoB2PUCV53iEFMiSaYxU=\r\n=uEqh\r\n-----END PGP SIGNATURE-----\r\n"},"ember":{"edition":"octane"},"volta":{"extends":"../package.json"},"readme":"ERROR: No README data found!","engines":{"node":"14.* || 16.* || >= 18"},"exports":{".":"./dist/index.js","./*":"./dist/*","./addon-main.js":"./addon-main.js"},"gitHead":"4ff97ccd3ccb82048d302102613b335d334e70fc","scripts":{"lint":"eslint . --cache --ext .ts,.js","test":"echo 'Please refer to test-app for addon tests'","build":"rollup --config","start":"rollup --config --watch","lint:fix":"eslint . --fix --ext .ts,.js","typecheck":"tsc --noEmit","prepublishOnly":"rollup --config"},"_npmUser":{"name":"sergeastapov","email":"sergeastapov@gmail.com"},"repository":{"url":"git+https://github.com/ember-modifier/ember-modifier.git","type":"git"},"_npmVersion":"8.19.3","description":"A library for writing Ember modifiers","directories":{"doc":"doc","test":"tests"},"ember-addon":{"main":"addon-main.js","type":"addon","version":2},"_nodeVersion":"14.20.1","dependencies":{"@embroider/addon-shim":"^1.7.1","ember-cli-string-utils":"^1.1.0","ember-cli-normalize-entity-name":"^1.0.0"},"publishConfig":{"registry":"https://registry.npmjs.org"},"typesVersions":{"*":{"*":["./dist/*"],".":["./dist/index.d.ts"],"./-private/signature":["./dist/-private/signature.d.ts"]}},"_hasShrinkwrap":false,"devDependencies":{"tslib":"^2.4.1","eslint":"^8.27.0","rollup":"^2.74.1","prettier":"^2.4.1","typescript":"^4.8.4","@babel/core":"^7.20.2","@types/rsvp":"^4.0.4","expect-type":"^0.15.0","@types/qunit":"^2.19.3","rollup-plugin-ts":"^3.0.2","@types/ember-qunit":"~5.0.2","eslint-plugin-node":"^11.1.0","@types/ember__debug":"~4.0.1","eslint-plugin-ember":"^10.6.1","@babel/eslint-parser":"^7.15.8","@embroider/addon-dev":"^1.7.1","@rollup/plugin-babel":"^5.3.1","@types/ember-resolver":"^5.0.11","@types/ember__modifier":"~4.0.3","eslint-config-prettier":"^8.3.0","eslint-plugin-prettier":"^4.0.0","@babel/preset-typescript":"^7.17.12","@types/ember__destroyable":"~4.0.1","@typescript-eslint/parser":"^5.26.0","@types/ember__test-helpers":"^2.0.2","ember-destroyable-polyfill":"^2.0.3","@typescript-eslint/eslint-plugin":"^5.26.0","@babel/plugin-proposal-decorators":"^7.20.2","@babel/plugin-proposal-class-properties":"^7.17.12"},"peerDependencies":{"ember-source":"*"},"peerDependenciesMeta":{"ember-source":{"optional":true}},"_npmOperationalInternal":{"tmp":"tmp/ember-modifier_4.0.0-beta.1-unstable.4ff97cc_1668516256181_0.9475826765163349","host":"s3://npm-registry-packages"}},"4.0.0-beta.1-unstable.a3dc543":{"name":"ember-modifier","version":"4.0.0-beta.1-unstable.a3dc543","keywords":["ember-addon"],"author":"","license":"MIT","_id":"ember-modifier@4.0.0-beta.1-unstable.a3dc543","maintainers":[{"name":"rwjblue","email":"me@rwjblue.com"},{"name":"chriskrycho","email":"chris@chriskrycho.com"},{"name":"pzuraq","email":"opensource@pzuraq.com"},{"name":"sergeastapov","email":"sergeastapov@gmail.com"}],"homepage":"https://github.com/ember-modifier/ember-modifier#readme","bugs":{"url":"https://github.com/ember-modifier/ember-modifier/issues"},"dist":{"shasum":"393c65fe26853bf84dc9c35181f9b9dbac81b090","tarball":"https://registry.npmjs.org/ember-modifier/-/ember-modifier-4.0.0-beta.1-unstable.a3dc543.tgz","fileCount":12,"integrity":"sha512-i+UKIMXNoBEYALSWPBcSZ4ym0Uyx94XVptwUHpw7Iyver5qr0HBdAz+fY+IKGYaoUJR+/4SihNbwLBwHxX9LzQ==","signatures":[{"sig":"MEUCIEJG0ShrygzNhTOnG0XkZmuVcep1OaCfCzuJ/KpA7aK8AiEA6GD0U7YYV+1i3pWVRPN88MoESqqpp8Znd1gqGqNl01s=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":25934,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjc7C9ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpqbQ//Z002AHMKbzk/dHAL4SNnCN1q/jjikQjg3+BN6LWT9lwFwjAE\r\nW/++cTVr3w4tegwLkEzOQeteGl7+JUxfeOUl4j9lZtZ4LoDl1XK66vo0voh3\r\nX4ehvHamImllXTRrG7yJzs4/vpFOSezikCZDQTPIWlMPo6Hca8spiT6itfuB\r\ndmkkryvHkFuef/HDggUAJ2CNBFSUq5AAm3KNcOsZy5PVoqbHvzla01lDaLu2\r\nE7eyCgUbW2HWS2hOg/Fb5OAJBVlEUQmhWWuaPiWWnURlPWOsO97sI14TIAyW\r\n4VFJHKltdRS5nphWeaoNWUcc60KofG8ThMG/y44xZiJ+actSX/e1yD4EA0lr\r\nh5GTcf7i7yoqGfdfj15SuQraNQnACVc25zTFlKvBwZqlIdMAQmiJSdbNKEgE\r\nElmD3FunJGpcQasUzBm4G34ZLRhHncBroMaYmxGUKnUdOIkqfjMuh5cHIa1l\r\nPhqt29irLlWJzUMBMU8dY/FUQqQ67tC8VEt5fXdVFhdlO69naOKE3C3Xtsc3\r\nE0uFAjuhOv2DaqCbBO6FVsz5bJiir/J1CoxkNOs9QvooZUh+j7yNGi5MfokX\r\ntTZ8Ry+9A0PErH/8molpeBaxa/3dAFO2sFvAzx3JSnWjMpCtxD2lp3Io5j4J\r\nj5U/5t4JnrrOT1utWVNopPbPxbiqMLEB0yk=\r\n=1nLF\r\n-----END PGP SIGNATURE-----\r\n"},"ember":{"edition":"octane"},"volta":{"extends":"../package.json"},"readme":"ERROR: No README data found!","engines":{"node":"14.* || 16.* || >= 18"},"exports":{".":"./dist/index.js","./*":"./dist/*","./addon-main.js":"./addon-main.js"},"gitHead":"a3dc5435604f0288c8b81407b85541f2dde84425","scripts":{"lint":"eslint . --cache --ext .ts,.js","test":"echo 'Please refer to test-app for addon tests'","build":"rollup --config","start":"rollup --config --watch","lint:fix":"eslint . --fix --ext .ts,.js","typecheck":"tsc --noEmit","prepublishOnly":"rollup --config"},"_npmUser":{"name":"sergeastapov","email":"sergeastapov@gmail.com"},"repository":{"url":"git+https://github.com/ember-modifier/ember-modifier.git","type":"git"},"_npmVersion":"8.19.3","description":"A library for writing Ember modifiers","directories":{"doc":"doc","test":"tests"},"ember-addon":{"main":"addon-main.js","type":"addon","version":2},"_nodeVersion":"14.20.1","dependencies":{"@embroider/addon-shim":"^1.7.1","ember-cli-string-utils":"^1.1.0","ember-cli-normalize-entity-name":"^1.0.0"},"publishConfig":{"registry":"https://registry.npmjs.org"},"typesVersions":{"*":{"*":["./dist/*"],".":["./dist/index.d.ts"],"./-private/signature":["./dist/-private/signature.d.ts"]}},"_hasShrinkwrap":false,"devDependencies":{"tslib":"^2.4.1","eslint":"^8.27.0","rollup":"^2.74.1","prettier":"^2.4.1","typescript":"^4.8.4","@babel/core":"^7.20.2","@types/rsvp":"^4.0.4","expect-type":"^0.15.0","@types/qunit":"^2.19.3","rollup-plugin-ts":"^3.0.2","@types/ember-qunit":"~5.0.2","eslint-plugin-node":"^11.1.0","@types/ember__debug":"~4.0.1","eslint-plugin-ember":"^10.6.1","@babel/eslint-parser":"^7.15.8","@embroider/addon-dev":"^1.7.1","@rollup/plugin-babel":"^5.3.1","@types/ember-resolver":"^5.0.11","@types/ember__modifier":"~4.0.3","eslint-config-prettier":"^8.3.0","eslint-plugin-prettier":"^4.0.0","@babel/preset-typescript":"^7.17.12","@types/ember__destroyable":"~4.0.1","@typescript-eslint/parser":"^5.43.0","@types/ember__test-helpers":"^2.0.2","ember-destroyable-polyfill":"^2.0.3","@typescript-eslint/eslint-plugin":"^5.26.0","@babel/plugin-proposal-decorators":"^7.20.2","@babel/plugin-proposal-class-properties":"^7.17.12"},"peerDependencies":{"ember-source":"*"},"peerDependenciesMeta":{"ember-source":{"optional":true}},"_npmOperationalInternal":{"tmp":"tmp/ember-modifier_4.0.0-beta.1-unstable.a3dc543_1668526269416_0.23766837940282337","host":"s3://npm-registry-packages"}},"4.0.0-beta.1-unstable.1b3ffd1":{"name":"ember-modifier","version":"4.0.0-beta.1-unstable.1b3ffd1","keywords":["ember-addon"],"author":"","license":"MIT","_id":"ember-modifier@4.0.0-beta.1-unstable.1b3ffd1","maintainers":[{"name":"rwjblue","email":"me@rwjblue.com"},{"name":"chriskrycho","email":"chris@chriskrycho.com"},{"name":"pzuraq","email":"opensource@pzuraq.com"},{"name":"sergeastapov","email":"sergeastapov@gmail.com"}],"homepage":"https://github.com/ember-modifier/ember-modifier#readme","bugs":{"url":"https://github.com/ember-modifier/ember-modifier/issues"},"dist":{"shasum":"47f3f6554cdb8f01c7ed9d3c74684ac2569bab8b","tarball":"https://registry.npmjs.org/ember-modifier/-/ember-modifier-4.0.0-beta.1-unstable.1b3ffd1.tgz","fileCount":15,"integrity":"sha512-dtWS8gd4jDyDslBEE95E2zSe2re+NvNLD0TBHQJ2QV5MLuPs3MrD5RPyhv8/wy+Qk2TeTxFiPZp7LjFTAD5WaA==","signatures":[{"sig":"MEUCIFLWE4r6E64jCmX0n11qj1kNwBl1kus5i6MFgBMaka9RAiEAxwm7qchE5a98JXJQgLJE1nOZcP+P2jEzVmuaz4N6O/I=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":47088,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjc9sQACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmp4zA/+JkBSRRTPS8inUAgjUaS8NvxNFoBHyDGXM4R4JiO/kjL1SPN9\r\naifq33FrpUgdVIvQ5K8Fmr7kwY05/STOIj75A0AVZXVhMZo09Ge1HLZ0e4Zx\r\nOkdfmS/g576sxnECC2kdIX5Y0zoODKhmFA+dmS3OcS7VQ0G8ddZdSnZdpEbX\r\nZcgWTzQ3ljU2LkMTUJfd/6CRPo4j9cj1pq2tQ2c7a11yowQ+fXiIRH1DX30n\r\nPTDzBbr5s1TIEPsmUpJtAZucdGfX9in/rhHLOM6qPZifJoTj3aRIf3NNNFNo\r\ng0LG6+r0iajffHK0TOk3PNw24miZZ9+n3Qgfy+cksGP24Nn8hY9ooZUy2f4c\r\nj+5/Ve4eSuOFzyZcrVWz6Lk0H1jw1dajn8OwJb+Z6EjdxEjRvKrkUOzIH3e0\r\nVgXly2+juCxowWVB2wa9MXBRhPaeKveB6ogKcpGIKWH1sZNaW1MQktdOgxIk\r\noZpIxMHm+lUU/TZtSbHPq+fYt1C5O/BTkkq7GW8nXj2vKkK/yCoR4eCQuTOh\r\ndTuZZU4h7nVZpzSFS/2W2CQnpvZSEwcjpcGRTBbfnA76bloDTMfuEOQEGwPD\r\nM5hMzALlmkwRERj0iCws441yWHehsqj55Z15xcDKXbmWNrUDzrgOOQXfsNgc\r\nFUwgLQmVgjT13CEV3O2d/VSK5/WLs/uip0g=\r\n=CkRe\r\n-----END PGP SIGNATURE-----\r\n"},"ember":{"edition":"octane"},"volta":{"extends":"../package.json"},"readme":"ERROR: No README data found!","engines":{"node":"14.* || 16.* || >= 18"},"exports":{".":"./dist/index.js","./*":"./dist/*","./addon-main.js":"./addon-main.js"},"gitHead":"1b3ffd1908c3d1d5171c8c2b798f7ae5391d7455","scripts":{"lint":"eslint . --cache --ext .ts,.js","test":"echo 'A v2 addon does not have tests, run tests in test-app'","build":"rollup --config","start":"rollup --config --watch","lint:fix":"eslint . --fix --ext .ts,.js","typecheck":"tsc --noEmit","prepublishOnly":"rollup --config"},"_npmUser":{"name":"sergeastapov","email":"sergeastapov@gmail.com"},"repository":{"url":"git+https://github.com/ember-modifier/ember-modifier.git","type":"git"},"_npmVersion":"8.19.3","description":"A library for writing Ember modifiers","directories":{},"ember-addon":{"main":"addon-main.js","type":"addon","version":2,"versionCompatibility":{"ember":"3.24 || >=4.0"}},"_nodeVersion":"14.20.1","dependencies":{"@embroider/addon-shim":"^1.7.1","ember-cli-string-utils":"^1.1.0","ember-cli-normalize-entity-name":"^1.0.0"},"publishConfig":{"registry":"https://registry.npmjs.org"},"typesVersions":{"*":{"*":["./dist/*"],".":["./dist/index.d.ts"],"./-private/signature":["./dist/-private/signature.d.ts"]}},"_hasShrinkwrap":false,"devDependencies":{"eslint":"^8.27.0","rollup":"^3.2.5","prettier":"^2.7.1","typescript":"^4.8.4","@babel/core":"^7.20.2","@types/rsvp":"^4.0.4","expect-type":"^0.15.0","@tsconfig/ember":"^1.0.0","rollup-plugin-ts":"^3.0.2","ember-cli-htmlbars":"^6.1.1","eslint-plugin-node":"^11.1.0","@types/ember__debug":"^4.0.3","@types/ember__owner":"^4.0.2","eslint-plugin-ember":"^11.1.0","@embroider/addon-dev":"^2.0.0","@types/ember-resolver":"^5.0.13","@types/ember__modifier":"^4.0.3","eslint-config-prettier":"^8.5.0","eslint-plugin-prettier":"^4.2.1","@babel/preset-typescript":"^7.18.6","@types/ember__application":"^4.0.4","@types/ember__destroyable":"^4.0.1","@typescript-eslint/parser":"^5.43.0","ember-destroyable-polyfill":"^2.0.3","@babel/plugin-syntax-decorators":"^7.17.0","@typescript-eslint/eslint-plugin":"^5.43.0","@babel/plugin-proposal-decorators":"^7.20.2","@babel/plugin-proposal-class-properties":"^7.18.6"},"peerDependencies":{"ember-source":"*"},"peerDependenciesMeta":{"ember-source":{"optional":true}},"_npmOperationalInternal":{"tmp":"tmp/ember-modifier_4.0.0-beta.1-unstable.1b3ffd1_1668537103935_0.5585787008221852","host":"s3://npm-registry-packages"}},"4.0.0-beta.1-unstable.5f74e60":{"name":"ember-modifier","version":"4.0.0-beta.1-unstable.5f74e60","keywords":["ember-addon"],"author":"","license":"MIT","_id":"ember-modifier@4.0.0-beta.1-unstable.5f74e60","maintainers":[{"name":"rwjblue","email":"me@rwjblue.com"},{"name":"chriskrycho","email":"chris@chriskrycho.com"},{"name":"pzuraq","email":"opensource@pzuraq.com"},{"name":"sergeastapov","email":"sergeastapov@gmail.com"}],"homepage":"https://github.com/ember-modifier/ember-modifier#readme","bugs":{"url":"https://github.com/ember-modifier/ember-modifier/issues"},"dist":{"shasum":"2fa9f6010207f0cd5504a28063859141a58df211","tarball":"https://registry.npmjs.org/ember-modifier/-/ember-modifier-4.0.0-beta.1-unstable.5f74e60.tgz","fileCount":15,"integrity":"sha512-uKvjFC9ZSveMZ8EukRLRspNqmezb5odFm8hbq+RIpS4pwokjZpb0fxHcnAWHxuEQUO7uAZUKqKH2rqCLcuQ6pA==","signatures":[{"sig":"MEUCIQDpapaIWdEJze5SR4ph90igxMLzHbEaNu+dK85bJY30FgIgOoMxGVNdLKkfhDDzpJB6lQicqL93STbLsetL9OknT1k=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":47092,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjdG0KACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqpOBAAinjn5+cMRQM/V0aM4BSmEUkSH3cud/28u0KXwl+XodXGHSsf\r\n+LoXyu2fbSxx9LV3USpEG/Z+W6TgHqROS+EGd42rd5R28eJWdr1Oagr4pROo\r\nh8Yag9qPlKjSSAhwG91rlyN9tg71wFxJCdNAKw0K+VVideZbNo/w4F/KRTG9\r\nZIwM0ZZnimsd49bAANgA9GV4uAD1Vdrq7zOnUob9jLMIv1mIJvG0QQQpMQ1F\r\nOmoE/d+FZI1grE9H3UrAi2rMqBHsZrktmOoSqqU6c+RbdYhMRcWvbbcWMpiO\r\nrovxGpmsfH8MWDQ5x7tbvRNUOSUllteD3ehQuJsv3qUsYV/zfYkRgIjJEwHL\r\n+nV9EpSkz3pFYBLB3sgmcyCdlvBk1Bk6AVeSksHN6PAxGHthpWTYyuTFDvQd\r\nS2j0AkxmQp+9BFp1/GgLoaXaArOIVe5/z461tE5Im6tk9ieejNNT8qUVsFq6\r\ndI2IAAAMwEG/nBxcpn4fH1GPfstIutgDNv4JBthJqzcY/agKN2PDjtBlwAND\r\n+CX52nzG2pnOFufIY80YdrsN6g1rukwURT9PYLkZ/RjDRadFVJ5DJmJVM+eY\r\nbJQZfO2dIsnEw+hio3XWn6XDJP8zYUBacPgcPAz0OOCqRPE549fArG4uglSh\r\nbKvpsNVgkSpCb0hk79fkVbMK/PepAEUdwX8=\r\n=4mQI\r\n-----END PGP SIGNATURE-----\r\n"},"ember":{"edition":"octane"},"volta":{"extends":"../package.json"},"readme":"ERROR: No README data found!","engines":{"node":"14.* || 16.* || >= 18"},"exports":{".":"./dist/index.js","./*":"./dist/*","./addon-main.js":"./addon-main.js"},"gitHead":"5f74e60f0e5fe1bf817ffd1bfb130c1b8eff36a6","scripts":{"lint":"eslint . --cache --ext .ts,.js","test":"echo 'A v2 addon does not have tests, run tests in test-app'","build":"rollup --config","start":"rollup --config --watch","lint:fix":"eslint . --fix --ext .ts,.js","typecheck":"tsc --noEmit","prepublishOnly":"rollup --config"},"_npmUser":{"name":"sergeastapov","email":"sergeastapov@gmail.com"},"repository":{"url":"git+https://github.com/ember-modifier/ember-modifier.git","type":"git"},"_npmVersion":"8.19.3","description":"A library for writing Ember modifiers","directories":{},"ember-addon":{"main":"addon-main.js","type":"addon","version":2,"versionCompatibility":{"ember":"3.24 || >=4.0"}},"_nodeVersion":"14.20.1","dependencies":{"@embroider/addon-shim":"^1.7.1","ember-cli-string-utils":"^1.1.0","ember-cli-normalize-entity-name":"^1.0.0"},"publishConfig":{"registry":"https://registry.npmjs.org"},"typesVersions":{"*":{"*":["./dist/*"],".":["./dist/index.d.ts"],"./-private/signature":["./dist/-private/signature.d.ts"]}},"_hasShrinkwrap":false,"devDependencies":{"eslint":"^8.27.0","rollup":"^3.2.5","prettier":"^2.7.1","typescript":"^4.9.3","@babel/core":"^7.20.2","@types/rsvp":"^4.0.4","expect-type":"^0.15.0","@tsconfig/ember":"^1.0.0","rollup-plugin-ts":"^3.0.2","ember-cli-htmlbars":"^6.1.1","eslint-plugin-node":"^11.1.0","@types/ember__debug":"^4.0.3","@types/ember__owner":"^4.0.2","eslint-plugin-ember":"^11.1.0","@embroider/addon-dev":"^2.0.0","@types/ember-resolver":"^5.0.13","@types/ember__modifier":"^4.0.3","eslint-config-prettier":"^8.5.0","eslint-plugin-prettier":"^4.2.1","@babel/preset-typescript":"^7.18.6","@types/ember__application":"^4.0.4","@types/ember__destroyable":"^4.0.1","@typescript-eslint/parser":"^5.43.0","ember-destroyable-polyfill":"^2.0.3","@babel/plugin-syntax-decorators":"^7.17.0","@typescript-eslint/eslint-plugin":"^5.43.0","@babel/plugin-proposal-decorators":"^7.20.2","@babel/plugin-proposal-class-properties":"^7.18.6"},"peerDependencies":{"ember-source":"*"},"peerDependenciesMeta":{"ember-source":{"optional":true}},"_npmOperationalInternal":{"tmp":"tmp/ember-modifier_4.0.0-beta.1-unstable.5f74e60_1668574474387_0.2441374543197068","host":"s3://npm-registry-packages"}},"4.0.0-beta.1-unstable.782f5e9":{"name":"ember-modifier","version":"4.0.0-beta.1-unstable.782f5e9","keywords":["ember-addon"],"author":"","license":"MIT","_id":"ember-modifier@4.0.0-beta.1-unstable.782f5e9","maintainers":[{"name":"rwjblue","email":"me@rwjblue.com"},{"name":"chriskrycho","email":"chris@chriskrycho.com"},{"name":"pzuraq","email":"opensource@pzuraq.com"},{"name":"sergeastapov","email":"sergeastapov@gmail.com"}],"homepage":"https://github.com/ember-modifier/ember-modifier#readme","bugs":{"url":"https://github.com/ember-modifier/ember-modifier/issues"},"dist":{"shasum":"5771a8a1e349de591e92e9c4e16246c20bc83665","tarball":"https://registry.npmjs.org/ember-modifier/-/ember-modifier-4.0.0-beta.1-unstable.782f5e9.tgz","fileCount":15,"integrity":"sha512-KlEA8wpngVMH3VA+HeDirf2Xw3TLUJwXvqjjp1r6Xz9GS55eEF96Idvpi/CDp24mtTbs2wDSKAT1SN0ZyI2Bbg==","signatures":[{"sig":"MEQCIHA8WTmdlrdeGxPiheXcQyPHKX67zHrmTYr+F7FwY9gvAiAEfCwmYBDEkLY5c8IU0o288oLbqBzJ5T81GngO8bFBUw==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":47092,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjdwmzACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpiIg//R91tirOvGFQdoe2zG2mdCu9eQoFXpEdHF8qMKzAKXKviail9\r\nmJUKrqAaTc+TgWqO1vsGnTYXWq/WjmWiZyXyluV9/6nNF1K44mgRHQFMWB8L\r\neZA718WZ1YxjxpvwXtZO7GqZ261ym5fseEAMbCjxQJdKeNp4+Iu7xykk9N1U\r\nUXJjruWbl5RbehF8ft2TT9SmDJTF6s6Dds4SyHE5rK8ZnNoQ8iKG05u2itAJ\r\ni9qYSCeRcgV2I0+Eot71NPGMSbB7bwOvN4bnr/6Pn5GACgAnR/VqYac2cJVq\r\nm6KjyblXrfeb4w90LhwwgHIn9TQFMVXjVxVaVS1tLq+bhlhyKMj7j4KerMi8\r\nF2drQ0oloueRwAw5DgKBuhEPlY3gSNUZba3a95Hr1CfJS07H0iyScJL7gBO1\r\nIYfMn6oUzULsUEAhk66Mb2kKqnv2/K/cMqPgtb9Q1U88hIZvuEDl9g+MIx1u\r\n0jth0hQZLKCV+jvSCaOHw+1I4fstFWdQzX1Bbxmr0IibXHMZfBeX1iu9nnHL\r\nH6GuL7aZgQVglJ2axYNZBWU8tnzxhO37dRV2lO2w1uJ//T+eauxLVKNLSw6x\r\nFcHv9brnzOh/Vz6WKFmHQ1pNm/MC1vwuyRNTKjide9LcKXxJN2nYrvCDP3Ub\r\nmMTfROBmUKo+vCTbABtGANqY9GGecQQEMQ0=\r\n=SZ7f\r\n-----END PGP SIGNATURE-----\r\n"},"ember":{"edition":"octane"},"volta":{"extends":"../package.json"},"readme":"ERROR: No README data found!","engines":{"node":"14.* || 16.* || >= 18"},"exports":{".":"./dist/index.js","./*":"./dist/*","./addon-main.js":"./addon-main.js"},"gitHead":"782f5e9d79122277cc4149318e9ff964e66d7de2","scripts":{"lint":"eslint . --cache --ext .ts,.js","test":"echo 'A v2 addon does not have tests, run tests in test-app'","build":"rollup --config","start":"rollup --config --watch","lint:fix":"eslint . --fix --ext .ts,.js","typecheck":"tsc --noEmit","prepublishOnly":"rollup --config"},"_npmUser":{"name":"sergeastapov","email":"sergeastapov@gmail.com"},"repository":{"url":"git+https://github.com/ember-modifier/ember-modifier.git","type":"git"},"_npmVersion":"8.19.3","description":"A library for writing Ember modifiers","directories":{},"ember-addon":{"main":"addon-main.js","type":"addon","version":2,"versionCompatibility":{"ember":"3.24 || >=4.0"}},"_nodeVersion":"14.20.1","dependencies":{"@embroider/addon-shim":"^1.7.1","ember-cli-string-utils":"^1.1.0","ember-cli-normalize-entity-name":"^1.0.0"},"publishConfig":{"registry":"https://registry.npmjs.org"},"typesVersions":{"*":{"*":["./dist/*"],".":["./dist/index.d.ts"],"./-private/signature":["./dist/-private/signature.d.ts"]}},"_hasShrinkwrap":false,"devDependencies":{"eslint":"^8.27.0","rollup":"^3.2.5","prettier":"^2.7.1","typescript":"^4.9.3","@babel/core":"^7.20.2","@types/rsvp":"^4.0.4","expect-type":"^0.15.0","@tsconfig/ember":"^1.0.0","rollup-plugin-ts":"^3.0.2","ember-cli-htmlbars":"^6.1.1","eslint-plugin-node":"^11.1.0","@types/ember__debug":"^4.0.3","@types/ember__owner":"^4.0.2","eslint-plugin-ember":"^11.1.0","@embroider/addon-dev":"^2.0.0","@types/ember-resolver":"^5.0.13","@types/ember__modifier":"^4.0.3","eslint-config-prettier":"^8.5.0","eslint-plugin-prettier":"^4.2.1","@babel/preset-typescript":"^7.18.6","@types/ember__application":"^4.0.4","@types/ember__destroyable":"^4.0.1","@typescript-eslint/parser":"^5.43.0","ember-destroyable-polyfill":"^2.0.3","@babel/plugin-syntax-decorators":"^7.17.0","@typescript-eslint/eslint-plugin":"^5.43.0","@babel/plugin-proposal-decorators":"^7.20.2","@babel/plugin-proposal-class-properties":"^7.18.6"},"peerDependencies":{"ember-source":"*"},"peerDependenciesMeta":{"ember-source":{"optional":true}},"_npmOperationalInternal":{"tmp":"tmp/ember-modifier_4.0.0-beta.1-unstable.782f5e9_1668745651191_0.7954168842697062","host":"s3://npm-registry-packages"}},"4.0.0-beta.1-unstable.b931c9f":{"name":"ember-modifier","version":"4.0.0-beta.1-unstable.b931c9f","keywords":["ember-addon"],"author":"","license":"MIT","_id":"ember-modifier@4.0.0-beta.1-unstable.b931c9f","maintainers":[{"name":"rwjblue","email":"me@rwjblue.com"},{"name":"chriskrycho","email":"chris@chriskrycho.com"},{"name":"pzuraq","email":"opensource@pzuraq.com"},{"name":"sergeastapov","email":"sergeastapov@gmail.com"}],"homepage":"https://github.com/ember-modifier/ember-modifier#readme","bugs":{"url":"https://github.com/ember-modifier/ember-modifier/issues"},"dist":{"shasum":"b31d93875365f5fbce5e4e3610c9f3fbdcc48e49","tarball":"https://registry.npmjs.org/ember-modifier/-/ember-modifier-4.0.0-beta.1-unstable.b931c9f.tgz","fileCount":15,"integrity":"sha512-Ulkm/zlzJlVVHI4DqnKbtPQLCdmxNGMqZxHcRnKN968MdmGvBzoEq5fzcxrygI3F8yzyIKoSKMf2JSI4WqqBMA==","signatures":[{"sig":"MEYCIQDEodw+8WNL3OAdO+axF7wlK5sqHB3WC22u0upJfQG6rgIhAK3WZgEuL5rUge3Eu6eA0eaWd/7JP1U1ljOLKSSDvFK6","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":47088,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjfEs3ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpPUw/9Ec2nTg+IrgVOeOPQKG186VkziZk7z+qJtB0+NA+5wWVcnWjT\r\nxEEgRLst1b1uMdGkI87ew1VZLCfroV8JW31TKEcsMQZM8klKRsiLwkycAU2t\r\nWD1q+g6EObv5QBYADgtOMmUgSmzCeYWCKGE0uKKY/KFalt9qWTgi+sXRaQ85\r\nms76Dx7z1xe8oOOgIjJR70zd/4b0UNT0opheYmNVHXOQvr2VLy7LPe+01nuJ\r\n9rjd8xYcNCdxwyOSWf/u7YAUaNQVziEtTx0gUYlrZvE9wO0bOFdYQD0z3CeR\r\nyYjr8ATy9Zd8Cyc25uxsiGH79r+Hi8VinTZwJwI327q3W0coI++V/qGK8u0V\r\n97RH5WCX/8rsYatWhjBYYx/bWxMk9Q9pEbOxc4nqI07cFRNUKWgoxR6Iuw6p\r\neWHSMOvqQ3JUBuu3aWkUMqSXjPkQJOMSqzPbzHqqRaXEol/Q0T1sLhmN3Rp3\r\nxk9NzrFubXetLKmQYpX9uDsq0DfgAxSEuArjcesox2kCtc0D/1ckTcN17F+C\r\niHHaD1BLNfPmbeFrceC1ATuSsicE32G1EJNig1CESUssEn3hwTxNCqN2mBlE\r\n2zfcINXdXge0Ch6OhDqsYZ/+y6vX3mkXDGTEa3wykH5K1EwU208I2zaJzAgQ\r\nBAUrxrIhdi2K+XlDLr6hb6Zw4al5AaLgtZU=\r\n=xR+I\r\n-----END PGP SIGNATURE-----\r\n"},"ember":{"edition":"octane"},"volta":{"extends":"../package.json"},"readme":"ERROR: No README data found!","engines":{"node":"14.* || 16.* || >= 18"},"exports":{".":"./dist/index.js","./*":"./dist/*","./addon-main.js":"./addon-main.js"},"gitHead":"b931c9f7416367fa328d751e3233c4a3ba6421aa","scripts":{"lint":"eslint . --cache --ext .ts,.js","test":"echo 'A v2 addon does not have tests, run tests in test-app'","build":"rollup --config","start":"rollup --config --watch","lint:fix":"eslint . --fix --ext .ts,.js","typecheck":"tsc --noEmit","prepublishOnly":"rollup --config"},"_npmUser":{"name":"sergeastapov","email":"sergeastapov@gmail.com"},"repository":{"url":"git+https://github.com/ember-modifier/ember-modifier.git","type":"git"},"_npmVersion":"8.19.3","description":"A library for writing Ember modifiers","directories":{},"ember-addon":{"main":"addon-main.js","type":"addon","version":2,"versionCompatibility":{"ember":"3.24 || >=4.0"}},"_nodeVersion":"14.20.1","dependencies":{"@embroider/addon-shim":"^1.7.1","ember-cli-string-utils":"^1.1.0","ember-cli-normalize-entity-name":"^1.0.0"},"publishConfig":{"registry":"https://registry.npmjs.org"},"typesVersions":{"*":{"*":["./dist/*"],".":["./dist/index.d.ts"],"./-private/signature":["./dist/-private/signature.d.ts"]}},"_hasShrinkwrap":false,"devDependencies":{"eslint":"^8.28.0","rollup":"^3.2.5","prettier":"^2.7.1","typescript":"^4.9.3","@babel/core":"^7.20.2","@types/rsvp":"^4.0.4","expect-type":"^0.15.0","@tsconfig/ember":"^1.0.0","rollup-plugin-ts":"^3.0.2","ember-cli-htmlbars":"^6.1.1","eslint-plugin-node":"^11.1.0","@types/ember__debug":"^4.0.3","@types/ember__owner":"^4.0.2","eslint-plugin-ember":"^11.1.0","@embroider/addon-dev":"^2.0.0","@types/ember-resolver":"^5.0.13","@types/ember__modifier":"^4.0.3","eslint-config-prettier":"^8.5.0","eslint-plugin-prettier":"^4.2.1","@babel/preset-typescript":"^7.18.6","@types/ember__application":"^4.0.4","@types/ember__destroyable":"^4.0.1","@typescript-eslint/parser":"^5.43.0","ember-destroyable-polyfill":"^2.0.3","@babel/plugin-syntax-decorators":"^7.17.0","@typescript-eslint/eslint-plugin":"^5.43.0","@babel/plugin-proposal-decorators":"^7.20.2","@babel/plugin-proposal-class-properties":"^7.18.6"},"peerDependencies":{"ember-source":"*"},"peerDependenciesMeta":{"ember-source":{"optional":true}},"_npmOperationalInternal":{"tmp":"tmp/ember-modifier_4.0.0-beta.1-unstable.b931c9f_1669090102853_0.47877483045185953","host":"s3://npm-registry-packages"}},"4.0.0-beta.1-unstable.f00347c":{"name":"ember-modifier","version":"4.0.0-beta.1-unstable.f00347c","keywords":["ember-addon"],"author":"","license":"MIT","_id":"ember-modifier@4.0.0-beta.1-unstable.f00347c","maintainers":[{"name":"rwjblue","email":"me@rwjblue.com"},{"name":"chriskrycho","email":"chris@chriskrycho.com"},{"name":"pzuraq","email":"opensource@pzuraq.com"},{"name":"sergeastapov","email":"sergeastapov@gmail.com"}],"homepage":"https://github.com/ember-modifier/ember-modifier#readme","bugs":{"url":"https://github.com/ember-modifier/ember-modifier/issues"},"dist":{"shasum":"c745565934dba202fb8fffe0cce6cbf5ccb2342b","tarball":"https://registry.npmjs.org/ember-modifier/-/ember-modifier-4.0.0-beta.1-unstable.f00347c.tgz","fileCount":15,"integrity":"sha512-gYGxCvuAoLcLx54D6Rb5nV947e9mXjBw63KkX1D16ZtgHtF3JIpb1buIp1h4ZUkLI12mjJcc3sw4l9nNgZqCgw==","signatures":[{"sig":"MEYCIQCwOLn9m4rmLyiaQTtdbM/lMibRNmiVQ70o2lPForIAMQIhANuk2KfTR43fZPokG1RSKGPSOQoCs0iK5vGGo5TE68dO","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":47088,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjfExaACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmo4dBAAl71zERGlTGd7X7cOLpzCwsHMd2uuI2U1VLMiOTRO82gzZiHy\r\nyorXzGtM5gAXGrNWQXHvzqWrjnc6cQCefQR/1Z7KkC8sR7oYfe8vRPae1Qyy\r\naErQjgld4+dNcdI2BXJ7IFc9NZwsNOz9XBY+dD+4rN3TDr9ythBg/fpGFHf0\r\n6yXh0UIz35oNuqWKojFulEwD65SlWH8QIBZVsVYhWICyPL4j/e6JjWy87jv5\r\nKGGVQaGPf8nHxfelJISH1wXPzJd9Jc1KDZknc95/3UR8RX7xA8Cr2//MdX71\r\n88smIxJBVUbS6EWr4mXhoAvdegtUJGuizUAzm2dXsyqFziSeMW92BVaTWznW\r\njggINa2tLbZx/tqEhpZqQJHxACPlD8nYr73mTUkwuNiL+Hg9xl0Ij1LMjIi2\r\nFn2UadEE1LyfxLrPi5zboUT242SKU9NGdSnPFh/wWnGGo4gvDumjdZCvm2G2\r\nftsv6zyyiTWxE0Ctj+FNCi1kDeuWs+u6amh7SrkYiMDDmn3VQ8SEQJJceq10\r\nA1FOdXaN6KfWf/zg0nxq+KXtw/NvlUWk9Z0pTeOcvimHVyBGjyu/lPCCVTbn\r\nkyA38ejuWliM+IJuLrB8YqDJ7wGezvwwGHuuV+TJ+1MvO3G9Oxsz7RN8Zc+4\r\nW8Ojm+DCgGV8T4Kr7Z4ulNgTGiLEXQybH+Q=\r\n=Rvdb\r\n-----END PGP SIGNATURE-----\r\n"},"ember":{"edition":"octane"},"volta":{"extends":"../package.json"},"readme":"ERROR: No README data found!","engines":{"node":"14.* || 16.* || >= 18"},"exports":{".":"./dist/index.js","./*":"./dist/*","./addon-main.js":"./addon-main.js"},"gitHead":"f00347c263b0d597c0ab6a041edf8514b2b9e1d6","scripts":{"lint":"eslint . --cache --ext .ts,.js","test":"echo 'A v2 addon does not have tests, run tests in test-app'","build":"rollup --config","start":"rollup --config --watch","lint:fix":"eslint . --fix --ext .ts,.js","typecheck":"tsc --noEmit","prepublishOnly":"rollup --config"},"_npmUser":{"name":"sergeastapov","email":"sergeastapov@gmail.com"},"repository":{"url":"git+https://github.com/ember-modifier/ember-modifier.git","type":"git"},"_npmVersion":"8.19.3","description":"A library for writing Ember modifiers","directories":{},"ember-addon":{"main":"addon-main.js","type":"addon","version":2,"versionCompatibility":{"ember":"3.24 || >=4.0"}},"_nodeVersion":"14.20.1","dependencies":{"@embroider/addon-shim":"^1.7.1","ember-cli-string-utils":"^1.1.0","ember-cli-normalize-entity-name":"^1.0.0"},"publishConfig":{"registry":"https://registry.npmjs.org"},"typesVersions":{"*":{"*":["./dist/*"],".":["./dist/index.d.ts"],"./-private/signature":["./dist/-private/signature.d.ts"]}},"_hasShrinkwrap":false,"devDependencies":{"eslint":"^8.28.0","rollup":"^3.2.5","prettier":"^2.7.1","typescript":"^4.9.3","@babel/core":"^7.20.2","@types/rsvp":"^4.0.4","expect-type":"^0.15.0","@tsconfig/ember":"^1.0.0","rollup-plugin-ts":"^3.0.2","ember-cli-htmlbars":"^6.1.1","eslint-plugin-node":"^11.1.0","@types/ember__debug":"^4.0.3","@types/ember__owner":"^4.0.2","eslint-plugin-ember":"^11.1.0","@embroider/addon-dev":"^2.0.0","@types/ember-resolver":"^5.0.13","@types/ember__modifier":"^4.0.3","eslint-config-prettier":"^8.5.0","eslint-plugin-prettier":"^4.2.1","@babel/preset-typescript":"^7.18.6","@types/ember__application":"^4.0.4","@types/ember__destroyable":"^4.0.1","@typescript-eslint/parser":"^5.43.0","ember-destroyable-polyfill":"^2.0.3","@babel/plugin-syntax-decorators":"^7.17.0","@typescript-eslint/eslint-plugin":"^5.43.0","@babel/plugin-proposal-decorators":"^7.20.2","@babel/plugin-proposal-class-properties":"^7.18.6"},"peerDependencies":{"ember-source":"*"},"peerDependenciesMeta":{"ember-source":{"optional":true}},"_npmOperationalInternal":{"tmp":"tmp/ember-modifier_4.0.0-beta.1-unstable.f00347c_1669090393936_0.43986065959753207","host":"s3://npm-registry-packages"}},"4.0.0-beta.1-unstable.07dc94a":{"name":"ember-modifier","version":"4.0.0-beta.1-unstable.07dc94a","keywords":["ember-addon"],"author":"","license":"MIT","_id":"ember-modifier@4.0.0-beta.1-unstable.07dc94a","maintainers":[{"name":"rwjblue","email":"me@rwjblue.com"},{"name":"chriskrycho","email":"chris@chriskrycho.com"},{"name":"pzuraq","email":"opensource@pzuraq.com"},{"name":"sergeastapov","email":"sergeastapov@gmail.com"}],"homepage":"https://github.com/ember-modifier/ember-modifier#readme","bugs":{"url":"https://github.com/ember-modifier/ember-modifier/issues"},"dist":{"shasum":"026bc9aa0a66945398b474e6e79d945b2584cc40","tarball":"https://registry.npmjs.org/ember-modifier/-/ember-modifier-4.0.0-beta.1-unstable.07dc94a.tgz","fileCount":15,"integrity":"sha512-qVenAr+7WTWJZ7Imilu1zxvjdyPt2bYFHjb46RWcy5umqoxTfQ0X+wuP4UlU6Km6DxIgQ4MY7diMzkf6klbS5g==","signatures":[{"sig":"MEQCIA+RmVx/BCFwDpOSnIsnlEpZwUsfTa+cLeKNKYeZBFGaAiA8axfyHj94f6Ws9l0efrtdzi8Ev4Vv/xy/aFzSmAj1zg==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":47088,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjfZ85ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmougQ/+IV4uWtaD90CoT3M6mDPOvOn2yO/vdlgpEqWOGShfhmoXraxG\r\nkBsonU+c8bKYQlhEP/3tfTzeb0b4J7cLNHMtT6lXM8i+90Y1MXoNBx3wbypQ\r\nw9pWV/oncF9DvaNpSOdR66HfcL+cosu3TwRByuGUmiA79cGxAPH/5M7m45+u\r\n/s8NnSkolh9HzzUeJT3/BGn7Sa+C5s2Iv11Cu64UZzRATShaABZMsRd3+Axx\r\nV33ywBCbdjN4G5MEOoqb9mjQ2z0Q7SlYA2ETsvLrzrvCeqeR7yUb0CrSvjg0\r\nzvV46MdwuvCPALwy1xKxN2MRc5JCHh1yNBeX23yXYRVi1l4Dj0aoeqhmFJH+\r\nuvYZXBPQ2RBRUnF6sRcoDXcBxhFm1G/tsHBl650lOzrBV4GwKXTBXDtgnz2b\r\nUGIOav7PKRw3jcLfOS+yKT4hdbtMCtu7VhjZxcPjJtm62BgQuUVo415yBxgm\r\nzodZK6gcpJSXyYlC8wdecinBBn4EgVhE1gFFVXEd85ZbISqHdzM9yXUmsDRJ\r\nPNPzgFewhAqXeBNrWIEaH7uvqM+VJyi8J81eCOY+3/zJZG7UsmZ8Guj7jFCj\r\nF62xohwdZL0sc4Me6+aq3qE++EcE8CncYFHoaKbFlX3ofZwv3nECTar+IO0d\r\nL5moOlxJgc8FboF5QpdImE+yxU9+cSekVZQ=\r\n=VEiO\r\n-----END PGP SIGNATURE-----\r\n"},"ember":{"edition":"octane"},"volta":{"extends":"../package.json"},"readme":"ERROR: No README data found!","engines":{"node":"14.* || 16.* || >= 18"},"exports":{".":"./dist/index.js","./*":"./dist/*","./addon-main.js":"./addon-main.js"},"gitHead":"07dc94a474ebf220a9997053afc4949abd9411a9","scripts":{"lint":"eslint . --cache --ext .ts,.js","test":"echo 'A v2 addon does not have tests, run tests in test-app'","build":"rollup --config","start":"rollup --config --watch","lint:fix":"eslint . --fix --ext .ts,.js","typecheck":"tsc --noEmit","prepublishOnly":"rollup --config"},"_npmUser":{"name":"sergeastapov","email":"sergeastapov@gmail.com"},"repository":{"url":"git+https://github.com/ember-modifier/ember-modifier.git","type":"git"},"_npmVersion":"8.19.3","description":"A library for writing Ember modifiers","directories":{},"ember-addon":{"main":"addon-main.js","type":"addon","version":2,"versionCompatibility":{"ember":"3.24 || >=4.0"}},"_nodeVersion":"14.20.1","dependencies":{"@embroider/addon-shim":"^1.7.1","ember-cli-string-utils":"^1.1.0","ember-cli-normalize-entity-name":"^1.0.0"},"publishConfig":{"registry":"https://registry.npmjs.org"},"typesVersions":{"*":{"*":["./dist/*"],".":["./dist/index.d.ts"],"./-private/signature":["./dist/-private/signature.d.ts"]}},"_hasShrinkwrap":false,"devDependencies":{"eslint":"^8.28.0","rollup":"^3.2.5","prettier":"^2.7.1","typescript":"^4.9.3","@babel/core":"^7.20.2","@types/rsvp":"^4.0.4","expect-type":"^0.15.0","@tsconfig/ember":"^1.0.0","rollup-plugin-ts":"^3.0.2","ember-cli-htmlbars":"^6.1.1","eslint-plugin-node":"^11.1.0","@types/ember__debug":"^4.0.3","@types/ember__owner":"^4.0.2","eslint-plugin-ember":"^11.1.0","@embroider/addon-dev":"^2.0.0","@types/ember-resolver":"^5.0.13","@types/ember__modifier":"^4.0.3","eslint-config-prettier":"^8.5.0","eslint-plugin-prettier":"^4.2.1","@babel/preset-typescript":"^7.18.6","@types/ember__application":"^4.0.4","@types/ember__destroyable":"^4.0.1","@typescript-eslint/parser":"^5.43.0","ember-destroyable-polyfill":"^2.0.3","@babel/plugin-syntax-decorators":"^7.17.0","@typescript-eslint/eslint-plugin":"^5.43.0","@babel/plugin-proposal-decorators":"^7.20.2","@babel/plugin-proposal-class-properties":"^7.18.6"},"peerDependencies":{"ember-source":"*"},"peerDependenciesMeta":{"ember-source":{"optional":true}},"_npmOperationalInternal":{"tmp":"tmp/ember-modifier_4.0.0-beta.1-unstable.07dc94a_1669177145453_0.3928386949306164","host":"s3://npm-registry-packages"}},"4.0.0-beta.1-unstable.3e4d7b4":{"name":"ember-modifier","version":"4.0.0-beta.1-unstable.3e4d7b4","keywords":["ember-addon"],"author":"","license":"MIT","_id":"ember-modifier@4.0.0-beta.1-unstable.3e4d7b4","maintainers":[{"name":"rwjblue","email":"me@rwjblue.com"},{"name":"chriskrycho","email":"chris@chriskrycho.com"},{"name":"pzuraq","email":"opensource@pzuraq.com"},{"name":"sergeastapov","email":"sergeastapov@gmail.com"}],"homepage":"https://github.com/ember-modifier/ember-modifier#readme","bugs":{"url":"https://github.com/ember-modifier/ember-modifier/issues"},"dist":{"shasum":"09bff160d5a06a560b5a926f2b0c11c46568d2c3","tarball":"https://registry.npmjs.org/ember-modifier/-/ember-modifier-4.0.0-beta.1-unstable.3e4d7b4.tgz","fileCount":15,"integrity":"sha512-nc8jHzI8F0n8ktLGmAQivUpsNEahc7/QGPvRg3z0KuADHgyYp7zn/UR5vDv7gdIKDWCyd3jVroiLS+Gbz0RsfA==","signatures":[{"sig":"MEYCIQDKrFRhULeeDXnHkOMhJzbBi46o+m3BsP+ngLCTBl/S9QIhAPhv/aWqRSII5mKPeFwTF0xY7p/cXgXxm00u6ZFRRkFq","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":47092,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjfu7JACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrNdhAAkIhNe5KtgdnDjFTrbONi9wLrz8tIQaB4b9AsX293qQ/kVgb2\r\nQd44p7JAzJdd5ijxzqspUdACKEjniaGGHWzTIEK2UngcnuFE/48jXdcxx7wz\r\n14xTtZU/43dgcyOWk5m8mLZQ0gXhpTzV6bG47h+QDteBb0HtSTz46Th0wb2h\r\nby2QiejXDFi2pK0F7iVDi8WOlm0IqFZoP7cmVo12L3YbqB0LUpUC97E3x4r7\r\noUl+bkHFXMI5joOil3hhku7gz790/2Zh+fbL6PUIGzAe0Q2XpB5Dq2AUL8Im\r\npZZuVH+xbVSQ57d07G8vsoo+Qk8njCQnwMPLRSozwUFMCp0bH1XLw9vR98Aq\r\nqmrHFD9H/CKFLCFkFhErbRwTa37ccW/r7ZIMg06NWhn77sax/BhVuTsTevys\r\nAtZ4tUNKH3FZVVXECh4FBr53x9CYf+WBvTxs3ecriV+Xt8VHa+gjd4HuDqie\r\nHlB+L4GPs70/cNwsHluF4qiQMi6wlbJ7ZlWdxg+Uc9YUSajXlcDwQ3hYU3Ce\r\ncHqKDW4LdtoKCQFOhO3rQUj3uDJ3PJBjiZDXSYboOv/JLZ4ThxEOH+tpJycb\r\nmAgd/xTTlluSefTxD/hpXIpRHMNHrNOOXqkXnFVZJFw4IReOR8urpkTNMhoS\r\nPdH7FAxqeS+IEtiY0ARHMWuzYbKIb7iIiGg=\r\n=hkmJ\r\n-----END PGP SIGNATURE-----\r\n"},"ember":{"edition":"octane"},"volta":{"extends":"../package.json"},"readme":"ERROR: No README data found!","engines":{"node":"14.* || 16.* || >= 18"},"exports":{".":"./dist/index.js","./*":"./dist/*","./addon-main.js":"./addon-main.js"},"gitHead":"3e4d7b461710c29f3a1d083bc4459370cb5b4a31","scripts":{"lint":"eslint . --cache --ext .ts,.js","test":"echo 'A v2 addon does not have tests, run tests in test-app'","build":"rollup --config","start":"rollup --config --watch","lint:fix":"eslint . --fix --ext .ts,.js","typecheck":"tsc --noEmit","prepublishOnly":"rollup --config"},"_npmUser":{"name":"sergeastapov","email":"sergeastapov@gmail.com"},"repository":{"url":"git+https://github.com/ember-modifier/ember-modifier.git","type":"git"},"_npmVersion":"8.19.3","description":"A library for writing Ember modifiers","directories":{},"ember-addon":{"main":"addon-main.js","type":"addon","version":2,"versionCompatibility":{"ember":"3.24 || >=4.0"}},"_nodeVersion":"14.21.1","dependencies":{"@embroider/addon-shim":"^1.7.1","ember-cli-string-utils":"^1.1.0","ember-cli-normalize-entity-name":"^1.0.0"},"publishConfig":{"registry":"https://registry.npmjs.org"},"typesVersions":{"*":{"*":["./dist/*"],".":["./dist/index.d.ts"],"./-private/signature":["./dist/-private/signature.d.ts"]}},"_hasShrinkwrap":false,"devDependencies":{"eslint":"^8.28.0","rollup":"^3.2.5","prettier":"^2.7.1","typescript":"^4.9.3","@babel/core":"^7.20.2","@types/rsvp":"^4.0.4","expect-type":"^0.15.0","@tsconfig/ember":"^1.0.0","rollup-plugin-ts":"^3.0.2","ember-cli-htmlbars":"^6.1.1","eslint-plugin-node":"^11.1.0","@types/ember__debug":"^4.0.3","@types/ember__owner":"^4.0.2","eslint-plugin-ember":"^11.1.0","@embroider/addon-dev":"^2.0.0","@types/ember-resolver":"^5.0.13","@types/ember__modifier":"^4.0.3","eslint-config-prettier":"^8.5.0","eslint-plugin-prettier":"^4.2.1","@babel/preset-typescript":"^7.18.6","@types/ember__application":"^4.0.4","@types/ember__destroyable":"^4.0.1","@typescript-eslint/parser":"^5.43.0","ember-destroyable-polyfill":"^2.0.3","@babel/plugin-syntax-decorators":"^7.17.0","@typescript-eslint/eslint-plugin":"^5.43.0","@babel/plugin-proposal-decorators":"^7.20.2","@babel/plugin-proposal-class-properties":"^7.18.6"},"peerDependencies":{"ember-source":"*"},"peerDependenciesMeta":{"ember-source":{"optional":true}},"_npmOperationalInternal":{"tmp":"tmp/ember-modifier_4.0.0-beta.1-unstable.3e4d7b4_1669263048848_0.4442477424731699","host":"s3://npm-registry-packages"}},"4.0.0-beta.1-unstable.8e440ce":{"name":"ember-modifier","version":"4.0.0-beta.1-unstable.8e440ce","keywords":["ember-addon"],"author":"","license":"MIT","_id":"ember-modifier@4.0.0-beta.1-unstable.8e440ce","maintainers":[{"name":"rwjblue","email":"me@rwjblue.com"},{"name":"chriskrycho","email":"chris@chriskrycho.com"},{"name":"pzuraq","email":"opensource@pzuraq.com"},{"name":"sergeastapov","email":"sergeastapov@gmail.com"}],"homepage":"https://github.com/ember-modifier/ember-modifier#readme","bugs":{"url":"https://github.com/ember-modifier/ember-modifier/issues"},"dist":{"shasum":"e5f70e7ad8e51e66f8628df4a0948bba95915b31","tarball":"https://registry.npmjs.org/ember-modifier/-/ember-modifier-4.0.0-beta.1-unstable.8e440ce.tgz","fileCount":15,"integrity":"sha512-IoI9xWxloeLGXQppNJYWuDGW7ACTcoOh4TQHLKhBvZKPbvvT9i0Aaj3f7eCdenANXsAw/uROI+koW2D9w5W/Lw==","signatures":[{"sig":"MEUCIER3IDzAM5149lxQM0/tNRhewwIetyJ9b+c2+lh+cuccAiEAr0HyRLWYA1vrscqZLbSnmCHNpBLtBO+lE6D340DMV3s=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":47088,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjgD/eACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmp+Bg//YSLlenyMuJ2kgzYkR7RMIIB3VthIeiC7EE+AYUAy0mNwsr88\r\njcu2XuAEvU8ZcJk6hLqmxPBJPqlTT2yw48fIP1e2wi8C/sr6nRkBh0LWeIe7\r\nLCHBAvoq/DOTB+w4mM+B4a8vfOl7hPyFrmNG1sRTnuSKQW2lqIfav06CRF/L\r\nRLP5AYsOCmWwzaot/t6b3jAV2sNXAl70Joxs04KxHJhe17E9Q+EbAKODQUbl\r\nL2Exifkm4L2bfFTM0AolFQ3eGUmC7lB1CeSPA5+HUbt39rdaZ3vK5rk5PZz4\r\nnfTgwEs4qEF70ifDV6YY4ohym/BYAjNrdczo75VEfCPO9VqpreojDU5gvekz\r\noIp72+k4pbgn3CMj7yVP5fVSg54vQA7O/JEEsQto65ceR68hz3nmCY8u+2sr\r\nR9aDgs718N9WWiHP0+gxJ1KMPOCCCXDnagOOkhy3LXYj9sgQL/xdCIvaqMJK\r\nRBM5UfL/4bXLqybS87QChR73YqXvW2nHN4+eu93dI2+VGh3Zv9p3xn9RG36H\r\ns9xuNQe9k2EydtfumG/NrsYvtDSQt7Cna5zfEWYtgY/2x5ZpXMYh+RBsFetU\r\ntRVYi9FTfRqK60RQKGof9XV7IekBf4K4lGcIa92Yn/uuvJird1WdN7B07+Rt\r\nIYegmbMFJGk/Q7jvbqoHjPOE2ruK7+nFz0o=\r\n=dHmc\r\n-----END PGP SIGNATURE-----\r\n"},"ember":{"edition":"octane"},"volta":{"extends":"../package.json"},"readme":"ERROR: No README data found!","engines":{"node":"14.* || 16.* || >= 18"},"exports":{".":"./dist/index.js","./*":"./dist/*","./addon-main.js":"./addon-main.js"},"gitHead":"8e440ce395719976673c1bd3b9b708de38eb423b","scripts":{"lint":"eslint . --cache --ext .ts,.js","test":"echo 'A v2 addon does not have tests, run tests in test-app'","build":"rollup --config","start":"rollup --config --watch","lint:fix":"eslint . --fix --ext .ts,.js","typecheck":"tsc --noEmit","prepublishOnly":"rollup --config"},"_npmUser":{"name":"sergeastapov","email":"sergeastapov@gmail.com"},"repository":{"url":"git+https://github.com/ember-modifier/ember-modifier.git","type":"git"},"_npmVersion":"8.19.3","description":"A library for writing Ember modifiers","directories":{},"ember-addon":{"main":"addon-main.js","type":"addon","version":2,"versionCompatibility":{"ember":"3.24 || >=4.0"}},"_nodeVersion":"14.21.1","dependencies":{"@embroider/addon-shim":"^1.7.1","ember-cli-string-utils":"^1.1.0","ember-cli-normalize-entity-name":"^1.0.0"},"publishConfig":{"registry":"https://registry.npmjs.org"},"typesVersions":{"*":{"*":["./dist/*"],".":["./dist/index.d.ts"],"./-private/signature":["./dist/-private/signature.d.ts"]}},"_hasShrinkwrap":false,"devDependencies":{"eslint":"^8.28.0","rollup":"^3.2.5","prettier":"^2.7.1","typescript":"^4.9.3","@babel/core":"^7.20.2","@types/rsvp":"^4.0.4","expect-type":"^0.15.0","@tsconfig/ember":"^1.0.0","rollup-plugin-ts":"^3.0.2","ember-cli-htmlbars":"^6.1.1","eslint-plugin-node":"^11.1.0","@types/ember__debug":"^4.0.3","@types/ember__owner":"^4.0.2","eslint-plugin-ember":"^11.1.0","@embroider/addon-dev":"^3.0.0","@types/ember-resolver":"^5.0.13","@types/ember__modifier":"^4.0.3","eslint-config-prettier":"^8.5.0","eslint-plugin-prettier":"^4.2.1","@babel/preset-typescript":"^7.18.6","@types/ember__application":"^4.0.4","@types/ember__destroyable":"^4.0.1","@typescript-eslint/parser":"^5.43.0","ember-destroyable-polyfill":"^2.0.3","@babel/plugin-syntax-decorators":"^7.17.0","@typescript-eslint/eslint-plugin":"^5.43.0","@babel/plugin-proposal-decorators":"^7.20.2","@babel/plugin-proposal-class-properties":"^7.18.6"},"peerDependencies":{"ember-source":"*"},"peerDependenciesMeta":{"ember-source":{"optional":true}},"_npmOperationalInternal":{"tmp":"tmp/ember-modifier_4.0.0-beta.1-unstable.8e440ce_1669349342388_0.3960384893087565","host":"s3://npm-registry-packages"}},"4.0.0-beta.1-unstable.6ce5aae":{"name":"ember-modifier","version":"4.0.0-beta.1-unstable.6ce5aae","keywords":["ember-addon"],"author":"","license":"MIT","_id":"ember-modifier@4.0.0-beta.1-unstable.6ce5aae","maintainers":[{"name":"rwjblue","email":"me@rwjblue.com"},{"name":"chriskrycho","email":"chris@chriskrycho.com"},{"name":"pzuraq","email":"opensource@pzuraq.com"},{"name":"sergeastapov","email":"sergeastapov@gmail.com"}],"homepage":"https://github.com/ember-modifier/ember-modifier#readme","bugs":{"url":"https://github.com/ember-modifier/ember-modifier/issues"},"dist":{"shasum":"e94e4c157034124a71d742f9cf9038435318d3db","tarball":"https://registry.npmjs.org/ember-modifier/-/ember-modifier-4.0.0-beta.1-unstable.6ce5aae.tgz","fileCount":15,"integrity":"sha512-ClbUCbB6IWbjvi56hnMBVJg1S5WmMv0gR13oxCBiPt15aWk31J7nGQrpN8kDAdygl9jF0DaWOV3OZwsJOVZYVw==","signatures":[{"sig":"MEUCIQCVkXiFfS1S+T34dZvHeA2W9Zzm66Z9BEKxWFnwg935iAIgOdHEPQWESZDCxLLGXfdK2XtPbdTZURaRCCTY5JX+nqw=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":47088,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjhD0CACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpE4g//SBE9VWOf1qwPFqVU3G9W3/8TBnsJ43d1Of1p4ERqUbl91FP7\r\ng/eSMso66qTlLLYS5l9afZ7jE8152gUfFnD8NJsSAbY/J50iDQXhhLiLMlQu\r\nSVSgbKOHnxyTrndMtZ48n0N0GOFDzBzRO61iIVHVLPa4oFfbNZPOss5wLpCz\r\n6Bv0HwdLgFwaqL19wsztjxmgp3StO2D0bZo5lu2zMUwwbw43laIBz9Xp5Z9C\r\n7gi2zJALdZm9Efmjtz15o2lnClCLnutcO5LgEW7thj7G6LBZ5Hf/dOmWGn+B\r\n8VY1o06M2RCLYy7q+1Ug4hv28sBLjUG+o4EYuxhU12bAsvzX0VtD6z1lSj5z\r\nNo2nY0WIKbdZrshYbM3XLfVIrRmbbTiZcUQ6t3e64tE9vLkIDUFXP7w8MRzU\r\nADM8V880QOk4eKVqc3V+DWzsY2YimcFWWewGfu5EykT9JmI/hKDYddDefwJN\r\nKrPw/a/wf82pHm0Z/moWLc6mZOysLgFojBVLXABjNRUiT2eA6TNj+yThNGkD\r\nIWUhNpGm6nek+EF7u6bczBh8rtCMFy3uWKSx0mvSa0Mpz3ESOnmYxzAbGsMO\r\nVHzWx7PPNKrHAcdgNjmtKPQKykWIkaTILxMJ4i6Z37ysyMjCBqUUOzylbuzN\r\nBOly99G+6+RQ7s2hvTdDNOuEzmyw6cdshuk=\r\n=6yt5\r\n-----END PGP SIGNATURE-----\r\n"},"ember":{"edition":"octane"},"volta":{"extends":"../package.json"},"readme":"ERROR: No README data found!","engines":{"node":"14.* || 16.* || >= 18"},"exports":{".":"./dist/index.js","./*":"./dist/*","./addon-main.js":"./addon-main.js"},"gitHead":"6ce5aae5884335b272dc98a56df4fa762630609d","scripts":{"lint":"eslint . --cache --ext .ts,.js","test":"echo 'A v2 addon does not have tests, run tests in test-app'","build":"rollup --config","start":"rollup --config --watch","lint:fix":"eslint . --fix --ext .ts,.js","typecheck":"tsc --noEmit","prepublishOnly":"rollup --config"},"_npmUser":{"name":"sergeastapov","email":"sergeastapov@gmail.com"},"repository":{"url":"git+https://github.com/ember-modifier/ember-modifier.git","type":"git"},"_npmVersion":"8.19.3","description":"A library for writing Ember modifiers","directories":{},"ember-addon":{"main":"addon-main.js","type":"addon","version":2,"versionCompatibility":{"ember":"3.24 || >=4.0"}},"_nodeVersion":"14.21.1","dependencies":{"@embroider/addon-shim":"^1.7.1","ember-cli-string-utils":"^1.1.0","ember-cli-normalize-entity-name":"^1.0.0"},"publishConfig":{"registry":"https://registry.npmjs.org"},"typesVersions":{"*":{"*":["./dist/*"],".":["./dist/index.d.ts"],"./-private/signature":["./dist/-private/signature.d.ts"]}},"_hasShrinkwrap":false,"devDependencies":{"eslint":"^8.28.0","rollup":"^3.5.0","prettier":"^2.7.1","typescript":"^4.9.3","@babel/core":"^7.20.2","@types/rsvp":"^4.0.4","expect-type":"^0.15.0","@tsconfig/ember":"^1.0.0","rollup-plugin-ts":"^3.0.2","ember-cli-htmlbars":"^6.1.1","eslint-plugin-node":"^11.1.0","@types/ember__debug":"^4.0.3","@types/ember__owner":"^4.0.2","eslint-plugin-ember":"^11.1.0","@embroider/addon-dev":"^3.0.0","@types/ember-resolver":"^5.0.13","@types/ember__modifier":"^4.0.3","eslint-config-prettier":"^8.5.0","eslint-plugin-prettier":"^4.2.1","@babel/preset-typescript":"^7.18.6","@types/ember__application":"^4.0.4","@types/ember__destroyable":"^4.0.1","@typescript-eslint/parser":"^5.43.0","ember-destroyable-polyfill":"^2.0.3","@babel/plugin-syntax-decorators":"^7.17.0","@typescript-eslint/eslint-plugin":"^5.43.0","@babel/plugin-proposal-decorators":"^7.20.2","@babel/plugin-proposal-class-properties":"^7.18.6"},"peerDependencies":{"ember-source":"*"},"peerDependenciesMeta":{"ember-source":{"optional":true}},"_npmOperationalInternal":{"tmp":"tmp/ember-modifier_4.0.0-beta.1-unstable.6ce5aae_1669610754593_0.1966477220631071","host":"s3://npm-registry-packages"}},"4.0.0-beta.1-unstable.71126f4":{"name":"ember-modifier","version":"4.0.0-beta.1-unstable.71126f4","keywords":["ember-addon"],"author":"","license":"MIT","_id":"ember-modifier@4.0.0-beta.1-unstable.71126f4","maintainers":[{"name":"rwjblue","email":"me@rwjblue.com"},{"name":"chriskrycho","email":"chris@chriskrycho.com"},{"name":"pzuraq","email":"opensource@pzuraq.com"},{"name":"sergeastapov","email":"sergeastapov@gmail.com"}],"homepage":"https://github.com/ember-modifier/ember-modifier#readme","bugs":{"url":"https://github.com/ember-modifier/ember-modifier/issues"},"dist":{"shasum":"08d5f3945d770ddd692f762c02292b1adb5e20a6","tarball":"https://registry.npmjs.org/ember-modifier/-/ember-modifier-4.0.0-beta.1-unstable.71126f4.tgz","fileCount":15,"integrity":"sha512-QF2/YpGwT5UVayeKgTK/RUM0WaZJA5DfwIXj5h1YU9KQSyt3Gu5xFJVck06+y/rhtHW+AoEGbVUzzNKBoiR5sg==","signatures":[{"sig":"MEUCIQDfcNXm2fu2Xtf7kvEdgbF0TUyK+/0muDdZKaFNc47eiwIgBGp1TBcVoXnTDB3QTbOWo3fUsiTLYxPLjSTNc6J+kzg=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":47088,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjiLo9ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmptDw/+Lly/Cjj9xw4CgENKCFV52RxfSWiyCuH5ICeWzgc5f8Vd1PuF\r\nr4bkoyVFyB/SEe3hef4CpvHQ5rAXYrRhr4Ec6ETnltOSMtKy98M2/hdpzlAf\r\nBixpcEby/R7hIdlQTEZ87e9xq30R6q7AJkO9A4n/ZbRELlKsAenQHB4jiPz3\r\nFSwZZamn30gBlaLoMQ7fBbDGMkPq5hp2AXJuZjab1HORs55WpX3PbpscwaaG\r\niAoEJRKlT3I8W9oecwhpB3PDmPLX3N2o6+Rkv08Spk83xeBKgQt5QFvnw4dR\r\nzmT9o2gCk1UnoB52WO8b3Tqjig8BqG3KRL7fR8NWNf2W2BvUlg6p1iLJzU6S\r\nUgOWgOHDDPluspxRSaoq20F3PxaSKou3lJSTKjrFe2+KANnwQiyrQPVGdVzh\r\nN8iwsDgNmIElfjpFR3h7SAbeSwYUVUdpzTdlHvXpeTfQZMeO5/5e6cE1SPPY\r\nyTTz1YiZjxAnHzmDo2FD936xrKL9JtLs5/3cxMN0WuU+USzWlSOU8l+DOvhI\r\n2x4rJXmjTK+3RmZe6MytYRUzwngBncIg8gQumgfPSAII4vRlufPgaEX4RtkW\r\nLxA9DcOsaBVfsRYhRbdJp1+Ap1uCFrq//dnW/rbtRWkFLT4gyS/xP7YDmkQU\r\n9+WuodaoWR6Pvcl9addlfLeFPdNUaXkfW5o=\r\n=XPkI\r\n-----END PGP SIGNATURE-----\r\n"},"ember":{"edition":"octane"},"volta":{"extends":"../package.json"},"readme":"ERROR: No README data found!","engines":{"node":"14.* || 16.* || >= 18"},"exports":{".":"./dist/index.js","./*":"./dist/*","./addon-main.js":"./addon-main.js"},"gitHead":"71126f47151ca36cecd7504b201db86a1e5c6078","scripts":{"lint":"eslint . --cache --ext .ts,.js","test":"echo 'A v2 addon does not have tests, run tests in test-app'","build":"rollup --config","start":"rollup --config --watch","lint:fix":"eslint . --fix --ext .ts,.js","typecheck":"tsc --noEmit","prepublishOnly":"rollup --config"},"_npmUser":{"name":"sergeastapov","email":"sergeastapov@gmail.com"},"repository":{"url":"git+https://github.com/ember-modifier/ember-modifier.git","type":"git"},"_npmVersion":"8.19.3","description":"A library for writing Ember modifiers","directories":{},"ember-addon":{"main":"addon-main.js","type":"addon","version":2,"versionCompatibility":{"ember":"3.24 || >=4.0"}},"_nodeVersion":"14.21.1","dependencies":{"@embroider/addon-shim":"^1.7.1","ember-cli-string-utils":"^1.1.0","ember-cli-normalize-entity-name":"^1.0.0"},"publishConfig":{"registry":"https://registry.npmjs.org"},"typesVersions":{"*":{"*":["./dist/*"],".":["./dist/index.d.ts"],"./-private/signature":["./dist/-private/signature.d.ts"]}},"_hasShrinkwrap":false,"devDependencies":{"eslint":"^8.28.0","rollup":"^3.5.0","prettier":"^2.7.1","typescript":"^4.9.3","@babel/core":"^7.20.2","@types/rsvp":"^4.0.4","expect-type":"^0.15.0","@tsconfig/ember":"^1.0.0","rollup-plugin-ts":"^3.0.2","ember-cli-htmlbars":"^6.1.1","eslint-plugin-node":"^11.1.0","@types/ember__debug":"^4.0.3","@types/ember__owner":"^4.0.2","eslint-plugin-ember":"^11.1.0","@embroider/addon-dev":"^3.0.0","@types/ember-resolver":"^5.0.13","@types/ember__modifier":"^4.0.3","eslint-config-prettier":"^8.5.0","eslint-plugin-prettier":"^4.2.1","@babel/preset-typescript":"^7.18.6","@types/ember__application":"^4.0.4","@types/ember__destroyable":"^4.0.1","@typescript-eslint/parser":"^5.43.0","ember-destroyable-polyfill":"^2.0.3","@babel/plugin-syntax-decorators":"^7.17.0","@typescript-eslint/eslint-plugin":"^5.45.0","@babel/plugin-proposal-decorators":"^7.20.2","@babel/plugin-proposal-class-properties":"^7.18.6"},"peerDependencies":{"ember-source":"*"},"peerDependenciesMeta":{"ember-source":{"optional":true}},"_npmOperationalInternal":{"tmp":"tmp/ember-modifier_4.0.0-beta.1-unstable.71126f4_1669904956914_0.18606287886337292","host":"s3://npm-registry-packages"}},"4.0.0-beta.1-unstable.c0f3d28":{"name":"ember-modifier","version":"4.0.0-beta.1-unstable.c0f3d28","keywords":["ember-addon"],"author":"","license":"MIT","_id":"ember-modifier@4.0.0-beta.1-unstable.c0f3d28","maintainers":[{"name":"rwjblue","email":"me@rwjblue.com"},{"name":"chriskrycho","email":"chris@chriskrycho.com"},{"name":"pzuraq","email":"opensource@pzuraq.com"},{"name":"sergeastapov","email":"sergeastapov@gmail.com"}],"homepage":"https://github.com/ember-modifier/ember-modifier#readme","bugs":{"url":"https://github.com/ember-modifier/ember-modifier/issues"},"dist":{"shasum":"b46677d0f3d79c83063b2e079ecf444dceca6b40","tarball":"https://registry.npmjs.org/ember-modifier/-/ember-modifier-4.0.0-beta.1-unstable.c0f3d28.tgz","fileCount":15,"integrity":"sha512-TTs5ptcEAQx9YVuPEzs10MAnJxssqNdnhzhSm5vVBcwJH4ZyHnTId7oqSmgkxUyjBymwqWXXm1mJlIZc2msUGw==","signatures":[{"sig":"MEUCIQD0TSuS0QIOpNcD8LJg+e1VCMSvIRN6QKz3Okbm2U7a5gIgTielZ51i7bQ8DIugdOTy5ipGfgbY+Gu90cxcI7pPUsk=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":47088,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjiLpXACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrJPxAAm1qxGLMVNS49y8u8sSSLTRjjrS+X46jRw+po7PB6T4NPtTC8\r\nRaHy7I0Z00UyjG65USAyg1x+x6arWoNngRZQIea0oxBvq3DUyEDSPzLSgCHr\r\n5BRpU3ze7LKLG2D41cNYHUZjvLAoIprpr7DFJ+8rPu5KdnzXppC39NYFxOv2\r\njhfc8neCLJm88AVJaRdCPryxJMmwYLYB8sQGkg3UJWEIuPFPFkzbnrALDkm5\r\nwKR+d5YtJAEzZv5Xx2PW+c25l0DzLtQKQFA2POivEQR4Gh0wCR7v49ESgm4A\r\nvlc764rK//Auemv/Q+CW/vlbGd6MB1gvbjywtlc4kS51WzMmlcqXA0VWzxrm\r\nNyJibr58r8MBP6n2dIgOb/SGfyANIWGe3DdBs+mc9SwwIMDFYKK9a/9uHsr3\r\n4+hqDOZa7HjSDuX8o4zt+Jpvt0UUV9SHvtf3fndSDKmxBMx0CDKG4bW5aeoG\r\nQtdVwgxAgZCp0oRsO4iNL91p6Gra0lJ8isAF5ek0QTjIZyziDinkWCxi5ywv\r\nHdsfytiCWEg3bZL3GZGZ0LzwxSGeZdVZ/kYGqJQauGOmyMfo3vDhrSmqNsIQ\r\nZXPYMVUO1aHmwjqIeewV3/8rck+eBCc1wdfv+xYRTHrNhEULdJlEXfEC+2rl\r\njUJl57YY53CvyDMqyqwuGZNAHZvoXC5taBQ=\r\n=yIkg\r\n-----END PGP SIGNATURE-----\r\n"},"ember":{"edition":"octane"},"volta":{"extends":"../package.json"},"readme":"ERROR: No README data found!","engines":{"node":"14.* || 16.* || >= 18"},"exports":{".":"./dist/index.js","./*":"./dist/*","./addon-main.js":"./addon-main.js"},"gitHead":"c0f3d28d7e060a3c3fcdf203e2b948e9ef731e72","scripts":{"lint":"eslint . --cache --ext .ts,.js","test":"echo 'A v2 addon does not have tests, run tests in test-app'","build":"rollup --config","start":"rollup --config --watch","lint:fix":"eslint . --fix --ext .ts,.js","typecheck":"tsc --noEmit","prepublishOnly":"rollup --config"},"_npmUser":{"name":"sergeastapov","email":"sergeastapov@gmail.com"},"repository":{"url":"git+https://github.com/ember-modifier/ember-modifier.git","type":"git"},"_npmVersion":"8.19.3","description":"A library for writing Ember modifiers","directories":{},"ember-addon":{"main":"addon-main.js","type":"addon","version":2,"versionCompatibility":{"ember":"3.24 || >=4.0"}},"_nodeVersion":"14.21.1","dependencies":{"@embroider/addon-shim":"^1.7.1","ember-cli-string-utils":"^1.1.0","ember-cli-normalize-entity-name":"^1.0.0"},"publishConfig":{"registry":"https://registry.npmjs.org"},"typesVersions":{"*":{"*":["./dist/*"],".":["./dist/index.d.ts"],"./-private/signature":["./dist/-private/signature.d.ts"]}},"_hasShrinkwrap":false,"devDependencies":{"eslint":"^8.28.0","rollup":"^3.5.0","prettier":"^2.7.1","typescript":"^4.9.3","@babel/core":"^7.20.2","@types/rsvp":"^4.0.4","expect-type":"^0.15.0","@tsconfig/ember":"^1.0.0","rollup-plugin-ts":"^3.0.2","ember-cli-htmlbars":"^6.1.1","eslint-plugin-node":"^11.1.0","@types/ember__debug":"^4.0.3","@types/ember__owner":"^4.0.2","eslint-plugin-ember":"^11.1.0","@embroider/addon-dev":"^3.0.0","@types/ember-resolver":"^5.0.13","@types/ember__modifier":"^4.0.3","eslint-config-prettier":"^8.5.0","eslint-plugin-prettier":"^4.2.1","@babel/preset-typescript":"^7.18.6","@types/ember__application":"^4.0.4","@types/ember__destroyable":"^4.0.1","@typescript-eslint/parser":"^5.43.0","ember-destroyable-polyfill":"^2.0.3","@babel/plugin-syntax-decorators":"^7.17.0","@typescript-eslint/eslint-plugin":"^5.45.0","@babel/plugin-proposal-decorators":"^7.20.2","@babel/plugin-proposal-class-properties":"^7.18.6"},"peerDependencies":{"ember-source":"*"},"peerDependenciesMeta":{"ember-source":{"optional":true}},"_npmOperationalInternal":{"tmp":"tmp/ember-modifier_4.0.0-beta.1-unstable.c0f3d28_1669904982928_0.7877270037512369","host":"s3://npm-registry-packages"}},"4.0.0-beta.1-unstable.2f9731f":{"name":"ember-modifier","version":"4.0.0-beta.1-unstable.2f9731f","keywords":["ember-addon"],"author":"","license":"MIT","_id":"ember-modifier@4.0.0-beta.1-unstable.2f9731f","maintainers":[{"name":"rwjblue","email":"me@rwjblue.com"},{"name":"chriskrycho","email":"chris@chriskrycho.com"},{"name":"pzuraq","email":"opensource@pzuraq.com"},{"name":"sergeastapov","email":"sergeastapov@gmail.com"}],"homepage":"https://github.com/ember-modifier/ember-modifier#readme","bugs":{"url":"https://github.com/ember-modifier/ember-modifier/issues"},"dist":{"shasum":"51cb40944df7f987503fb03d5b4a745f2f80e7ea","tarball":"https://registry.npmjs.org/ember-modifier/-/ember-modifier-4.0.0-beta.1-unstable.2f9731f.tgz","fileCount":15,"integrity":"sha512-gMrmlE+/iJ7Glzbfjf49OCuZ81to0C8tAVyCj/hEa0ZhoyZmwq6Txd4l+g4XCQqdDBe9u706jW7/0SqmW65xPA==","signatures":[{"sig":"MEYCIQDm6n6I4wxDxNh+2cv0JTBG7H6btFMP2lvhwhdxlIiASwIhAJpdYEZ6J+P1GpIO42GjkwNaAVPevniAMYEDFposS6k7","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":47088,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjiL7rACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmoMnQ//VlOvErvj43C/udv1SKfPi26UZ11t5MZypJ7T/+E0mcB0Y/0T\r\nlSVazywLduvc/MzG0t6GCyZYSMYC5p5xxQJi1hKVIcZ2qFcZsFsXqLfVSdYr\r\n6mDHRenZfMnrnAJwo2UXqYeLda94TmGT5RRo33WvcJ+asHt4fwcBccKunSOX\r\nUOeD7N0Biua+nVWL+eUNPEYWFJBIBvuAVgSSjGf0mWVEquHFSu0LW3Jj32+v\r\nGdbgwK6NrkU+FXlzdQKrg9JJfk9mkjtMbznIFjwAOzIEpoKW9MHGm+hEIxRJ\r\nXQjyhVjS4ZhOcs8VCuh3Znz8lZ6LtNrzK1qr4+hmGpe/nHnL3elJarLBrrKL\r\nTEwc8liXhAW+44Zt/+KUj7xs+tMnSAdmCYALL0thTOnwnD6GilUcGTsVLCqu\r\nv0bB93Fy0mZkbk53md7G/aQDmJTbR0/fSbdK1IfaJ4YG8JyNE3fPa20XDjZG\r\nyEUtxvgJskj8z7/C78NQWGgM4rCWdRFxxAq5Q4kYQ8iJV/XAjeqpVh6bcYoA\r\nLJ4TRASFfOO4ox55B2rbF5l8HdAWhtJLgd5mISO/CqNzhcM6fsm7GFfdnvEB\r\nz86K/W7+PovKl/k9/I8m7hqlu22nz4mKd9cwL2K+V5GlFii11m0hfF+2hsjD\r\nDmH8kOh2LLO+IOpBmFV8RnLaJyTy5wI57gk=\r\n=Wg+C\r\n-----END PGP SIGNATURE-----\r\n"},"ember":{"edition":"octane"},"volta":{"extends":"../package.json"},"readme":"ERROR: No README data found!","engines":{"node":"14.* || 16.* || >= 18"},"exports":{".":"./dist/index.js","./*":"./dist/*","./addon-main.js":"./addon-main.js"},"gitHead":"2f9731f308cca789a538bfd2741fe56c5038b195","scripts":{"lint":"eslint . --cache --ext .ts,.js","test":"echo 'A v2 addon does not have tests, run tests in test-app'","build":"rollup --config","start":"rollup --config --watch","lint:fix":"eslint . --fix --ext .ts,.js","typecheck":"tsc --noEmit","prepublishOnly":"rollup --config"},"_npmUser":{"name":"sergeastapov","email":"sergeastapov@gmail.com"},"repository":{"url":"git+https://github.com/ember-modifier/ember-modifier.git","type":"git"},"_npmVersion":"8.19.3","description":"A library for writing Ember modifiers","directories":{},"ember-addon":{"main":"addon-main.js","type":"addon","version":2,"versionCompatibility":{"ember":"3.24 || >=4.0"}},"_nodeVersion":"14.21.1","dependencies":{"@embroider/addon-shim":"^1.8.4","ember-cli-string-utils":"^1.1.0","ember-cli-normalize-entity-name":"^1.0.0"},"publishConfig":{"registry":"https://registry.npmjs.org"},"typesVersions":{"*":{"*":["./dist/*"],".":["./dist/index.d.ts"],"./-private/signature":["./dist/-private/signature.d.ts"]}},"_hasShrinkwrap":false,"devDependencies":{"eslint":"^8.28.0","rollup":"^3.5.0","prettier":"^2.7.1","typescript":"^4.9.3","@babel/core":"^7.20.2","@types/rsvp":"^4.0.4","expect-type":"^0.15.0","@tsconfig/ember":"^1.0.0","rollup-plugin-ts":"^3.0.2","ember-cli-htmlbars":"^6.1.1","eslint-plugin-node":"^11.1.0","@types/ember__debug":"^4.0.3","@types/ember__owner":"^4.0.2","eslint-plugin-ember":"^11.1.0","@embroider/addon-dev":"^3.0.0","@types/ember-resolver":"^5.0.13","@types/ember__modifier":"^4.0.3","eslint-config-prettier":"^8.5.0","eslint-plugin-prettier":"^4.2.1","@babel/preset-typescript":"^7.18.6","@types/ember__application":"^4.0.4","@types/ember__destroyable":"^4.0.1","@typescript-eslint/parser":"^5.45.0","ember-destroyable-polyfill":"^2.0.3","@babel/plugin-syntax-decorators":"^7.17.0","@typescript-eslint/eslint-plugin":"^5.45.0","@babel/plugin-proposal-decorators":"^7.20.2","@babel/plugin-proposal-class-properties":"^7.18.6"},"peerDependencies":{"ember-source":"*"},"peerDependenciesMeta":{"ember-source":{"optional":true}},"_npmOperationalInternal":{"tmp":"tmp/ember-modifier_4.0.0-beta.1-unstable.2f9731f_1669906155193_0.6998511214423115","host":"s3://npm-registry-packages"}},"4.0.0-beta.1-unstable.9824f43":{"name":"ember-modifier","version":"4.0.0-beta.1-unstable.9824f43","keywords":["ember-addon"],"author":"","license":"MIT","_id":"ember-modifier@4.0.0-beta.1-unstable.9824f43","maintainers":[{"name":"rwjblue","email":"me@rwjblue.com"},{"name":"chriskrycho","email":"chris@chriskrycho.com"},{"name":"pzuraq","email":"opensource@pzuraq.com"},{"name":"sergeastapov","email":"sergeastapov@gmail.com"}],"homepage":"https://github.com/ember-modifier/ember-modifier#readme","bugs":{"url":"https://github.com/ember-modifier/ember-modifier/issues"},"dist":{"shasum":"2d73d141cb3d15513a63877428e7f52e28184eb1","tarball":"https://registry.npmjs.org/ember-modifier/-/ember-modifier-4.0.0-beta.1-unstable.9824f43.tgz","fileCount":15,"integrity":"sha512-AgKuBthMR4MBeGfS3BI/W+Z6h/kz6/qkh64CfWaDhA16oiFIZ4TveH+y0I6sFmQRsodqsu9Wh1jIFrqp3BXcJg==","signatures":[{"sig":"MEUCIA/BMvo6MYKzRhDxWq5c/3akzqhEcSRooi/HUBmJn7TDAiEAuwyoHWPHpUIJem0xfnEe0QvTD1z+k7VdaysCh3Cf6pc=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":47088,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjiL74ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmoOuA/+KGTh6UeMU1p3YzBMeevDPu6ezLmfZScR+Pivc23gQD7r/ocm\r\n2OdZ1BCDrVw96noZcndIXWphDKT05GPjaxe4sd3X3fY2RnDQSA1092RMRz5/\r\ndU4ZZRySF66F//GXR9bpM3F+eec9JjRP21yQ/tTeL1NKx2v2Oo+0+Ymjv3Wi\r\nsYLwHEjPpWJ4gw30D4BNf4697f46rs/Y2RrM0kdwsmWZ22PTQnxzqCCnfm02\r\nviHRF8Ld4fu3ZzKUeVaHtFgdquF2KEFapkZOkzX8oOIC9yhTDyUI4ZmS1XdK\r\nlprZhKmZeV/BTEpOPHf27qTei8bpobRffBY9sCP2aYKMepEsZtJOsIW9kSdk\r\nZnpVuOZ/JYSV0K8IVWR/HuGaDxr2YDithbM14p4B13ZQpHz2mL4ct57IQ/ZL\r\nRi3FNyjPdhAa7YruxLELbKHgEIbc402FQrm3g7EwLbYSs7HjswSf6U1ZAICz\r\nxs/8MXqXp5znvxK6jGVNj9pc3QcO/45suJ6D+Q2vxvTXSq+RScMf4RdTgB+z\r\nEZ1t5F4wtxXb8Bjw5uSIb3nM5bZbSFyVH8P67CrMw6jrnss2Fr5NOTqPzczj\r\nr1tS3EXGFgPZQiwnxam5AZKHERpyhWfi/FyGMM9JDPybHsvjMycaM50ZzZaG\r\nB7XMQD/muQKwN9JBazASJq/vxVzhk9R5UFA=\r\n=PK1D\r\n-----END PGP SIGNATURE-----\r\n"},"ember":{"edition":"octane"},"volta":{"extends":"../package.json"},"readme":"ERROR: No README data found!","engines":{"node":"14.* || 16.* || >= 18"},"exports":{".":"./dist/index.js","./*":"./dist/*","./addon-main.js":"./addon-main.js"},"gitHead":"9824f43b5293fe5cf9c81623a5548cd5dd887577","scripts":{"lint":"eslint . --cache --ext .ts,.js","test":"echo 'A v2 addon does not have tests, run tests in test-app'","build":"rollup --config","start":"rollup --config --watch","lint:fix":"eslint . --fix --ext .ts,.js","typecheck":"tsc --noEmit","prepublishOnly":"rollup --config"},"_npmUser":{"name":"sergeastapov","email":"sergeastapov@gmail.com"},"repository":{"url":"git+https://github.com/ember-modifier/ember-modifier.git","type":"git"},"_npmVersion":"8.19.3","description":"A library for writing Ember modifiers","directories":{},"ember-addon":{"main":"addon-main.js","type":"addon","version":2,"versionCompatibility":{"ember":"3.24 || >=4.0"}},"_nodeVersion":"14.21.1","dependencies":{"@embroider/addon-shim":"^1.7.1","ember-cli-string-utils":"^1.1.0","ember-cli-normalize-entity-name":"^1.0.0"},"publishConfig":{"registry":"https://registry.npmjs.org"},"typesVersions":{"*":{"*":["./dist/*"],".":["./dist/index.d.ts"],"./-private/signature":["./dist/-private/signature.d.ts"]}},"_hasShrinkwrap":false,"devDependencies":{"eslint":"^8.28.0","rollup":"^3.5.0","prettier":"^2.7.1","typescript":"^4.9.3","@babel/core":"^7.20.2","@types/rsvp":"^4.0.4","expect-type":"^0.15.0","@tsconfig/ember":"^1.0.0","rollup-plugin-ts":"^3.0.2","ember-cli-htmlbars":"^6.1.1","eslint-plugin-node":"^11.1.0","@types/ember__debug":"^4.0.3","@types/ember__owner":"^4.0.2","eslint-plugin-ember":"^11.1.0","@embroider/addon-dev":"^3.0.0","@types/ember-resolver":"^5.0.13","@types/ember__modifier":"^4.0.3","eslint-config-prettier":"^8.5.0","eslint-plugin-prettier":"^4.2.1","@babel/preset-typescript":"^7.18.6","@types/ember__application":"^4.0.4","@types/ember__destroyable":"^4.0.1","@typescript-eslint/parser":"^5.45.0","ember-destroyable-polyfill":"^2.0.3","@babel/plugin-syntax-decorators":"^7.17.0","@typescript-eslint/eslint-plugin":"^5.45.0","@babel/plugin-proposal-decorators":"^7.20.2","@babel/plugin-proposal-class-properties":"^7.18.6"},"peerDependencies":{"ember-source":"*"},"peerDependenciesMeta":{"ember-source":{"optional":true}},"_npmOperationalInternal":{"tmp":"tmp/ember-modifier_4.0.0-beta.1-unstable.9824f43_1669906168456_0.4559363568409438","host":"s3://npm-registry-packages"}},"4.0.0-beta.1-unstable.ff3973f":{"name":"ember-modifier","version":"4.0.0-beta.1-unstable.ff3973f","keywords":["ember-addon"],"author":"","license":"MIT","_id":"ember-modifier@4.0.0-beta.1-unstable.ff3973f","maintainers":[{"name":"rwjblue","email":"me@rwjblue.com"},{"name":"chriskrycho","email":"chris@chriskrycho.com"},{"name":"pzuraq","email":"opensource@pzuraq.com"},{"name":"sergeastapov","email":"sergeastapov@gmail.com"}],"homepage":"https://github.com/ember-modifier/ember-modifier#readme","bugs":{"url":"https://github.com/ember-modifier/ember-modifier/issues"},"dist":{"shasum":"6b1521b3b86d825cb0e3fa35a30b829d6ae95592","tarball":"https://registry.npmjs.org/ember-modifier/-/ember-modifier-4.0.0-beta.1-unstable.ff3973f.tgz","fileCount":15,"integrity":"sha512-ul01RFBycrJ2cB5NTokuTWIQfcSJOCONyMecHvOnOx+Essq7nrj1NqCcXqq00KWsyYeAcZ5QVOgSk+IJ14e2cg==","signatures":[{"sig":"MEUCICuOE+hgQApGmSEv+hpOB9fwNHh1cq/FGygeJY7FBq1EAiEAivf3LqJFrYcyv/hNMD73sGkqOiiRBQQkzk+ASP/SxCs=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":47088,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjiNIrACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmr1ug/+I6vg06zLNevjWYuj00z1sfZeQrCO9u2Ry4KS3j828BS4TmeN\r\nnHVik3UCMz53jUrCtrOw5zj36GfpRuCJBP+1B1F6cKWK66tqm7SWYvb4AM1g\r\n7GW5jvYs9xzEQ4yVK63pOh4F66lDPLfOKrbt/COzHtKShFVun/U8eX5Xw57K\r\nPHdgAYt891cfl6Iw7iJTgRs/r8G46H24JxoyO9PaZjx0td734eAry5H7oj9s\r\nBUfSwlT6u8tfewaoyUEP2kseWhp8jilcjoApKgE+hCOl1CpQzbqRt8jFZ8tM\r\nglV0iP41xGrifs51OpOZrU4uGyXbz/ggm507RCSbtEUVOI4l6JPbfn75SeND\r\nGffDn+GQFyPGG/CrhelAD+75SmmIW9eAMGIaqcFPvHYFts/qf7fWQV1W7tov\r\nrRITMWBTbz9MmJB+nhiSmxrQdmlgho6vBSz8+f5feCHJ9aCiZ7Bg9z/xUGRZ\r\nNN3btACd4gNuH46tnKvTv52jwVJCSLNvtTDEL5YjPYgxMTSvruLsXRA/Voo/\r\nR0esFWu0GdtjB/APlPNJDwYmCbotnuSLX+lIrONCec2WeLOjQskUPMsuMbnZ\r\nZlzK/NeC3twR9K2d0Abv9eBUkq7xKfnY53qL5BH4iO2dllbVZfedfhhNOFwq\r\nPClrDWW7fqnlKlv3j/owXgAd3Cxs8BbDIUc=\r\n=JTP0\r\n-----END PGP SIGNATURE-----\r\n"},"ember":{"edition":"octane"},"volta":{"extends":"../package.json"},"readme":"ERROR: No README data found!","engines":{"node":"14.* || 16.* || >= 18"},"exports":{".":"./dist/index.js","./*":"./dist/*","./addon-main.js":"./addon-main.js"},"gitHead":"ff3973fc965fb6fc0ba8dba9f96884e52ee5072f","scripts":{"lint":"eslint . --cache --ext .ts,.js","test":"echo 'A v2 addon does not have tests, run tests in test-app'","build":"rollup --config","start":"rollup --config --watch","lint:fix":"eslint . --fix --ext .ts,.js","typecheck":"tsc --noEmit","prepublishOnly":"rollup --config"},"_npmUser":{"name":"sergeastapov","email":"sergeastapov@gmail.com"},"repository":{"url":"git+https://github.com/ember-modifier/ember-modifier.git","type":"git"},"_npmVersion":"8.19.3","description":"A library for writing Ember modifiers","directories":{},"ember-addon":{"main":"addon-main.js","type":"addon","version":2,"versionCompatibility":{"ember":"3.24 || >=4.0"}},"_nodeVersion":"14.21.1","dependencies":{"@embroider/addon-shim":"^1.8.4","ember-cli-string-utils":"^1.1.0","ember-cli-normalize-entity-name":"^1.0.0"},"publishConfig":{"registry":"https://registry.npmjs.org"},"typesVersions":{"*":{"*":["./dist/*"],".":["./dist/index.d.ts"],"./-private/signature":["./dist/-private/signature.d.ts"]}},"_hasShrinkwrap":false,"devDependencies":{"eslint":"^8.28.0","rollup":"^3.5.0","prettier":"^2.7.1","typescript":"^4.9.3","@babel/core":"^7.20.2","@types/rsvp":"^4.0.4","expect-type":"^0.15.0","@tsconfig/ember":"^1.0.0","rollup-plugin-ts":"^3.0.2","ember-cli-htmlbars":"^6.1.1","eslint-plugin-node":"^11.1.0","@types/ember__debug":"^4.0.3","@types/ember__owner":"^4.0.2","eslint-plugin-ember":"^11.1.0","@embroider/addon-dev":"^3.0.0","@types/ember-resolver":"^5.0.13","@types/ember__modifier":"^4.0.3","eslint-config-prettier":"^8.5.0","eslint-plugin-prettier":"^4.2.1","@babel/preset-typescript":"^7.18.6","@types/ember__application":"^4.0.4","@types/ember__destroyable":"^4.0.1","@typescript-eslint/parser":"^5.45.0","ember-destroyable-polyfill":"^2.0.3","@babel/plugin-syntax-decorators":"^7.17.0","@typescript-eslint/eslint-plugin":"^5.45.0","@babel/plugin-proposal-decorators":"^7.20.5","@babel/plugin-proposal-class-properties":"^7.18.6"},"peerDependencies":{"ember-source":"*"},"peerDependenciesMeta":{"ember-source":{"optional":true}},"_npmOperationalInternal":{"tmp":"tmp/ember-modifier_4.0.0-beta.1-unstable.ff3973f_1669911083588_0.9807474581479676","host":"s3://npm-registry-packages"}},"4.0.0-beta.1-unstable.be9f0aa":{"name":"ember-modifier","version":"4.0.0-beta.1-unstable.be9f0aa","keywords":["ember-addon"],"author":"","license":"MIT","_id":"ember-modifier@4.0.0-beta.1-unstable.be9f0aa","maintainers":[{"name":"rwjblue","email":"me@rwjblue.com"},{"name":"chriskrycho","email":"chris@chriskrycho.com"},{"name":"pzuraq","email":"opensource@pzuraq.com"},{"name":"sergeastapov","email":"sergeastapov@gmail.com"}],"homepage":"https://github.com/ember-modifier/ember-modifier#readme","bugs":{"url":"https://github.com/ember-modifier/ember-modifier/issues"},"dist":{"shasum":"e05af5c4618ecbae3837432591cb390bc8612c75","tarball":"https://registry.npmjs.org/ember-modifier/-/ember-modifier-4.0.0-beta.1-unstable.be9f0aa.tgz","fileCount":15,"integrity":"sha512-JE3+HygaRJcPgBrH6EqScNv0bmO2kZMHmq0lUz24pG9IpOeDi9UMS9f3LnnMfi1iwb05Y7t8eoj6GO8bdcoOWQ==","signatures":[{"sig":"MEUCIQDMukeaA3plY7v+X7xNVLf9fzx+Pd5kJ49HvdwC6NlH+QIgXv7Gf5GtmLDdpRCaotXgXiky+DvMWIqCcPQGu94/lEg=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":47088,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjiXv4ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmpzlg/9HcSdH4I36cS8R5CldvxIXLTwJfTvI5fWOlCZiTqrnY7AH5gy\r\nLc36nllfLNrkrn/zcfYpA8yKW9rj9VrfxbJfuMF3/rqAAtdvE3eapTgIX9EP\r\n/C3sk3FZ0WvhwI2Va1r+Zwe0b0Zl56ZRmBwC7UPGAehOkYUgMQlSNbmXZ3Ad\r\nF+MqGZKucr9xOO/mIse1z2uSBv3A0zbqXfmrue0s5KvMxCgtuUeDEKS0GDpR\r\nYKPkqgAzDRC+e5ibXH52hxjV+xoLo/BjocbYXyUQOVR/cm9SKF1QtHWA4a6e\r\nNCp9TKn8TM4iAu5+r8GIRG+YvecwisCPR3kwH3lwUIDCVQizbTK/dHe6Gfnx\r\ndbXrLmehc22yAZN2w5kmkP4wLLG1VQQpxcA8URel7Y7/VUbS+IDUIC+QXXy8\r\n3lZoJCgf04rxBP+5xEo2pnIk8FM8bfd5K45mOPvQSYT2lyg/VTmtK9tv/T3W\r\nbDOebgVIXsxmXD1+cxWC9J9mv7BDrzlf4px22J8DbW4G1Lfviut+4VBFoBzd\r\nJEGwynEkm2WNcT2+k6XXLTj/KsHFdhSnsCjBpyYJzWh/FMuxUtoSA1YwoZnx\r\naIpM2iKy5PcsQC8dF7RiNH0THrhWT4f36SzVM5JLAcyi71sm+KzL0dr/AAFE\r\nEg+6gCrxBg0eSWA6nlp4C/LDSoz6lyrC5nY=\r\n=C0kH\r\n-----END PGP SIGNATURE-----\r\n"},"ember":{"edition":"octane"},"volta":{"extends":"../package.json"},"readme":"ERROR: No README data found!","engines":{"node":"14.* || 16.* || >= 18"},"exports":{".":"./dist/index.js","./*":"./dist/*","./addon-main.js":"./addon-main.js"},"gitHead":"be9f0aa9fe23dab01249afc416b1982cb2ced179","scripts":{"lint":"eslint . --cache --ext .ts,.js","test":"echo 'A v2 addon does not have tests, run tests in test-app'","build":"rollup --config","start":"rollup --config --watch","lint:fix":"eslint . --fix --ext .ts,.js","typecheck":"tsc --noEmit","prepublishOnly":"rollup --config"},"_npmUser":{"name":"sergeastapov","email":"sergeastapov@gmail.com"},"repository":{"url":"git+https://github.com/ember-modifier/ember-modifier.git","type":"git"},"_npmVersion":"8.19.3","description":"A library for writing Ember modifiers","directories":{},"ember-addon":{"main":"addon-main.js","type":"addon","version":2,"versionCompatibility":{"ember":"3.24 || >=4.0"}},"_nodeVersion":"14.21.1","dependencies":{"@embroider/addon-shim":"^1.8.4","ember-cli-string-utils":"^1.1.0","ember-cli-normalize-entity-name":"^1.0.0"},"publishConfig":{"registry":"https://registry.npmjs.org"},"typesVersions":{"*":{"*":["./dist/*"],".":["./dist/index.d.ts"],"./-private/signature":["./dist/-private/signature.d.ts"]}},"_hasShrinkwrap":false,"devDependencies":{"eslint":"^8.28.0","rollup":"^3.5.1","prettier":"^2.7.1","typescript":"^4.9.3","@babel/core":"^7.20.2","@types/rsvp":"^4.0.4","expect-type":"^0.15.0","@tsconfig/ember":"^1.0.0","rollup-plugin-ts":"^3.0.2","ember-cli-htmlbars":"^6.1.1","eslint-plugin-node":"^11.1.0","@types/ember__debug":"^4.0.3","@types/ember__owner":"^4.0.2","eslint-plugin-ember":"^11.1.0","@embroider/addon-dev":"^3.0.0","@types/ember-resolver":"^5.0.13","@types/ember__modifier":"^4.0.3","eslint-config-prettier":"^8.5.0","eslint-plugin-prettier":"^4.2.1","@babel/preset-typescript":"^7.18.6","@types/ember__application":"^4.0.4","@types/ember__destroyable":"^4.0.1","@typescript-eslint/parser":"^5.45.0","ember-destroyable-polyfill":"^2.0.3","@babel/plugin-syntax-decorators":"^7.17.0","@typescript-eslint/eslint-plugin":"^5.45.0","@babel/plugin-proposal-decorators":"^7.20.5","@babel/plugin-proposal-class-properties":"^7.18.6"},"peerDependencies":{"ember-source":"*"},"peerDependenciesMeta":{"ember-source":{"optional":true}},"_npmOperationalInternal":{"tmp":"tmp/ember-modifier_4.0.0-beta.1-unstable.be9f0aa_1669954552732_0.05682542463415374","host":"s3://npm-registry-packages"}},"4.0.0-beta.1-unstable.18d4281":{"name":"ember-modifier","version":"4.0.0-beta.1-unstable.18d4281","keywords":["ember-addon"],"author":"","license":"MIT","_id":"ember-modifier@4.0.0-beta.1-unstable.18d4281","maintainers":[{"name":"rwjblue","email":"me@rwjblue.com"},{"name":"chriskrycho","email":"chris@chriskrycho.com"},{"name":"pzuraq","email":"opensource@pzuraq.com"},{"name":"sergeastapov","email":"sergeastapov@gmail.com"}],"homepage":"https://github.com/ember-modifier/ember-modifier#readme","bugs":{"url":"https://github.com/ember-modifier/ember-modifier/issues"},"dist":{"shasum":"b095ac2c7850c9f27fd8cac4773c07bb67356c9a","tarball":"https://registry.npmjs.org/ember-modifier/-/ember-modifier-4.0.0-beta.1-unstable.18d4281.tgz","fileCount":15,"integrity":"sha512-H9/J4c/i+hl4tH9xNfeSI9/6GzQoxh18JbHQWCOccJpztGcwFeoju3eG/pDSFaB4ATv7GB0UmCz2ejsrKe+VYA==","signatures":[{"sig":"MEQCIG3OhUmIM1ah4mneWS0gSqDHd5Pb92B7t+SOUuWfdHr2AiAlIq+5lnB8NUiofhqd2eNu6UipeRgqvijM6WATB1mjyA==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":47088,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjiXwXACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmo2Ww/+OvGapvuGil35NCmJWNmpGIiPDyLHhrGAWH3sB33q+kEPVoaB\r\nj5GJG5cpposgGZTui98ZkL2sxn3Vw0fNcv6V/P2m/r2W8aTvVV5z1aX6n5/r\r\n5Hr4XyQeo9aYRfIJX6Op7eSjwUE5nCeVmD1LvZRDi2WIqokhkjFZq3CCq2py\r\nXY9QsQBxsaW9YO5LpcTtf6fkJj0B4zp3ayCbZ482kn8n6ks1Ec2H25NSZN95\r\nIp4eNBWTiP/tmp7+8dfjCyG8aO7MmJTZ4V2mYf/fQoNAbbJoKnN9/+S2YFVV\r\nvv0AdA242IEUMxfh/4dk7/dsmIwaDhGkQF6/PkGqxUpQ2GksDM6ohrix3Vqa\r\n2AtN0oTJVnLuxFwq8R80eq4HDLWUBGQFbskoYdC4tY0J0TyeWxb2jQZ/i27i\r\nA9mMHpCClb73lp7/f/RqCFh5g0doMNHppQVIF+cptGx/agdTde9cokD1vxGq\r\n3nRUcwRfSrpRinbx8GyPC4HR/15ZvbIyhB/m1ESp/HOIVm7ozmwYqdfXjnBu\r\neKGGMs7+cnA4s5MQjwbdR6BaHNyEE2J9ONBn16U0/nN8fuc7koKrBJnCYaoI\r\n5AXBk/nctBHdfx6ezQHiSVEPNc+VwD24a68Iopsi4D5mhln7S7hyign2lv8f\r\nA5sduTwyrgJBXOaG8u/jVrad5Hyxq3yDd08=\r\n=dbGh\r\n-----END PGP SIGNATURE-----\r\n"},"ember":{"edition":"octane"},"volta":{"extends":"../package.json"},"readme":"ERROR: No README data found!","engines":{"node":"14.* || 16.* || >= 18"},"exports":{".":"./dist/index.js","./*":"./dist/*","./addon-main.js":"./addon-main.js"},"gitHead":"18d42818e6e67c405c1adcb836cb99713bb5e08a","scripts":{"lint":"eslint . --cache --ext .ts,.js","test":"echo 'A v2 addon does not have tests, run tests in test-app'","build":"rollup --config","start":"rollup --config --watch","lint:fix":"eslint . --fix --ext .ts,.js","typecheck":"tsc --noEmit","prepublishOnly":"rollup --config"},"_npmUser":{"name":"sergeastapov","email":"sergeastapov@gmail.com"},"repository":{"url":"git+https://github.com/ember-modifier/ember-modifier.git","type":"git"},"_npmVersion":"8.19.3","description":"A library for writing Ember modifiers","directories":{},"ember-addon":{"main":"addon-main.js","type":"addon","version":2,"versionCompatibility":{"ember":"3.24 || >=4.0"}},"_nodeVersion":"14.21.1","dependencies":{"@embroider/addon-shim":"^1.8.4","ember-cli-string-utils":"^1.1.0","ember-cli-normalize-entity-name":"^1.0.0"},"publishConfig":{"registry":"https://registry.npmjs.org"},"typesVersions":{"*":{"*":["./dist/*"],".":["./dist/index.d.ts"],"./-private/signature":["./dist/-private/signature.d.ts"]}},"_hasShrinkwrap":false,"devDependencies":{"eslint":"^8.28.0","rollup":"^3.5.1","prettier":"^2.7.1","typescript":"^4.9.3","@babel/core":"^7.20.2","@types/rsvp":"^4.0.4","expect-type":"^0.15.0","@tsconfig/ember":"^1.0.0","rollup-plugin-ts":"^3.0.2","ember-cli-htmlbars":"^6.1.1","eslint-plugin-node":"^11.1.0","@types/ember__debug":"^4.0.3","@types/ember__owner":"^4.0.2","eslint-plugin-ember":"^11.2.1","@embroider/addon-dev":"^3.0.0","@types/ember-resolver":"^5.0.13","@types/ember__modifier":"^4.0.3","eslint-config-prettier":"^8.5.0","eslint-plugin-prettier":"^4.2.1","@babel/preset-typescript":"^7.18.6","@types/ember__application":"^4.0.4","@types/ember__destroyable":"^4.0.1","@typescript-eslint/parser":"^5.45.0","ember-destroyable-polyfill":"^2.0.3","@babel/plugin-syntax-decorators":"^7.17.0","@typescript-eslint/eslint-plugin":"^5.45.0","@babel/plugin-proposal-decorators":"^7.20.5","@babel/plugin-proposal-class-properties":"^7.18.6"},"peerDependencies":{"ember-source":"*"},"peerDependenciesMeta":{"ember-source":{"optional":true}},"_npmOperationalInternal":{"tmp":"tmp/ember-modifier_4.0.0-beta.1-unstable.18d4281_1669954583071_0.88665148676573","host":"s3://npm-registry-packages"}},"4.0.0-beta.1-unstable.0a11f76":{"name":"ember-modifier","version":"4.0.0-beta.1-unstable.0a11f76","keywords":["ember-addon"],"author":"","license":"MIT","_id":"ember-modifier@4.0.0-beta.1-unstable.0a11f76","maintainers":[{"name":"rwjblue","email":"me@rwjblue.com"},{"name":"chriskrycho","email":"chris@chriskrycho.com"},{"name":"pzuraq","email":"opensource@pzuraq.com"},{"name":"sergeastapov","email":"sergeastapov@gmail.com"}],"homepage":"https://github.com/ember-modifier/ember-modifier#readme","bugs":{"url":"https://github.com/ember-modifier/ember-modifier/issues"},"dist":{"shasum":"f4fda9c08a2e400655678b7e1436d268f013274b","tarball":"https://registry.npmjs.org/ember-modifier/-/ember-modifier-4.0.0-beta.1-unstable.0a11f76.tgz","fileCount":15,"integrity":"sha512-1mNXoqANPzKCzH6CXAYx7aUHioUs6J51PdP6KJW7mPlwnQRdh5gQJ0UPtCxGvyLmKO2tJ/q23pcYnylk5B7xug==","signatures":[{"sig":"MEQCIBLb5n04Glqm0tbeO3R8+h9H5vKYI9v3avFbXk2XB7VdAiAZu3tl88l9qcz8PjIZEjcy91zMyjDUowcVc+XQ3JcmpQ==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":47088,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjiXwqACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqDGRAAguyLqzU9ARA4KceAxuxts6mfmq07vFaXG5wyE1RdeQRdyidw\r\n5HX8MDdYOFhhrhMYxQOMxJ2SrD9UI49TlMq0vcMyo3C6qYDt5RfxHSl3U19m\r\nJc60v5IM/ovUekUaPzVsYNsFUXH9k/41Q3dXOAzOwe0qIChYYl4DK+TntwyV\r\nS/SI7I0Nv39ROETOwsas9O+cPc5nbC686s8xPKlsH8VCrMZ6nQL+dg/vpth2\r\nTI1V0Sx7oE1YXFa42dDGNuCFkArF36zXvRpjJ/wnLqZ18/PfKktVFlZ0zWF6\r\ntIkh5x8Xuf4CC37TNPc1fo87f8Qi3zezjS79/ihgZwH47EmtHq3iC15blWqU\r\naIoqfSdR5IsjBUzwuTDBC3osZOof2qCjrvnq+mWIcKCKCm0DSqM6730UDPzI\r\nDVt0IJO4JyNKVdkLrCjXGyaBq56CQThv+rg9F0Hh3LlgILljRi+28e+BkSU2\r\n0VEaAw5neulZBuHpgePsH6hx2f1F4CKu5H5F08sbvruPr3oWfx4623p+j4X3\r\nNQatpcYcT/xMhnthF4gGFcKzSSUvBuJBql9mOAXcAakL0XuTSIplOe5O38u8\r\nZf8/LRaxBDyhhgNvCTmzqmxS1DvRdnNohGo8UYNJKX6zynCH1WaRB/wy0qwi\r\nTG0KR+j8Inbh1ip6g7dv5gJBsURVulCbrqE=\r\n=1DRf\r\n-----END PGP SIGNATURE-----\r\n"},"ember":{"edition":"octane"},"volta":{"extends":"../package.json"},"readme":"ERROR: No README data found!","engines":{"node":"14.* || 16.* || >= 18"},"exports":{".":"./dist/index.js","./*":"./dist/*","./addon-main.js":"./addon-main.js"},"gitHead":"0a11f76c4f8c929b62e15c74047df1286cfd76e0","scripts":{"lint":"eslint . --cache --ext .ts,.js","test":"echo 'A v2 addon does not have tests, run tests in test-app'","build":"rollup --config","start":"rollup --config --watch","lint:fix":"eslint . --fix --ext .ts,.js","typecheck":"tsc --noEmit","prepublishOnly":"rollup --config"},"_npmUser":{"name":"sergeastapov","email":"sergeastapov@gmail.com"},"repository":{"url":"git+https://github.com/ember-modifier/ember-modifier.git","type":"git"},"_npmVersion":"8.19.3","description":"A library for writing Ember modifiers","directories":{},"ember-addon":{"main":"addon-main.js","type":"addon","version":2,"versionCompatibility":{"ember":"3.24 || >=4.0"}},"_nodeVersion":"14.21.1","dependencies":{"@embroider/addon-shim":"^1.8.4","ember-cli-string-utils":"^1.1.0","ember-cli-normalize-entity-name":"^1.0.0"},"publishConfig":{"registry":"https://registry.npmjs.org"},"typesVersions":{"*":{"*":["./dist/*"],".":["./dist/index.d.ts"],"./-private/signature":["./dist/-private/signature.d.ts"]}},"_hasShrinkwrap":false,"devDependencies":{"eslint":"^8.28.0","rollup":"^3.5.1","prettier":"^2.7.1","typescript":"^4.9.3","@babel/core":"^7.20.2","@types/rsvp":"^4.0.4","expect-type":"^0.15.0","@tsconfig/ember":"^1.0.0","rollup-plugin-ts":"^3.0.2","ember-cli-htmlbars":"^6.1.1","eslint-plugin-node":"^11.1.0","@types/ember__debug":"^4.0.3","@types/ember__owner":"^4.0.2","eslint-plugin-ember":"^11.2.1","@embroider/addon-dev":"^3.0.0","@types/ember-resolver":"^5.0.13","@types/ember__modifier":"^4.0.3","eslint-config-prettier":"^8.5.0","eslint-plugin-prettier":"^4.2.1","@babel/preset-typescript":"^7.18.6","@types/ember__application":"^4.0.4","@types/ember__destroyable":"^4.0.1","@typescript-eslint/parser":"^5.45.0","ember-destroyable-polyfill":"^2.0.3","@babel/plugin-syntax-decorators":"^7.17.0","@typescript-eslint/eslint-plugin":"^5.45.0","@babel/plugin-proposal-decorators":"^7.20.5","@babel/plugin-proposal-class-properties":"^7.18.6"},"peerDependencies":{"ember-source":"*"},"peerDependenciesMeta":{"ember-source":{"optional":true}},"_npmOperationalInternal":{"tmp":"tmp/ember-modifier_4.0.0-beta.1-unstable.0a11f76_1669954601867_0.7575878824094138","host":"s3://npm-registry-packages"}},"4.0.0-beta.1-unstable.c034bb7":{"name":"ember-modifier","version":"4.0.0-beta.1-unstable.c034bb7","keywords":["ember-addon"],"author":"","license":"MIT","_id":"ember-modifier@4.0.0-beta.1-unstable.c034bb7","maintainers":[{"name":"rwjblue","email":"me@rwjblue.com"},{"name":"chriskrycho","email":"chris@chriskrycho.com"},{"name":"pzuraq","email":"opensource@pzuraq.com"},{"name":"sergeastapov","email":"sergeastapov@gmail.com"}],"homepage":"https://github.com/ember-modifier/ember-modifier#readme","bugs":{"url":"https://github.com/ember-modifier/ember-modifier/issues"},"dist":{"shasum":"9008e3950e2ff6fb50c434d1bf6419e3d805bb93","tarball":"https://registry.npmjs.org/ember-modifier/-/ember-modifier-4.0.0-beta.1-unstable.c034bb7.tgz","fileCount":15,"integrity":"sha512-37vCwIXoAnv9jvjwzHxpDGRVIeZttbCaCX9frnwR+gaqi1D4puygnmLq3xo3xaw0hZG7j6FIZadYGrJr31WVUg==","signatures":[{"sig":"MEUCIDRzUqzqsID+7C7td0oYi4xRP9Sw0W0BI2VLTc3AXbqWAiEAwoNqGs1IseIDbhXeAxdJk/GCQUSaxsFw5M4LOuqqEME=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":47088,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjiXxFACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqVfQ//crIhRsh7NvP3/XPsxborTY4UjvSHyRYa/h/xduz1SuiJtI4y\r\nvJwnjmPjPr/+sVdYk/ajJ/30mpGZDt/DVw+LUteEcftJbL8UwHPDEAB+mx4B\r\n2GAIS8OtxJMnCpggSitRclGEaZO3cT16NHe3MJNDQrqrofRAeGwPkdkbHtWf\r\njT/cyQXwSz5nFZV0ykQHiLK862PilwPb48zgOV64H+DM87nqlpfIVr+bDiVi\r\no4Dey601VnPU35zbiqo3uvYMz7XO65tFG2RDDkWvOUnwuTwxhKeKiy5Wp5CL\r\nNvD4l/JQu8Lo72TDa+Q0lE1ouYzG7D4XpGIWpj9Hw5CFBpistxqRRgRpVzt8\r\nuG5Mt1Bg/rQ2wky8uw3SM1vakN/BOS9qufe7DnAKiLLZZ3I9Up/6mpozSiMj\r\nqpDiu/GVu5JZbSgecQ9tGnAhc6pfAmNcJeGTAfQhJ0s/6+hL3bHKVphiRRca\r\nSi1Wv/aMMkBsvKitftzzu+JYx3JZUuLvirS46PosccrzFeGptVEbEe/eCZvD\r\nBtgA+nsvG/8XFdiq04QdYkrQamXP/3b3w6/3cD0TRLlxU1k4c9CqXUaN9F1H\r\nd+Eq+d7McYechOp6FWd0IOAGhwGqjZP8BEHZCDRDYp19unxo/0/ewKHzqWXl\r\n7V9Hyw2+JPg1MKvnxaz5VWV7QUIAT2H3Ak4=\r\n=3Na8\r\n-----END PGP SIGNATURE-----\r\n"},"ember":{"edition":"octane"},"volta":{"extends":"../package.json"},"readme":"ERROR: No README data found!","engines":{"node":"14.* || 16.* || >= 18"},"exports":{".":"./dist/index.js","./*":"./dist/*","./addon-main.js":"./addon-main.js"},"gitHead":"c034bb7ae64810d671ebeeb24bc7858ddba4c5d2","scripts":{"lint":"eslint . --cache --ext .ts,.js","test":"echo 'A v2 addon does not have tests, run tests in test-app'","build":"rollup --config","start":"rollup --config --watch","lint:fix":"eslint . --fix --ext .ts,.js","typecheck":"tsc --noEmit","prepublishOnly":"rollup --config"},"_npmUser":{"name":"sergeastapov","email":"sergeastapov@gmail.com"},"repository":{"url":"git+https://github.com/ember-modifier/ember-modifier.git","type":"git"},"_npmVersion":"8.19.3","description":"A library for writing Ember modifiers","directories":{},"ember-addon":{"main":"addon-main.js","type":"addon","version":2,"versionCompatibility":{"ember":"3.24 || >=4.0"}},"_nodeVersion":"14.21.1","dependencies":{"@embroider/addon-shim":"^1.8.4","ember-cli-string-utils":"^1.1.0","ember-cli-normalize-entity-name":"^1.0.0"},"publishConfig":{"registry":"https://registry.npmjs.org"},"typesVersions":{"*":{"*":["./dist/*"],".":["./dist/index.d.ts"],"./-private/signature":["./dist/-private/signature.d.ts"]}},"_hasShrinkwrap":false,"devDependencies":{"eslint":"^8.28.0","rollup":"^3.5.1","prettier":"^2.7.1","typescript":"^4.9.3","@babel/core":"^7.20.2","@types/rsvp":"^4.0.4","expect-type":"^0.15.0","@tsconfig/ember":"^1.0.0","rollup-plugin-ts":"^3.0.2","ember-cli-htmlbars":"^6.1.1","eslint-plugin-node":"^11.1.0","@types/ember__debug":"^4.0.3","@types/ember__owner":"^4.0.2","eslint-plugin-ember":"^11.2.1","@embroider/addon-dev":"^3.0.0","@types/ember-resolver":"^5.0.13","@types/ember__modifier":"^4.0.3","eslint-config-prettier":"^8.5.0","eslint-plugin-prettier":"^4.2.1","@babel/preset-typescript":"^7.18.6","@types/ember__application":"^4.0.4","@types/ember__destroyable":"^4.0.1","@typescript-eslint/parser":"^5.45.0","ember-destroyable-polyfill":"^2.0.3","@babel/plugin-syntax-decorators":"^7.17.0","@typescript-eslint/eslint-plugin":"^5.45.0","@babel/plugin-proposal-decorators":"^7.20.5","@babel/plugin-proposal-class-properties":"^7.18.6"},"peerDependencies":{"ember-source":"*"},"peerDependenciesMeta":{"ember-source":{"optional":true}},"_npmOperationalInternal":{"tmp":"tmp/ember-modifier_4.0.0-beta.1-unstable.c034bb7_1669954629274_0.8629436986390799","host":"s3://npm-registry-packages"}},"4.0.0-beta.1-unstable.05942a0":{"name":"ember-modifier","version":"4.0.0-beta.1-unstable.05942a0","keywords":["ember-addon"],"author":"","license":"MIT","_id":"ember-modifier@4.0.0-beta.1-unstable.05942a0","maintainers":[{"name":"rwjblue","email":"me@rwjblue.com"},{"name":"chriskrycho","email":"chris@chriskrycho.com"},{"name":"pzuraq","email":"opensource@pzuraq.com"},{"name":"sergeastapov","email":"sergeastapov@gmail.com"}],"homepage":"https://github.com/ember-modifier/ember-modifier#readme","bugs":{"url":"https://github.com/ember-modifier/ember-modifier/issues"},"dist":{"shasum":"900477bf5431a0cc4ac49a8f01e4863585ea535f","tarball":"https://registry.npmjs.org/ember-modifier/-/ember-modifier-4.0.0-beta.1-unstable.05942a0.tgz","fileCount":15,"integrity":"sha512-gZp6tXmfTar+6seimUtVnaZJR2cjF+bN3DEIwNsyGxC+UpILyyULlFVX+ZvnADZW1FccM+R7ihQ3GnEb7YIm3Q==","signatures":[{"sig":"MEUCIBFiPSlFLsLexFcZwI1rzptQQkSovGp041P1IaTtY6o1AiEAhyTX8Eer7+O1ghhJWc8Cl3vZ6ylQjfnWYThQRMkxO+A=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":47088,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjiX5oACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrzLw//RraWaCQlAMRdy7EU1T80s11nIX5XEh1Kl8/GAPXCKMuh0vzD\r\n9w+HVUtkd38TEMl/VqAQ8dvWe3v2tqvz3gf1Hv/C3P0IpC86IkKbclaWhTLy\r\n3InBJgri+/x+GkGKHOifIHrcxBwL+0uavNNdps5jJDgdufUza0javF5Y5VF6\r\nH7hcIO6xvA3OfP+5cUv2qJcp1aeR6hZKk9KEdgHcBz5WySo6xVwNGLQt7OUK\r\nSWzH1BTzetGnuXIHTVLLrfWtF8Bw3tVXH2PzchDGYSwliAT6VBlBe4G8jZlp\r\nxqf9uCD9Ml0ZeKNSHY09S+Ol3u5HnmR55Wd2MPRMQf+Bz5gGOSE22p10JupT\r\nh/SkUG3KY34F741UtnINbuGKU3dw9LL6CM8eD2jUd5r0qh41CmC7Wao/zCfW\r\nCGSKe3PeU1G9zdsMYzwyPL6ToId1lz6oRCnLmMG9bbSmFQoLuB3XqPDpsxzk\r\nc2JOtMjiO1+TUX+wL1M8y0o7VBqnc+Lzo9NYHUSWLVLulBDegx40eKQLKjSt\r\nQAruL97G97hvhxzQGbThDcqgumgb2gKlbKL2y0NIk/CP44llAfQgHkfAxibj\r\nCFhcf2e+EU2oL4HYosM9a+JWPJOUysfb9gQdnrc/cj9X/lyZyMEvDBfQ/I3A\r\nCu32FeJKPZvDGiV7CQrLXlvR9Ad1X2ZUdZ8=\r\n=7bFO\r\n-----END PGP SIGNATURE-----\r\n"},"ember":{"edition":"octane"},"volta":{"extends":"../package.json"},"readme":"ERROR: No README data found!","engines":{"node":"14.* || 16.* || >= 18"},"exports":{".":"./dist/index.js","./*":"./dist/*","./addon-main.js":"./addon-main.js"},"gitHead":"05942a073faae939e5f1c1837e7dc9fe663b874c","scripts":{"lint":"eslint . --cache --ext .ts,.js","test":"echo 'A v2 addon does not have tests, run tests in test-app'","build":"rollup --config","start":"rollup --config --watch","lint:fix":"eslint . --fix --ext .ts,.js","typecheck":"tsc --noEmit","prepublishOnly":"rollup --config"},"_npmUser":{"name":"sergeastapov","email":"sergeastapov@gmail.com"},"repository":{"url":"git+https://github.com/ember-modifier/ember-modifier.git","type":"git"},"_npmVersion":"8.19.3","description":"A library for writing Ember modifiers","directories":{},"ember-addon":{"main":"addon-main.js","type":"addon","version":2,"versionCompatibility":{"ember":"3.24 || >=4.0"}},"_nodeVersion":"14.21.1","dependencies":{"@embroider/addon-shim":"^1.8.4","ember-cli-string-utils":"^1.1.0","ember-cli-normalize-entity-name":"^1.0.0"},"publishConfig":{"registry":"https://registry.npmjs.org"},"typesVersions":{"*":{"*":["./dist/*"],".":["./dist/index.d.ts"],"./-private/signature":["./dist/-private/signature.d.ts"]}},"_hasShrinkwrap":false,"devDependencies":{"eslint":"^8.28.0","rollup":"^3.5.1","prettier":"^2.7.1","typescript":"^4.9.3","@babel/core":"^7.20.2","@types/rsvp":"^4.0.4","expect-type":"^0.15.0","@tsconfig/ember":"^1.1.0","rollup-plugin-ts":"^3.0.2","ember-cli-htmlbars":"^6.1.1","eslint-plugin-node":"^11.1.0","@types/ember__debug":"^4.0.3","@types/ember__owner":"^4.0.2","eslint-plugin-ember":"^11.2.1","@embroider/addon-dev":"^3.0.0","@types/ember-resolver":"^5.0.13","@types/ember__modifier":"^4.0.3","eslint-config-prettier":"^8.5.0","eslint-plugin-prettier":"^4.2.1","@babel/preset-typescript":"^7.18.6","@types/ember__application":"^4.0.4","@types/ember__destroyable":"^4.0.1","@typescript-eslint/parser":"^5.45.0","ember-destroyable-polyfill":"^2.0.3","@babel/plugin-syntax-decorators":"^7.17.0","@typescript-eslint/eslint-plugin":"^5.45.0","@babel/plugin-proposal-decorators":"^7.20.5","@babel/plugin-proposal-class-properties":"^7.18.6"},"peerDependencies":{"ember-source":"*"},"peerDependenciesMeta":{"ember-source":{"optional":true}},"_npmOperationalInternal":{"tmp":"tmp/ember-modifier_4.0.0-beta.1-unstable.05942a0_1669955176407_0.8241383528350574","host":"s3://npm-registry-packages"}},"4.0.0-beta.1-unstable.3980470":{"name":"ember-modifier","version":"4.0.0-beta.1-unstable.3980470","keywords":["ember-addon"],"author":"","license":"MIT","_id":"ember-modifier@4.0.0-beta.1-unstable.3980470","maintainers":[{"name":"rwjblue","email":"me@rwjblue.com"},{"name":"chriskrycho","email":"chris@chriskrycho.com"},{"name":"pzuraq","email":"opensource@pzuraq.com"},{"name":"sergeastapov","email":"sergeastapov@gmail.com"}],"homepage":"https://github.com/ember-modifier/ember-modifier#readme","bugs":{"url":"https://github.com/ember-modifier/ember-modifier/issues"},"dist":{"shasum":"b8b101321aa2629184c0ef20309648c800899d6c","tarball":"https://registry.npmjs.org/ember-modifier/-/ember-modifier-4.0.0-beta.1-unstable.3980470.tgz","fileCount":15,"integrity":"sha512-hoSC5H/xtEO+cFBWq+v23TjMkyFIifGBhcX/bKkx3IVxZe+tb+1s4Jz48dF4ktTAL7U5vxtGb+1G21+jyPnFEA==","signatures":[{"sig":"MEUCIAsMR3rsUR2iah6HIA2t7sp5Em2tXhZXnXWv/I+OKqaSAiEAgSwizSSP5aBgbnigjRF9RqwAJyWTJgJ5DNsy1Rqq1PA=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":47088,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjiX9QACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpMmA/+Itb0xr2VbHjpp21jb5DUN/SLBE7VulbIZNIXavJ0IIepypND\r\nbTwE19QY03jkyR47zCrz4EsUfGJVCO3TNf1whN7iw5KWQazmyGkBdkLj3e9u\r\ntp47Qf95nN4sC2mqccwRyHuqbHQXo08Z+t7E4Jr2eDUkr5iWJF83Nwiv1glL\r\n7j4IrWIDD8iCYsgDR8vxo5IZl0acB80EsR/C6L2GzfNz8reUciyz9YjUpPDz\r\nE61UgiSCHQS+QgUUcsqkuAuzwHmNlXu5qLZonAV5SlDM3CHN3IpuZG3zQQuz\r\n3vWQc7Zp/ILCWUaFNhWH4KFyRnDO7N0hKC5E8oPPGSy75T3XABI6pgZaXY9Y\r\nhJu+xjLJk1kmUl6h2PcbpvyPz0Ah0Iyz3nrl37qfOdx+hb2l045H45LnpWEL\r\nNaRtmNAmZfM+EJMqVqDyYPBuAyh63IpCmwxvlF9BBrFB2OOon8NZATxWVfRs\r\nSJxNNY7KH2rxuXkTrzh6BKEEKjFxjNcxMVwCfPd368zUWPwMXa+0NUYB0Z1U\r\n2Z+ds9HaJtkYl2l+zCczFnBQqfU+Yf72xARrn+aomXzMNW1dBWPt9aBxYhsC\r\n57N8G7LpYYGgYndMIpTnSF7vxNCvRkmfiHjF7LjEHP4/6aI+5c4cWelC6K8n\r\nSfhfK0/826kfu8QB/DCTZqCXODzgsTMjqZA=\r\n=iUqr\r\n-----END PGP SIGNATURE-----\r\n"},"ember":{"edition":"octane"},"volta":{"extends":"../package.json"},"readme":"ERROR: No README data found!","engines":{"node":"14.* || 16.* || >= 18"},"exports":{".":"./dist/index.js","./*":"./dist/*","./addon-main.js":"./addon-main.js"},"gitHead":"398047028c34c232deaae0e26a279a33075d1a9d","scripts":{"lint":"eslint . --cache --ext .ts,.js","test":"echo 'A v2 addon does not have tests, run tests in test-app'","build":"rollup --config","start":"rollup --config --watch","lint:fix":"eslint . --fix --ext .ts,.js","typecheck":"tsc --noEmit","prepublishOnly":"rollup --config"},"_npmUser":{"name":"sergeastapov","email":"sergeastapov@gmail.com"},"repository":{"url":"git+https://github.com/ember-modifier/ember-modifier.git","type":"git"},"_npmVersion":"8.19.3","description":"A library for writing Ember modifiers","directories":{},"ember-addon":{"main":"addon-main.js","type":"addon","version":2,"versionCompatibility":{"ember":"3.24 || >=4.0"}},"_nodeVersion":"14.21.1","dependencies":{"@embroider/addon-shim":"^1.8.4","ember-cli-string-utils":"^1.1.0","ember-cli-normalize-entity-name":"^1.0.0"},"publishConfig":{"registry":"https://registry.npmjs.org"},"typesVersions":{"*":{"*":["./dist/*"],".":["./dist/index.d.ts"],"./-private/signature":["./dist/-private/signature.d.ts"]}},"_hasShrinkwrap":false,"devDependencies":{"eslint":"^8.28.0","rollup":"^3.5.1","prettier":"^2.7.1","typescript":"^4.9.3","@babel/core":"^7.20.2","@types/rsvp":"^4.0.4","expect-type":"^0.15.0","@tsconfig/ember":"^1.1.0","rollup-plugin-ts":"^3.0.2","ember-cli-htmlbars":"^6.1.1","eslint-plugin-node":"^11.1.0","@types/ember__debug":"^4.0.3","@types/ember__owner":"^4.0.2","eslint-plugin-ember":"^11.2.1","@embroider/addon-dev":"^3.0.0","@types/ember-resolver":"^5.0.13","@types/ember__modifier":"^4.0.3","eslint-config-prettier":"^8.5.0","eslint-plugin-prettier":"^4.2.1","@babel/preset-typescript":"^7.18.6","@types/ember__application":"^4.0.4","@types/ember__destroyable":"^4.0.1","@typescript-eslint/parser":"^5.45.0","ember-destroyable-polyfill":"^2.0.3","@babel/plugin-syntax-decorators":"^7.17.0","@typescript-eslint/eslint-plugin":"^5.45.0","@babel/plugin-proposal-decorators":"^7.20.5","@babel/plugin-proposal-class-properties":"^7.18.6"},"peerDependencies":{"ember-source":"*"},"peerDependenciesMeta":{"ember-source":{"optional":true}},"_npmOperationalInternal":{"tmp":"tmp/ember-modifier_4.0.0-beta.1-unstable.3980470_1669955408534_0.5608495267388811","host":"s3://npm-registry-packages"}},"4.0.0-beta.1-unstable.f08fb44":{"name":"ember-modifier","version":"4.0.0-beta.1-unstable.f08fb44","keywords":["ember-addon"],"author":"","license":"MIT","_id":"ember-modifier@4.0.0-beta.1-unstable.f08fb44","maintainers":[{"name":"rwjblue","email":"me@rwjblue.com"},{"name":"chriskrycho","email":"chris@chriskrycho.com"},{"name":"pzuraq","email":"opensource@pzuraq.com"},{"name":"sergeastapov","email":"sergeastapov@gmail.com"}],"homepage":"https://github.com/ember-modifier/ember-modifier#readme","bugs":{"url":"https://github.com/ember-modifier/ember-modifier/issues"},"dist":{"shasum":"85786814ddc139b19d9985759035fb5ee6027be7","tarball":"https://registry.npmjs.org/ember-modifier/-/ember-modifier-4.0.0-beta.1-unstable.f08fb44.tgz","fileCount":15,"integrity":"sha512-irlhtS5yHsFS6CiaE9HqKZXyRPqfZrs16msVx9C0w/AUG3mXzNFRoa80A5ucndqbWf8fsmz7FVEJ0GwVIU/KeQ==","signatures":[{"sig":"MEQCICZIeCrJvQMj7aIbm8EfLlFDNgNEyctbItPBGLP6RHtHAiBy8neKIAv8i5ggEvJhiqjIHQAZFFwsqAVhpZHVKoslpg==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":47088,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjiYB6ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrfqQ/+N9GLlZFbgAyQqRF9lOcpz4XNI2BgpGScTd5pmlTA3B02VEN8\r\neehyugHD3RgosqWhCA+9kz/qA/LSsUMNw/+TaAhCtc0G3Dd4CTBJ4Vp6HghJ\r\nJaI+c/HdEl6tiPUR/fG8DBWd8tNPz9wy1ToCycaIpqPFhhO+p/M//PoGB1s/\r\nF1q/SM9Q9c7FDF850vsQ1yA+YM6wOdzWBcMDe5cN9mIz7K57JGMkHXY+4ZkA\r\nzH2LygvgaCsQ3JOSL1bV5f0dMNfGPX68PJCXQmc6wSnPszdMlSBWcVu7C183\r\nF6XYUo/51lDlNHOMCU1LA7mYktm71HP9OnvNcTBJHT4nIKBMeV3Ri2SPRY1H\r\nLBffBEb7JP0C3uNaY04nQZtARHipFZDJ2vHPIRAQrPv2HjKZYNBvQH7cze8Y\r\naHbu1YF9jy4HJj3mwuBexQR4WlGbkA9z3qOZebL6R4pAGkJkg/hLGUL0rZDv\r\nJqWAVcAgLSLfeNVra1ybtESYqzMcEG8dZ2rKa9gI/17oUiflPyfu8O9jpNNK\r\nuq0YjoQdGUwrG553AdsZXEl5LL1JzW4gXATQL170Imx5o2adhyfIZIVfSMl8\r\nQLN9g2YCj2CYhVOdV98BwGciLcOlnR70fdpWAhfjbgfontj1o0fsAyuqjqqX\r\n1MEqoD0xToi2EL5oOZdpwaVyXa1FKxLWu1o=\r\n=VCm+\r\n-----END PGP SIGNATURE-----\r\n"},"ember":{"edition":"octane"},"volta":{"extends":"../package.json"},"readme":"ERROR: No README data found!","engines":{"node":"14.* || 16.* || >= 18"},"exports":{".":"./dist/index.js","./*":"./dist/*","./addon-main.js":"./addon-main.js"},"gitHead":"f08fb44fd268240395afac2649fd4221a5381676","scripts":{"lint":"eslint . --cache --ext .ts,.js","test":"echo 'A v2 addon does not have tests, run tests in test-app'","build":"rollup --config","start":"rollup --config --watch","lint:fix":"eslint . --fix --ext .ts,.js","typecheck":"tsc --noEmit","prepublishOnly":"rollup --config"},"_npmUser":{"name":"sergeastapov","email":"sergeastapov@gmail.com"},"repository":{"url":"git+https://github.com/ember-modifier/ember-modifier.git","type":"git"},"_npmVersion":"8.19.3","description":"A library for writing Ember modifiers","directories":{},"ember-addon":{"main":"addon-main.js","type":"addon","version":2,"versionCompatibility":{"ember":"3.24 || >=4.0"}},"_nodeVersion":"14.21.1","dependencies":{"@embroider/addon-shim":"^1.8.4","ember-cli-string-utils":"^1.1.0","ember-cli-normalize-entity-name":"^1.0.0"},"publishConfig":{"registry":"https://registry.npmjs.org"},"typesVersions":{"*":{"*":["./dist/*"],".":["./dist/index.d.ts"],"./-private/signature":["./dist/-private/signature.d.ts"]}},"_hasShrinkwrap":false,"devDependencies":{"eslint":"^8.28.0","rollup":"^3.5.1","prettier":"^2.7.1","typescript":"^4.9.3","@babel/core":"^7.20.5","@types/rsvp":"^4.0.4","expect-type":"^0.15.0","@tsconfig/ember":"^1.1.0","rollup-plugin-ts":"^3.0.2","ember-cli-htmlbars":"^6.1.1","eslint-plugin-node":"^11.1.0","@types/ember__debug":"^4.0.3","@types/ember__owner":"^4.0.2","eslint-plugin-ember":"^11.2.1","@embroider/addon-dev":"^3.0.0","@types/ember-resolver":"^5.0.13","@types/ember__modifier":"^4.0.3","eslint-config-prettier":"^8.5.0","eslint-plugin-prettier":"^4.2.1","@babel/preset-typescript":"^7.18.6","@types/ember__application":"^4.0.4","@types/ember__destroyable":"^4.0.1","@typescript-eslint/parser":"^5.45.0","ember-destroyable-polyfill":"^2.0.3","@babel/plugin-syntax-decorators":"^7.17.0","@typescript-eslint/eslint-plugin":"^5.45.0","@babel/plugin-proposal-decorators":"^7.20.5","@babel/plugin-proposal-class-properties":"^7.18.6"},"peerDependencies":{"ember-source":"*"},"peerDependenciesMeta":{"ember-source":{"optional":true}},"_npmOperationalInternal":{"tmp":"tmp/ember-modifier_4.0.0-beta.1-unstable.f08fb44_1669955706465_0.23762440240993277","host":"s3://npm-registry-packages"}},"4.0.0-beta.1-unstable.0bd0a4a":{"name":"ember-modifier","version":"4.0.0-beta.1-unstable.0bd0a4a","keywords":["ember-addon"],"author":"","license":"MIT","_id":"ember-modifier@4.0.0-beta.1-unstable.0bd0a4a","maintainers":[{"name":"rwjblue","email":"me@rwjblue.com"},{"name":"chriskrycho","email":"chris@chriskrycho.com"},{"name":"pzuraq","email":"opensource@pzuraq.com"},{"name":"sergeastapov","email":"sergeastapov@gmail.com"}],"homepage":"https://github.com/ember-modifier/ember-modifier#readme","bugs":{"url":"https://github.com/ember-modifier/ember-modifier/issues"},"dist":{"shasum":"b7a809941d754d5fbf5ee973fb7c1133b8b1e9fe","tarball":"https://registry.npmjs.org/ember-modifier/-/ember-modifier-4.0.0-beta.1-unstable.0bd0a4a.tgz","fileCount":15,"integrity":"sha512-SVA6LXOxLTAkO3QYrR024w2mj8y1bfPozC0LRKr6jJRFzJ21GVSM7p9xBwKos8wv2NyYnVIXZ8SCciPoN+z18g==","signatures":[{"sig":"MEUCIQCLZd2/rBiJqtAVZdK4ii+8t6lQt9vtncKAV0nWplRtVwIgAJlbWdmELxhjujgxIAUO+1jfbua0gSXh7CUAByLwemE=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":47088,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjjXFBACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmo38BAAlj9WMNu53F4sB0ANyHdNZXPEuWL3bRRtCOEohhwqtZfiZ/HE\r\nCT7bRkgorXuyKiuzM6aq7EJU+9Ax8TgkR1PqIL1NIi4WA6K/9OKVmvPVoNGx\r\ne14mCRFOBpBFb1pm/vDtSVkLg7VTXxx5Qt2Uf75OXpTqEHUt/3vOoHim1oJc\r\nW5jed2xcQaqt2UhDbc3qeAB4MrDZdmASN9KYnt7xWdyew/KaQzSE+6gtEdtg\r\n3SCkgeSpJJQ0S0Ub1vIXC8RIYFMRcFXUVlDYKXEFMJGnOO28LyQj/jHmWKxp\r\n6ZYPwzSNDoUzHljazyYhclNDRmOR63AIp4nxKXse8+62s+9f9nVk7Pnf7npY\r\nB6q2TKRA5jLxSR4qEwMPopim9QpEsa81/23oT0y8Iev9ixd7UoFrq+YYl/NG\r\nnxXPShBRCSRzHv8PjF8R99aOe9JoqiDN88hthXh/mhhz3cywb8UDKdyv4Xrz\r\nALaVy0XKl80khodNR13aroDIY18R/kGd+wqgHr88gCxr2f+OigCIXkR2KRNX\r\nQAXGguUXbYUQoo8PbtkHENMAh31hSZBd8fv4Flg8O2Tw9bb9RAjdRD1x04/3\r\nzQirTQSF5dZVX4I8Fkje40Ttr1zqVYhyRsfzkWPl/jH5VC1tyU2WmyVbfFL/\r\nuLrlg0IeaKLA/gdsgFylRByTtQWpJHNOL1w=\r\n=447/\r\n-----END PGP SIGNATURE-----\r\n"},"ember":{"edition":"octane"},"volta":{"extends":"../package.json"},"readme":"ERROR: No README data found!","engines":{"node":"14.* || 16.* || >= 18"},"exports":{".":"./dist/index.js","./*":"./dist/*","./addon-main.js":"./addon-main.js"},"gitHead":"0bd0a4a6bf594bd83497e3183b8a82f0060a30aa","scripts":{"lint":"eslint . --cache --ext .ts,.js","test":"echo 'A v2 addon does not have tests, run tests in test-app'","build":"rollup --config","start":"rollup --config --watch","lint:fix":"eslint . --fix --ext .ts,.js","typecheck":"tsc --noEmit","prepublishOnly":"rollup --config"},"_npmUser":{"name":"sergeastapov","email":"sergeastapov@gmail.com"},"repository":{"url":"git+https://github.com/ember-modifier/ember-modifier.git","type":"git"},"_npmVersion":"8.19.3","description":"A library for writing Ember modifiers","directories":{},"ember-addon":{"main":"addon-main.js","type":"addon","version":2,"versionCompatibility":{"ember":"3.24 || >=4.0"}},"_nodeVersion":"14.21.1","dependencies":{"@embroider/addon-shim":"^1.8.4","ember-cli-string-utils":"^1.1.0","ember-cli-normalize-entity-name":"^1.0.0"},"publishConfig":{"registry":"https://registry.npmjs.org"},"typesVersions":{"*":{"*":["./dist/*"],".":["./dist/index.d.ts"],"./-private/signature":["./dist/-private/signature.d.ts"]}},"_hasShrinkwrap":false,"devDependencies":{"eslint":"^8.28.0","rollup":"^3.5.1","prettier":"^2.7.1","typescript":"^4.9.3","@babel/core":"^7.20.5","@types/rsvp":"^4.0.4","expect-type":"^0.15.0","@tsconfig/ember":"^1.1.0","rollup-plugin-ts":"^3.0.2","ember-cli-htmlbars":"^6.1.1","eslint-plugin-node":"^11.1.0","@types/ember__debug":"^4.0.3","@types/ember__owner":"^4.0.2","eslint-plugin-ember":"^11.2.1","@embroider/addon-dev":"^3.0.0","@types/ember-resolver":"^5.0.13","@types/ember__modifier":"^4.0.3","eslint-config-prettier":"^8.5.0","eslint-plugin-prettier":"^4.2.1","@babel/preset-typescript":"^7.18.6","@types/ember__application":"^4.0.4","@types/ember__destroyable":"^4.0.1","@typescript-eslint/parser":"^5.45.0","ember-destroyable-polyfill":"^2.0.3","@babel/plugin-syntax-decorators":"^7.17.0","@typescript-eslint/eslint-plugin":"^5.45.0","@babel/plugin-proposal-decorators":"^7.20.5","@babel/plugin-proposal-class-properties":"^7.18.6"},"peerDependencies":{"ember-source":"*"},"peerDependenciesMeta":{"ember-source":{"optional":true}},"_npmOperationalInternal":{"tmp":"tmp/ember-modifier_4.0.0-beta.1-unstable.0bd0a4a_1670213953754_0.25504896114375364","host":"s3://npm-registry-packages"}},"4.0.0-beta.1-unstable.6045865":{"name":"ember-modifier","version":"4.0.0-beta.1-unstable.6045865","keywords":["ember-addon"],"author":"","license":"MIT","_id":"ember-modifier@4.0.0-beta.1-unstable.6045865","maintainers":[{"name":"rwjblue","email":"me@rwjblue.com"},{"name":"chriskrycho","email":"chris@chriskrycho.com"},{"name":"pzuraq","email":"opensource@pzuraq.com"},{"name":"sergeastapov","email":"sergeastapov@gmail.com"}],"homepage":"https://github.com/ember-modifier/ember-modifier#readme","bugs":{"url":"https://github.com/ember-modifier/ember-modifier/issues"},"dist":{"shasum":"080b25aecd8576bce138c0782de4500fb202f4c3","tarball":"https://registry.npmjs.org/ember-modifier/-/ember-modifier-4.0.0-beta.1-unstable.6045865.tgz","fileCount":15,"integrity":"sha512-1a3RIBzGbBoFBj8iuqTsDHuDQ77lxSUoI14FI07Is9Nw5GRnCZO0Nbb81rPuHLnla8Cqy05GbhppmwlOu+NAVA==","signatures":[{"sig":"MEYCIQDj0cEsACtuEEa9mVSapqTOhuPDRCmrgLPfWFrdIeCB+gIhALAxjY8twaDAge7EWJLXJLAhNLWVQUpF8iYwzT10bzEV","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":47092,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjjXJBACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmr8lw/+IETs0mkoMK+XyK4RhhkRzDY20Rny2M/JrzZE7OP9rmcdCF43\r\n5U6oYed3Pyy3KDgdU5A6+UbpN9DSphQw/vSiRS1N4w3DRYVPA3r/ht6C/ylY\r\n1AobwzrFfl0/OhZpjiZIddnvB+Upg0vPnr86qfNrIzLjuQ+rzB76wiQ59RD/\r\ngzliIz/coX1kohwDw8K55I4ao0Cxdmk9rXAxoue4N8wetZMTUPGoFAwNuBCu\r\n3u/wkwJTdiW6/MD7VlRO+aGfE8EZdLgAkU1lFbkNyDG1qOjPU0QIRRnL3T/A\r\n6ncZuBDEgdmIopizfQb50fYuOl8Cc++wAfiAnwVd7zBjI4M9ITvLVXlGAotN\r\nv+ASX4Yaj59ABN1z+KdcOaZzLG4wmlLdTiGIcRd0jP+Ge/XGDqPaBIoanLrr\r\n2NAtO6K5+W69+aq/+itBTlb6cS6/K84ABL3Ma2lbb/NoYdGWVRdksdn4GUZl\r\nZP8zIyuMNsuGDuDoXodfpB04FM8cBLdJb64H5xCCdKuAnHTRzte+WiTLUVCy\r\ntcwftI85kU+PXwlp79NJtAOsSI/ir1YvvCxp9x1Hq7c9pRtYCMbDwYHNbrDg\r\n7HW0mo+C0USTOdAf2mu+lIBwifgaJRW1q7wSln2p3YKtUWJx2+Np66isF/eo\r\n1mfxIGj6INLx/XyaTrwZdelT+LN5QB1qZPE=\r\n=NizE\r\n-----END PGP SIGNATURE-----\r\n"},"ember":{"edition":"octane"},"volta":{"extends":"../package.json"},"readme":"ERROR: No README data found!","engines":{"node":"14.* || 16.* || >= 18"},"exports":{".":"./dist/index.js","./*":"./dist/*","./addon-main.js":"./addon-main.js"},"gitHead":"6045865c08728e19779db8329ad6a5ab81de18e1","scripts":{"lint":"eslint . --cache --ext .ts,.js","test":"echo 'A v2 addon does not have tests, run tests in test-app'","build":"rollup --config","start":"rollup --config --watch","lint:fix":"eslint . --fix --ext .ts,.js","typecheck":"tsc --noEmit","prepublishOnly":"rollup --config"},"_npmUser":{"name":"sergeastapov","email":"sergeastapov@gmail.com"},"repository":{"url":"git+https://github.com/ember-modifier/ember-modifier.git","type":"git"},"_npmVersion":"8.19.3","description":"A library for writing Ember modifiers","directories":{},"ember-addon":{"main":"addon-main.js","type":"addon","version":2,"versionCompatibility":{"ember":"3.24 || >=4.0"}},"_nodeVersion":"14.21.1","dependencies":{"@embroider/addon-shim":"^1.8.4","ember-cli-string-utils":"^1.1.0","ember-cli-normalize-entity-name":"^1.0.0"},"publishConfig":{"registry":"https://registry.npmjs.org"},"typesVersions":{"*":{"*":["./dist/*"],".":["./dist/index.d.ts"],"./-private/signature":["./dist/-private/signature.d.ts"]}},"_hasShrinkwrap":false,"devDependencies":{"eslint":"^8.28.0","rollup":"^3.5.1","prettier":"^2.7.1","typescript":"^4.9.3","@babel/core":"^7.20.5","@types/rsvp":"^4.0.4","expect-type":"^0.15.0","@tsconfig/ember":"^1.1.0","rollup-plugin-ts":"^3.0.2","ember-cli-htmlbars":"^6.1.1","eslint-plugin-node":"^11.1.0","@types/ember__debug":"^4.0.3","@types/ember__owner":"^4.0.2","eslint-plugin-ember":"^11.2.1","@embroider/addon-dev":"^3.0.0","@types/ember-resolver":"^5.0.13","@types/ember__modifier":"^4.0.3","eslint-config-prettier":"^8.5.0","eslint-plugin-prettier":"^4.2.1","@babel/preset-typescript":"^7.18.6","@types/ember__application":"^4.0.4","@types/ember__destroyable":"^4.0.1","@typescript-eslint/parser":"^5.45.0","ember-destroyable-polyfill":"^2.0.3","@babel/plugin-syntax-decorators":"^7.17.0","@typescript-eslint/eslint-plugin":"^5.45.0","@babel/plugin-proposal-decorators":"^7.20.5","@babel/plugin-proposal-class-properties":"^7.18.6"},"peerDependencies":{"ember-source":"*"},"peerDependenciesMeta":{"ember-source":{"optional":true}},"_npmOperationalInternal":{"tmp":"tmp/ember-modifier_4.0.0-beta.1-unstable.6045865_1670214209482_0.5578234767506918","host":"s3://npm-registry-packages"}},"4.0.0-beta.1-unstable.cd4821c":{"name":"ember-modifier","version":"4.0.0-beta.1-unstable.cd4821c","keywords":["ember-addon"],"author":"","license":"MIT","_id":"ember-modifier@4.0.0-beta.1-unstable.cd4821c","maintainers":[{"name":"rwjblue","email":"me@rwjblue.com"},{"name":"chriskrycho","email":"chris@chriskrycho.com"},{"name":"pzuraq","email":"opensource@pzuraq.com"},{"name":"sergeastapov","email":"sergeastapov@gmail.com"}],"homepage":"https://github.com/ember-modifier/ember-modifier#readme","bugs":{"url":"https://github.com/ember-modifier/ember-modifier/issues"},"dist":{"shasum":"b77d1bcea777d2319e6b2ae0a5719c232f2c35e9","tarball":"https://registry.npmjs.org/ember-modifier/-/ember-modifier-4.0.0-beta.1-unstable.cd4821c.tgz","fileCount":15,"integrity":"sha512-V5QiakiZoW6TN9uzW5F6uINwphFWqguvMZADbRW/fQ74OkM6fbuun0sYHGz1H+aQ372VVcb+14Dxm+9ooLUDVg==","signatures":[{"sig":"MEYCIQCq/+KActGgpe3qY4nokfDsgGitua/uj4iv997oJl8m/AIhAPB24nRh+RqFSR4HmVhVZt8ql6/r21oERenILvsXHk9D","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":47088,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjjXXhACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqPcg/9H9k84j41YlOSVgzfeyJr2LkJoTYj2nvyZlIXMLZiv+pRcgrG\r\nbcaA5BlYUrO8wph+PbbtE1+sHDCzO9k9BI6Bw0q5lWWaE9rhY6tvZ+cRdLQV\r\nijRaOi6Q81GFNRO0yf6Hn5CmglaQCD0fitAwjjoATfOqd+9woYX4nArYx/u2\r\nUBvm5iVTrbj8S1t6a3iqFjeMTRGlpTi4xWhoJHYj3cmcIrSt6VJvEMiWNy5y\r\nVbZcT8GUgKtM6770sTM7sEVUo1SUFP06XlJRHjuTTJCrJPKdUebiLnqLqvyo\r\nFJ6a47o/v9nUXKQIgblkLaQ3qujf0Z9C2O2IK82Zp4o5hlIUZL15hWi9SM4q\r\nH+Gtg7L77dPtKUFmai50Xzyo7MryslvhdRimOYTFQ9TPASruh8ThvO2gfDhG\r\nROlyT60UkEY6xUp+TkgJ2Ddfy2hI7ALT9nHICtBdctYyzmYc5MVO7uXIPcFk\r\nBKuBKlhZkjMBOmXHfvyXNhKI6mD3MQfG0J8RBQLBwyxl/flMCuBOSyx0VaWc\r\nZA31DZlB0fOB06Hwy4/88pTRFRN6kK8pHpprKanTrDWeJBZ6ER3rUcEJHV08\r\nbjtC17NIIomaQBM4YCqZHLfRBBYfdfR/B/npe9XM4WepjLGj/nFUF3nwUEVC\r\n/tDzT+UoGxZQk5yfrtLiuclHnQpHk0u42yY=\r\n=N9II\r\n-----END PGP SIGNATURE-----\r\n"},"ember":{"edition":"octane"},"volta":{"extends":"../package.json"},"readme":"ERROR: No README data found!","engines":{"node":"14.* || 16.* || >= 18"},"exports":{".":"./dist/index.js","./*":"./dist/*","./addon-main.js":"./addon-main.js"},"gitHead":"cd4821c30e1ef06651968ace34bed4360229c6fa","scripts":{"lint":"eslint . --cache --ext .ts,.js","test":"echo 'A v2 addon does not have tests, run tests in test-app'","build":"rollup --config","start":"rollup --config --watch","lint:fix":"eslint . --fix --ext .ts,.js","typecheck":"tsc --noEmit","prepublishOnly":"rollup --config"},"_npmUser":{"name":"sergeastapov","email":"sergeastapov@gmail.com"},"repository":{"url":"git+https://github.com/ember-modifier/ember-modifier.git","type":"git"},"_npmVersion":"8.19.3","description":"A library for writing Ember modifiers","directories":{},"ember-addon":{"main":"addon-main.js","type":"addon","version":2,"versionCompatibility":{"ember":"3.24 || >=4.0"}},"_nodeVersion":"14.21.1","dependencies":{"@embroider/addon-shim":"^1.8.4","ember-cli-string-utils":"^1.1.0","ember-cli-normalize-entity-name":"^1.0.0"},"publishConfig":{"registry":"https://registry.npmjs.org"},"typesVersions":{"*":{"*":["./dist/*"],".":["./dist/index.d.ts"],"./-private/signature":["./dist/-private/signature.d.ts"]}},"_hasShrinkwrap":false,"devDependencies":{"eslint":"^8.28.0","rollup":"^3.5.1","prettier":"^2.8.0","typescript":"^4.9.3","@babel/core":"^7.20.5","@types/rsvp":"^4.0.4","expect-type":"^0.15.0","@tsconfig/ember":"^1.1.0","rollup-plugin-ts":"^3.0.2","ember-cli-htmlbars":"^6.1.1","eslint-plugin-node":"^11.1.0","@types/ember__debug":"^4.0.3","@types/ember__owner":"^4.0.2","eslint-plugin-ember":"^11.2.1","@embroider/addon-dev":"^3.0.0","@types/ember-resolver":"^5.0.13","@types/ember__modifier":"^4.0.3","eslint-config-prettier":"^8.5.0","eslint-plugin-prettier":"^4.2.1","@babel/preset-typescript":"^7.18.6","@types/ember__application":"^4.0.4","@types/ember__destroyable":"^4.0.1","@typescript-eslint/parser":"^5.45.0","ember-destroyable-polyfill":"^2.0.3","@babel/plugin-syntax-decorators":"^7.17.0","@typescript-eslint/eslint-plugin":"^5.45.0","@babel/plugin-proposal-decorators":"^7.20.5","@babel/plugin-proposal-class-properties":"^7.18.6"},"peerDependencies":{"ember-source":"*"},"peerDependenciesMeta":{"ember-source":{"optional":true}},"_npmOperationalInternal":{"tmp":"tmp/ember-modifier_4.0.0-beta.1-unstable.cd4821c_1670215137652_0.35937699573373205","host":"s3://npm-registry-packages"}},"4.0.0-beta.1-unstable.494a4a5":{"name":"ember-modifier","version":"4.0.0-beta.1-unstable.494a4a5","keywords":["ember-addon"],"author":"","license":"MIT","_id":"ember-modifier@4.0.0-beta.1-unstable.494a4a5","maintainers":[{"name":"rwjblue","email":"me@rwjblue.com"},{"name":"chriskrycho","email":"chris@chriskrycho.com"},{"name":"pzuraq","email":"opensource@pzuraq.com"},{"name":"sergeastapov","email":"sergeastapov@gmail.com"}],"homepage":"https://github.com/ember-modifier/ember-modifier#readme","bugs":{"url":"https://github.com/ember-modifier/ember-modifier/issues"},"dist":{"shasum":"d51074e32913a83e0d209f1e02ea000ec84e2f3a","tarball":"https://registry.npmjs.org/ember-modifier/-/ember-modifier-4.0.0-beta.1-unstable.494a4a5.tgz","fileCount":15,"integrity":"sha512-gH7J+1t/jNIwfCS291IVnp2O+yH1K8cLUZ27lLxEvWmyASAEQ/pXkPB82f3TOTKCm+ejvHjO1QfmK2obewqnhg==","signatures":[{"sig":"MEYCIQDZvbY/8FsEA2wtqlOCG/bBIMgSwjUALzPr9P2ozoa2TwIhAJJiJeLkLDHYOw8Keqa/NlEn8qJBXWgDKKnTtSjaAxjN","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":47088,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjjzJ/ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpZ6RAAkukIj93QAziLu9EJwkKclt0CL1RtvLnbvduJnleepfb0hFnw\r\n/xeRhYbMWCcMbb7J1PuMPP/QgyfiRRE4jKn0yraz19Bum1ro9JB7xYQXswNK\r\nsE5eAmTz719VheJuS6ltnTEoLvGl8Ips0djZpUK08I+ajZ01RUtSl4nohdmO\r\n0VhKNWEaVrZ0Ryvc7ACSaFOkGbl329IqfyKF1vJ7WIM78F1y3Bb2i2+W17bv\r\n4EgxnMcMY8CAFcEh/e5t3mWFDNgpM2zT5bjpInzO/cGaj6o1il61D6X+n7F4\r\nmyusK5heA6lS5mY5q7+pbH2OIgznfz81jLFamRP+t5nTCpTKDIjdtWlMn7Hx\r\nXrPtYfNaead+7G6iBEVuyFPQ3nfQ+VyKUYauvuCTnzXOs8n+D1SEiNpMM04Z\r\n1hB/3YKm3b/0P2Qe2J8dpUVu/43qB9eCYHGkcyTI+YpWU/DyE3DoWvapVAhL\r\nIZEhcKGj/QtZxnKHAi0YLnLUlrDk4E1kLeZRPZZDAd3lz09Id8epEdnwI442\r\no8GQ1MDYAKnMqi34GakZusnwbsVwWavvxg0zeAprx41vgK6Ev+Dei3SUuZ/U\r\nRL+mxPkidpRSDo8PRBY7oGFTcqwVcBD0QjUqs9QWcYJZN+ZRmz8sVcX8Azgj\r\nt/b09rQGSc2OUs7d/QqrUyjFT7Td1EVf86k=\r\n=xESw\r\n-----END PGP SIGNATURE-----\r\n"},"ember":{"edition":"octane"},"volta":{"extends":"../package.json"},"readme":"ERROR: No README data found!","engines":{"node":"14.* || 16.* || >= 18"},"exports":{".":"./dist/index.js","./*":"./dist/*","./addon-main.js":"./addon-main.js"},"gitHead":"494a4a5f752fcc922c219507d0a0e21a127f8c7a","scripts":{"lint":"eslint . --cache --ext .ts,.js","test":"echo 'A v2 addon does not have tests, run tests in test-app'","build":"rollup --config","start":"rollup --config --watch","lint:fix":"eslint . --fix --ext .ts,.js","typecheck":"tsc --noEmit","prepublishOnly":"rollup --config"},"_npmUser":{"name":"sergeastapov","email":"sergeastapov@gmail.com"},"repository":{"url":"git+https://github.com/ember-modifier/ember-modifier.git","type":"git"},"_npmVersion":"8.19.3","description":"A library for writing Ember modifiers","directories":{},"ember-addon":{"main":"addon-main.js","type":"addon","version":2,"versionCompatibility":{"ember":"3.24 || >=4.0"}},"_nodeVersion":"14.21.1","dependencies":{"@embroider/addon-shim":"^1.8.4","ember-cli-string-utils":"^1.1.0","ember-cli-normalize-entity-name":"^1.0.0"},"publishConfig":{"registry":"https://registry.npmjs.org"},"typesVersions":{"*":{"*":["./dist/*"],".":["./dist/index.d.ts"],"./-private/signature":["./dist/-private/signature.d.ts"]}},"_hasShrinkwrap":false,"devDependencies":{"eslint":"^8.28.0","rollup":"^3.5.1","prettier":"^2.8.0","typescript":"^4.9.3","@babel/core":"^7.20.5","@types/rsvp":"^4.0.4","expect-type":"^0.15.0","@tsconfig/ember":"^1.1.0","rollup-plugin-ts":"^3.0.2","ember-cli-htmlbars":"^6.1.1","eslint-plugin-node":"^11.1.0","@types/ember__debug":"^4.0.3","@types/ember__owner":"^4.0.2","eslint-plugin-ember":"^11.2.1","@embroider/addon-dev":"^3.0.0","@types/ember-resolver":"^5.0.13","@types/ember__modifier":"^4.0.3","eslint-config-prettier":"^8.5.0","eslint-plugin-prettier":"^4.2.1","@babel/preset-typescript":"^7.18.6","@types/ember__application":"^4.0.4","@types/ember__destroyable":"^4.0.1","@typescript-eslint/parser":"^5.45.0","ember-destroyable-polyfill":"^2.0.3","@babel/plugin-syntax-decorators":"^7.17.0","@typescript-eslint/eslint-plugin":"^5.45.0","@babel/plugin-proposal-decorators":"^7.20.5","@babel/plugin-proposal-class-properties":"^7.18.6"},"peerDependencies":{"ember-source":"*"},"peerDependenciesMeta":{"ember-source":{"optional":true}},"_npmOperationalInternal":{"tmp":"tmp/ember-modifier_4.0.0-beta.1-unstable.494a4a5_1670328959473_0.3938223975160635","host":"s3://npm-registry-packages"}},"4.0.0-beta.1-unstable.65f02b3":{"name":"ember-modifier","version":"4.0.0-beta.1-unstable.65f02b3","keywords":["ember-addon"],"author":"","license":"MIT","_id":"ember-modifier@4.0.0-beta.1-unstable.65f02b3","maintainers":[{"name":"rwjblue","email":"me@rwjblue.com"},{"name":"chriskrycho","email":"chris@chriskrycho.com"},{"name":"pzuraq","email":"opensource@pzuraq.com"},{"name":"sergeastapov","email":"sergeastapov@gmail.com"}],"homepage":"https://github.com/ember-modifier/ember-modifier#readme","bugs":{"url":"https://github.com/ember-modifier/ember-modifier/issues"},"dist":{"shasum":"caff7301674ddb5e020698cfb93508d244eaf704","tarball":"https://registry.npmjs.org/ember-modifier/-/ember-modifier-4.0.0-beta.1-unstable.65f02b3.tgz","fileCount":15,"integrity":"sha512-TcDikCm3jF1k6gHX/7OOx3Ygx7Fcoqz/J9Po7Cp5GGfvnx6o2bLGHotq4kUQfGYCquooJPyvEj1ZqGbD6M2I1Q==","signatures":[{"sig":"MEUCIQC7PT+SAbBPxBRu2RSdQLSAYzw46C+8fjkkFRVWnIJ8LgIgLNsryW5lRRjwhl9JEFi0mHEOK8Ee+HfCt7fUdFpOu/A=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":47092,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjkBIAACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmp99g//aSKUkJ9YkIfd5fV8Ng59XMhOSCt2QEyOhIbViOyNIkoHJprK\r\nImczZigT7r42GTYj87zRLdKab6yOCLX54Pl2hsvgu0GABi6Gsv8/f3iBV/57\r\ngoUp4hcG/1K9A/abqLnORpU6i5syf7fSOC8XL66HVmfkbWKlWZz+CsgkWMj/\r\npilAQUPfJJlfYRYi6b1DWERqpjWA29ZcINMGRjcCdcgRdYciJvipITFEpys0\r\nJ6Fp/vnC8rPqeoZkaOiCSyai2O2q0sJdTEzSwA8NTf+2TsldVR8R7TK0nLYI\r\n9pdSaf7VaNa1vTygU0qh9jtPJENh/W2MYV7qGCQwpqX0+EAay0dHYoFh6XKi\r\n2An5+ET8D1sSPrkLHW7bZDhiaCU50DFqUt3A5Ks7tA0H7x0hAHat86yr3l3a\r\nSKypblZ8DaQQZDaa9SIe+f7a5Lrkn9hVPO7XyJKB9GeZYLYnG/vX622kHHr7\r\n4CBdm382n4S14Q28mOPmDmf1e9td4DQt/IRQFy9MUfPazozoZDznfVXANNZO\r\nU8dDFjBqkPoeCtGxrF23jgvzUryNtZeVl4+maKafcaX6QJzgW5FgcdKZBrPG\r\nTN87l1a3BurnWnDei64ns1ffA7BW8j/sFyowPlichZohiqzpmB8/Q4g9TFf0\r\nUFHRK71+L6n0NE/WghfB+S0o+NoIVngVOuo=\r\n=z1sq\r\n-----END PGP SIGNATURE-----\r\n"},"ember":{"edition":"octane"},"volta":{"extends":"../package.json"},"readme":"ERROR: No README data found!","engines":{"node":"14.* || 16.* || >= 18"},"exports":{".":"./dist/index.js","./*":"./dist/*","./addon-main.js":"./addon-main.js"},"gitHead":"65f02b3d181894c2e2f0f5bccf0953aae9ebedc1","scripts":{"lint":"eslint . --cache --ext .ts,.js","test":"echo 'A v2 addon does not have tests, run tests in test-app'","build":"rollup --config","start":"rollup --config --watch","lint:fix":"eslint . --fix --ext .ts,.js","typecheck":"tsc --noEmit","prepublishOnly":"rollup --config"},"_npmUser":{"name":"sergeastapov","email":"sergeastapov@gmail.com"},"repository":{"url":"git+https://github.com/ember-modifier/ember-modifier.git","type":"git"},"_npmVersion":"8.19.3","description":"A library for writing Ember modifiers","directories":{},"ember-addon":{"main":"addon-main.js","type":"addon","version":2,"versionCompatibility":{"ember":"3.24 || >=4.0"}},"_nodeVersion":"14.21.1","dependencies":{"@embroider/addon-shim":"^1.8.4","ember-cli-string-utils":"^1.1.0","ember-cli-normalize-entity-name":"^1.0.0"},"publishConfig":{"registry":"https://registry.npmjs.org"},"typesVersions":{"*":{"*":["./dist/*"],".":["./dist/index.d.ts"],"./-private/signature":["./dist/-private/signature.d.ts"]}},"_hasShrinkwrap":false,"devDependencies":{"eslint":"^8.28.0","rollup":"^3.5.1","prettier":"^2.8.0","typescript":"^4.9.3","@babel/core":"^7.20.5","@types/rsvp":"^4.0.4","expect-type":"^0.15.0","@tsconfig/ember":"^1.1.0","rollup-plugin-ts":"^3.0.2","ember-cli-htmlbars":"^6.1.1","eslint-plugin-node":"^11.1.0","@types/ember__debug":"^4.0.3","@types/ember__owner":"^4.0.2","eslint-plugin-ember":"^11.2.1","@embroider/addon-dev":"^3.0.0","@types/ember-resolver":"^5.0.13","@types/ember__modifier":"^4.0.3","eslint-config-prettier":"^8.5.0","eslint-plugin-prettier":"^4.2.1","@babel/preset-typescript":"^7.18.6","@types/ember__application":"^4.0.4","@types/ember__destroyable":"^4.0.1","@typescript-eslint/parser":"^5.45.1","ember-destroyable-polyfill":"^2.0.3","@babel/plugin-syntax-decorators":"^7.17.0","@typescript-eslint/eslint-plugin":"^5.45.0","@babel/plugin-proposal-decorators":"^7.20.5","@babel/plugin-proposal-class-properties":"^7.18.6"},"peerDependencies":{"ember-source":"*"},"peerDependenciesMeta":{"ember-source":{"optional":true}},"_npmOperationalInternal":{"tmp":"tmp/ember-modifier_4.0.0-beta.1-unstable.65f02b3_1670386175978_0.01467567774732026","host":"s3://npm-registry-packages"}},"4.0.0-beta.1-unstable.2b3475c":{"name":"ember-modifier","version":"4.0.0-beta.1-unstable.2b3475c","keywords":["ember-addon"],"author":"","license":"MIT","_id":"ember-modifier@4.0.0-beta.1-unstable.2b3475c","maintainers":[{"name":"rwjblue","email":"me@rwjblue.com"},{"name":"chriskrycho","email":"chris@chriskrycho.com"},{"name":"pzuraq","email":"opensource@pzuraq.com"},{"name":"sergeastapov","email":"sergeastapov@gmail.com"}],"homepage":"https://github.com/ember-modifier/ember-modifier#readme","bugs":{"url":"https://github.com/ember-modifier/ember-modifier/issues"},"dist":{"shasum":"948a946e4c84de08af1c13e02adac8577a3561a7","tarball":"https://registry.npmjs.org/ember-modifier/-/ember-modifier-4.0.0-beta.1-unstable.2b3475c.tgz","fileCount":15,"integrity":"sha512-FG6P9oMcULOwkVzWaSUd9OZu/17JHLvmPnNE+AzBk7ZJVye87B3cMG0rJqOFpBhSo7wDG3ALIM6KtdCH4HKtoQ==","signatures":[{"sig":"MEYCIQCWmUgo7rYQoxLmoM6uAYYSpdZDrBcIp9e4zh7hq0pIFgIhAK/xkHN8QXOFBvFQ3f2H1NNSp7vYBlxLuePoTSm7iqls","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":47088,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjkItdACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrYsRAAn1PuF+MhAbsm8iwaYp+Hz2RvCUrZESfBxnND2H6ayNsSAPiu\r\nIwubfwFWYnFWWwTBm7vEDHSUSY7k4q14Vfho33pj8HTLzb7qEFD2TmGa/1Nc\r\nI05R40Vf5wOpt5bQ/ocOR0xZStFD2o0S/xyUfQuK8oKi8HDZbZJsbcD4b993\r\nz/c6EvYrXl4sFngjDxMco65itrfokMEzLSNumkLAEZcK037zMTGuEtiKtWpc\r\nITTjdEaCko7hvuSSakXNlFWR1l8K3JNmna9RMiqPTrmt68w3yw/TlArL/7la\r\nywWFDsvivXsaoO99tDT/mft3j6yiRtjZIDlfFA9MGM+4nFH4apB19SHUHP9B\r\nxRK1ELHYtbeuRJy5sNZePfqOG4S3TH1FcY8f56QZ3M1JDeedZVa3LT+jy+6N\r\nddFUWY3h+i/xp4Uk1KITg6N70jlsIGmR853IvP4VcipqFSVeSNnxbF3LQMka\r\nQBvvobYgmXj5Z1CXUUw71bT/o65m4uQj++5U59ZT0egvYWqqg7TZG5nG6Jpg\r\nKgXvVe4u+46RUibvG4yPzmxVidU9OcJ+HBOwA9ZqTdo48UwGXnrJ/GYhIpYl\r\nKISblCcSEslVDX5CBouCyATgvMKOo/f9p41+Gwxvn+JRht95+h59GafPAYlE\r\nDfinneqPuGTmrQBMSXYuUA9aNCV7Vl3xT6s=\r\n=SMDJ\r\n-----END PGP SIGNATURE-----\r\n"},"ember":{"edition":"octane"},"volta":{"extends":"../package.json"},"readme":"ERROR: No README data found!","engines":{"node":"14.* || 16.* || >= 18"},"exports":{".":"./dist/index.js","./*":"./dist/*","./addon-main.js":"./addon-main.js"},"gitHead":"2b3475ce9ff19824ee2f8a76150b7ca2837a4569","scripts":{"lint":"eslint . --cache --ext .ts,.js","test":"echo 'A v2 addon does not have tests, run tests in test-app'","build":"rollup --config","start":"rollup --config --watch","lint:fix":"eslint . --fix --ext .ts,.js","typecheck":"tsc --noEmit","prepublishOnly":"rollup --config"},"_npmUser":{"name":"sergeastapov","email":"sergeastapov@gmail.com"},"repository":{"url":"git+https://github.com/ember-modifier/ember-modifier.git","type":"git"},"_npmVersion":"8.19.3","description":"A library for writing Ember modifiers","directories":{},"ember-addon":{"main":"addon-main.js","type":"addon","version":2,"versionCompatibility":{"ember":"3.24 || >=4.0"}},"_nodeVersion":"14.21.1","dependencies":{"@embroider/addon-shim":"^1.8.4","ember-cli-string-utils":"^1.1.0","ember-cli-normalize-entity-name":"^1.0.0"},"publishConfig":{"registry":"https://registry.npmjs.org"},"typesVersions":{"*":{"*":["./dist/*"],".":["./dist/index.d.ts"],"./-private/signature":["./dist/-private/signature.d.ts"]}},"_hasShrinkwrap":false,"devDependencies":{"eslint":"^8.29.0","rollup":"^3.5.1","prettier":"^2.8.0","typescript":"^4.9.3","@babel/core":"^7.20.5","@types/rsvp":"^4.0.4","expect-type":"^0.15.0","@tsconfig/ember":"^1.1.0","rollup-plugin-ts":"^3.0.2","ember-cli-htmlbars":"^6.1.1","eslint-plugin-node":"^11.1.0","@types/ember__debug":"^4.0.3","@types/ember__owner":"^4.0.2","eslint-plugin-ember":"^11.2.1","@embroider/addon-dev":"^3.0.0","@types/ember-resolver":"^5.0.13","@types/ember__modifier":"^4.0.3","eslint-config-prettier":"^8.5.0","eslint-plugin-prettier":"^4.2.1","@babel/preset-typescript":"^7.18.6","@types/ember__application":"^4.0.4","@types/ember__destroyable":"^4.0.1","@typescript-eslint/parser":"^5.45.1","ember-destroyable-polyfill":"^2.0.3","@babel/plugin-syntax-decorators":"^7.17.0","@typescript-eslint/eslint-plugin":"^5.45.0","@babel/plugin-proposal-decorators":"^7.20.5","@babel/plugin-proposal-class-properties":"^7.18.6"},"peerDependencies":{"ember-source":"*"},"peerDependenciesMeta":{"ember-source":{"optional":true}},"_npmOperationalInternal":{"tmp":"tmp/ember-modifier_4.0.0-beta.1-unstable.2b3475c_1670417245568_0.8624240573100197","host":"s3://npm-registry-packages"}},"4.0.0-beta.1-unstable.87601a9":{"name":"ember-modifier","version":"4.0.0-beta.1-unstable.87601a9","keywords":["ember-addon"],"author":"","license":"MIT","_id":"ember-modifier@4.0.0-beta.1-unstable.87601a9","maintainers":[{"name":"rwjblue","email":"me@rwjblue.com"},{"name":"chriskrycho","email":"chris@chriskrycho.com"},{"name":"pzuraq","email":"opensource@pzuraq.com"},{"name":"sergeastapov","email":"sergeastapov@gmail.com"}],"homepage":"https://github.com/ember-modifier/ember-modifier#readme","bugs":{"url":"https://github.com/ember-modifier/ember-modifier/issues"},"dist":{"shasum":"8063a141e14514f9462476dc319e466db33a1127","tarball":"https://registry.npmjs.org/ember-modifier/-/ember-modifier-4.0.0-beta.1-unstable.87601a9.tgz","fileCount":15,"integrity":"sha512-D1TptdvyygQ241FVvMRKsRE6dJVJkIinUajw2l9H89irlZRIWnhnqajN+EmWOT6svAxlF6inQDkiLVtKXOR8xQ==","signatures":[{"sig":"MEQCIBSjKB4WfwpRgIMx9daLq8AXP22XS9XJ5k+7a1wif78rAiAg/MlqANcYax2bHyxwbTzZpqlI/sCN6quAwsx3wpJr2A==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":47088,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjkWV0ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmpqew/9HpEIOOdackhCQHMNXWjPtsS1qgEBAHIovdz1FXFFUKjZKKC9\r\nV1wYs/jiTAttpmy2Fy6uFTvracmroD4IVAMDKEmBOjVjr6WXmJLMV4LlxPsh\r\ntVG0B0ZdKvcqI83N+5p84Y+JqAYQ4Fhp+w+DrYpuLQrWKMHAJBrGMZxUhDG9\r\n8qWH0hRMpx1OI+ig2FZ1O+VJ9Bjy9d+Qdv4cYOWokJ4PkAL3HHY+zlovB/U+\r\nuyIhF8odN+qI3JtcKJjWGELhyVCuYLajqvsUYwRICuh6sB7Y6w2eWsyBjHy5\r\n1f9F1VndCfOEPTQOAEtnI/g1JoRS85UFelR6dmpQuYyWXwTAeixvPv9AZjxl\r\nIFHUNZpHaC119+YSx+44chBYMg/kTJM+BZNl/SIjqHIfaYAmq17UEksCSMmA\r\n68BaYneIwOTZ1BNLs9LJgz18oqic5seqJYqSbTRvkTb3teOa1CKcVeRmWMG1\r\nwo5B47glu1olG9AJ/UaCUvzLPmarLXopS3Q/u24j56NDUsbX1jH4O1IShD/g\r\nVnaEzsrMReaVj4aoLraQm2PqWoIzdhCRctwp3YToMyL9AEu/tscVhdihZET9\r\nrGjqO7uKi0fnPgvOq3oxtGWuou9917SmWqlMn5MvZm5wvux1Is4qrPdLLTSC\r\nTZUgKvE0i4bCf7/Pp7YomYW/l6uX8LL9cAM=\r\n=e3kR\r\n-----END PGP SIGNATURE-----\r\n"},"ember":{"edition":"octane"},"volta":{"extends":"../package.json"},"readme":"ERROR: No README data found!","engines":{"node":"14.* || 16.* || >= 18"},"exports":{".":"./dist/index.js","./*":"./dist/*","./addon-main.js":"./addon-main.js"},"gitHead":"87601a9e988dede8914bf9916c81ae1ba1dac2b5","scripts":{"lint":"eslint . --cache --ext .ts,.js","test":"echo 'A v2 addon does not have tests, run tests in test-app'","build":"rollup --config","start":"rollup --config --watch","lint:fix":"eslint . --fix --ext .ts,.js","typecheck":"tsc --noEmit","prepublishOnly":"rollup --config"},"_npmUser":{"name":"sergeastapov","email":"sergeastapov@gmail.com"},"repository":{"url":"git+https://github.com/ember-modifier/ember-modifier.git","type":"git"},"_npmVersion":"8.19.3","description":"A library for writing Ember modifiers","directories":{},"ember-addon":{"main":"addon-main.js","type":"addon","version":2,"versionCompatibility":{"ember":"3.24 || >=4.0"}},"_nodeVersion":"14.21.1","dependencies":{"@embroider/addon-shim":"^1.8.4","ember-cli-string-utils":"^1.1.0","ember-cli-normalize-entity-name":"^1.0.0"},"publishConfig":{"registry":"https://registry.npmjs.org"},"typesVersions":{"*":{"*":["./dist/*"],".":["./dist/index.d.ts"],"./-private/signature":["./dist/-private/signature.d.ts"]}},"_hasShrinkwrap":false,"devDependencies":{"eslint":"^8.29.0","rollup":"^3.6.0","prettier":"^2.8.0","typescript":"^4.9.3","@babel/core":"^7.20.5","@types/rsvp":"^4.0.4","expect-type":"^0.15.0","@tsconfig/ember":"^1.1.0","rollup-plugin-ts":"^3.0.2","ember-cli-htmlbars":"^6.1.1","eslint-plugin-node":"^11.1.0","@types/ember__debug":"^4.0.3","@types/ember__owner":"^4.0.2","eslint-plugin-ember":"^11.2.1","@embroider/addon-dev":"^3.0.0","@types/ember-resolver":"^5.0.13","@types/ember__modifier":"^4.0.3","eslint-config-prettier":"^8.5.0","eslint-plugin-prettier":"^4.2.1","@babel/preset-typescript":"^7.18.6","@types/ember__application":"^4.0.4","@types/ember__destroyable":"^4.0.1","@typescript-eslint/parser":"^5.45.1","ember-destroyable-polyfill":"^2.0.3","@babel/plugin-syntax-decorators":"^7.17.0","@typescript-eslint/eslint-plugin":"^5.45.0","@babel/plugin-proposal-decorators":"^7.20.5","@babel/plugin-proposal-class-properties":"^7.18.6"},"peerDependencies":{"ember-source":"*"},"peerDependenciesMeta":{"ember-source":{"optional":true}},"_npmOperationalInternal":{"tmp":"tmp/ember-modifier_4.0.0-beta.1-unstable.87601a9_1670473076246_0.0033396432428132172","host":"s3://npm-registry-packages"}},"4.0.0-beta.1-unstable.370b2be":{"name":"ember-modifier","version":"4.0.0-beta.1-unstable.370b2be","keywords":["ember-addon"],"author":"","license":"MIT","_id":"ember-modifier@4.0.0-beta.1-unstable.370b2be","maintainers":[{"name":"rwjblue","email":"me@rwjblue.com"},{"name":"chriskrycho","email":"chris@chriskrycho.com"},{"name":"pzuraq","email":"opensource@pzuraq.com"},{"name":"sergeastapov","email":"sergeastapov@gmail.com"}],"homepage":"https://github.com/ember-modifier/ember-modifier#readme","bugs":{"url":"https://github.com/ember-modifier/ember-modifier/issues"},"dist":{"shasum":"bba82893ca0b0a2a08b79d7da302125cd2840443","tarball":"https://registry.npmjs.org/ember-modifier/-/ember-modifier-4.0.0-beta.1-unstable.370b2be.tgz","fileCount":15,"integrity":"sha512-Fp0j2CnMzNnzsO9Eu39JPKZ8jt6zPADx1KKW10sT9Fygh45LVRHVMqMg6ApSe0St4ku2kAjb5QY1v/Yes+bBig==","signatures":[{"sig":"MEYCIQDWong2bT1dYggwVh91mF823DUEykLsYMYHrDry2A8f9gIhANAeXJIAZRueQ5mhmW5VVsIJ7ttr9riC6xXtnHr4oD4B","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":47088,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjkrWHACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmoJKQ//UNZaTEylW79jqn+gSU33MYh/hc69zkjDxnUS2fqr5wgJFEKd\r\nfOno3wjkZYQ5udRwrMqRlW9wqSWHxUdWZLe02GgCnIG84FX5voAC8v0Rayuz\r\nfXfdjydFN5y6QmWILRRcR34+btl+tFPqUCm8zhR3/1Ec9VfqJcrBuhH6tTlG\r\nxebIzg5cDrqPbLiuGp5aJQGmAUOGLDYaZ+WY939C/EEViY0R0KGUHUpXwcuf\r\nfs8wPqDjgapz8Pp1y44eC+bqjsgOxxnLhtEqxmvdqPNYTZi1q37Ip6+JJrG/\r\nsacaBNR6abEbecZ7jPbRYICGoM69iGMGIkE8tEyhCyJF4MH54W2eNpVhS8zw\r\nruXYc0NprxhkUgXLsdwdZa9S69jj8wremqnlIcwgRngE3xQgDvrxmftduS/r\r\n3HjtMq/TMXWYZaGURKP0NudyovFTHyxcSNUhRpiF9nVCJzi6qctE7N61j8Lj\r\nn6CPAERQiazGnqUbeY+zn20Q7JcC6RhfvMRJtAdhdimuYTDXq6pli1I2aX0l\r\nKlDA05qlP50UwxSo6jdkTfl1Lv647VEL5ffz+LUJn3+dKrh4vetGjwkLylVH\r\nmad+FN7m1TtzFLXdpzaA33hm7Bvr5FUPQC4cS0DU2kZ0aA09+u9cAtQGTXlv\r\nBP29fyT1WHhnou8/YYRIJbWDJ4uzArppk7k=\r\n=AgPW\r\n-----END PGP SIGNATURE-----\r\n"},"ember":{"edition":"octane"},"volta":{"extends":"../package.json"},"readme":"ERROR: No README data found!","engines":{"node":"14.* || 16.* || >= 18"},"exports":{".":"./dist/index.js","./*":"./dist/*","./addon-main.js":"./addon-main.js"},"gitHead":"370b2be92d0e556f0447034036fea41b829ad813","scripts":{"lint":"eslint . --cache --ext .ts,.js","test":"echo 'A v2 addon does not have tests, run tests in test-app'","build":"rollup --config","start":"rollup --config --watch","lint:fix":"eslint . --fix --ext .ts,.js","typecheck":"tsc --noEmit","prepublishOnly":"rollup --config"},"_npmUser":{"name":"sergeastapov","email":"sergeastapov@gmail.com"},"repository":{"url":"git+https://github.com/ember-modifier/ember-modifier.git","type":"git"},"_npmVersion":"8.19.3","description":"A library for writing Ember modifiers","directories":{},"ember-addon":{"main":"addon-main.js","type":"addon","version":2,"versionCompatibility":{"ember":"3.24 || >=4.0"}},"_nodeVersion":"14.21.1","dependencies":{"@embroider/addon-shim":"^1.8.4","ember-cli-string-utils":"^1.1.0","ember-cli-normalize-entity-name":"^1.0.0"},"publishConfig":{"registry":"https://registry.npmjs.org"},"typesVersions":{"*":{"*":["./dist/*"],".":["./dist/index.d.ts"],"./-private/signature":["./dist/-private/signature.d.ts"]}},"_hasShrinkwrap":false,"devDependencies":{"eslint":"^8.29.0","rollup":"^3.6.0","prettier":"^2.8.0","typescript":"^4.9.3","@babel/core":"^7.20.5","@types/rsvp":"^4.0.4","expect-type":"^0.15.0","@tsconfig/ember":"^1.1.0","rollup-plugin-ts":"^3.0.2","ember-cli-htmlbars":"^6.1.1","eslint-plugin-node":"^11.1.0","@types/ember__debug":"^4.0.3","@types/ember__owner":"^4.0.2","eslint-plugin-ember":"^11.2.1","@embroider/addon-dev":"^3.0.0","@types/ember-resolver":"^5.0.13","@types/ember__modifier":"^4.0.3","eslint-config-prettier":"^8.5.0","eslint-plugin-prettier":"^4.2.1","@babel/preset-typescript":"^7.18.6","@types/ember__application":"^4.0.4","@types/ember__destroyable":"^4.0.1","@typescript-eslint/parser":"^5.45.1","ember-destroyable-polyfill":"^2.0.3","@babel/plugin-syntax-decorators":"^7.17.0","@typescript-eslint/eslint-plugin":"^5.45.0","@babel/plugin-proposal-decorators":"^7.20.5","@babel/plugin-proposal-class-properties":"^7.18.6"},"peerDependencies":{"ember-source":"*"},"peerDependenciesMeta":{"ember-source":{"optional":true}},"_npmOperationalInternal":{"tmp":"tmp/ember-modifier_4.0.0-beta.1-unstable.370b2be_1670559111431_0.7938413073191379","host":"s3://npm-registry-packages"}},"4.0.0-beta.1-unstable.97f3b6b":{"name":"ember-modifier","version":"4.0.0-beta.1-unstable.97f3b6b","keywords":["ember-addon"],"author":"","license":"MIT","_id":"ember-modifier@4.0.0-beta.1-unstable.97f3b6b","maintainers":[{"name":"rwjblue","email":"me@rwjblue.com"},{"name":"chriskrycho","email":"chris@chriskrycho.com"},{"name":"pzuraq","email":"opensource@pzuraq.com"},{"name":"sergeastapov","email":"sergeastapov@gmail.com"}],"homepage":"https://github.com/ember-modifier/ember-modifier#readme","bugs":{"url":"https://github.com/ember-modifier/ember-modifier/issues"},"dist":{"shasum":"5e45139736380cd429d0d60a2fce93e94760ca16","tarball":"https://registry.npmjs.org/ember-modifier/-/ember-modifier-4.0.0-beta.1-unstable.97f3b6b.tgz","fileCount":15,"integrity":"sha512-YzXHLJi3+BsNGBj+3/uu9IZDiMq6OHna+RbsRQYk/9h5G7wmgYS7h4p8XE9U7AlWWgdCnHGJ5D5H0mnPQvkzdQ==","signatures":[{"sig":"MEUCIQDtXaREama2lT0r8fZHqlH/3k2nuv4JLtK5dZEhvUWk8AIgEQDOLrteoxaDQN5i5u2WXOlq0B55dlbGWRHrvx6qduA=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":47088,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjkrcHACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmp4Ng/+IuI0cPq7c6RaCYc0sk9nkzT7buB4yxmYmpVNmwL81rPanlOL\r\nw4fDK2rvvIYDzcoRI3EyiECaxtqM6wv/1aEWWcN9eURag93DTo8H3+r4u+Yw\r\nXQnoVGCLDSGwWyFOggM3Hqeg15Bh9ORvRgBYCg/1zUg4nty7Wrfp9tL/1Q97\r\nJAEV3YykqzTZVFdxllKOrX2nBW1/uguV5DCiHHjZXK1DxbjDBZ8G2PYLFGbi\r\n/YZPcM7YC3NQFkJrDUHw0JVkTiKGNZ6tFOnrHHmNLFfdHuRP5VMz8TVipalP\r\nVNaLc79WWxXRJHzVjToQucXj7k/P/Oi/BIFb0E8oW0nBN98keCNn2gR6rz5c\r\njFajFvXTsnNWUIV9WHpWdbF6SA7ztEdU31WTp8sj53UY2clAYMT/O0kE7WRK\r\nIxR9eExtBuipqtgey+KNrqw2eTRHL6CI3pHRjONQPkEYNdXDbJ6Etl9n2QPa\r\nPfc0HqsT95oblE2DU/DScySOx08F3NXPn7SneRAXxpRKk9sEcDXKw0MWhb5u\r\nelwmkGgs+dB3vvDBnzmaun6nRZ8u3DNnVeMFJrVKEDSrWsnTAktpRd0Js/E9\r\nPAytFw1SEJL0cfPp2YAkT93jkUqvLX5NU2TnzCY585sz5htftk+6oQk8aVNR\r\nzvtCGNVJwU+2M+9XNkt1r10pa85VNkxz47k=\r\n=rspH\r\n-----END PGP SIGNATURE-----\r\n"},"ember":{"edition":"octane"},"volta":{"extends":"../package.json"},"readme":"ERROR: No README data found!","engines":{"node":"14.* || 16.* || >= 18"},"exports":{".":"./dist/index.js","./*":"./dist/*","./addon-main.js":"./addon-main.js"},"gitHead":"97f3b6bc8f94c9f5fd7a1bf4dc6cdb4745b6f7fd","scripts":{"lint":"eslint . --cache --ext .ts,.js","test":"echo 'A v2 addon does not have tests, run tests in test-app'","build":"rollup --config","start":"rollup --config --watch","lint:fix":"eslint . --fix --ext .ts,.js","typecheck":"tsc --noEmit","prepublishOnly":"rollup --config"},"_npmUser":{"name":"sergeastapov","email":"sergeastapov@gmail.com"},"repository":{"url":"git+https://github.com/ember-modifier/ember-modifier.git","type":"git"},"_npmVersion":"8.19.3","description":"A library for writing Ember modifiers","directories":{},"ember-addon":{"main":"addon-main.js","type":"addon","version":2,"versionCompatibility":{"ember":"3.24 || >=4.0"}},"_nodeVersion":"14.21.1","dependencies":{"@embroider/addon-shim":"^1.8.4","ember-cli-string-utils":"^1.1.0","ember-cli-normalize-entity-name":"^1.0.0"},"publishConfig":{"registry":"https://registry.npmjs.org"},"typesVersions":{"*":{"*":["./dist/*"],".":["./dist/index.d.ts"],"./-private/signature":["./dist/-private/signature.d.ts"]}},"_hasShrinkwrap":false,"devDependencies":{"eslint":"^8.29.0","rollup":"^3.6.0","prettier":"^2.8.0","typescript":"^4.9.3","@babel/core":"^7.20.5","@types/rsvp":"^4.0.4","expect-type":"^0.15.0","@tsconfig/ember":"^1.1.0","rollup-plugin-ts":"^3.0.2","ember-cli-htmlbars":"^6.1.1","eslint-plugin-node":"^11.1.0","@types/ember__debug":"^4.0.3","@types/ember__owner":"^4.0.2","eslint-plugin-ember":"^11.2.1","@embroider/addon-dev":"^3.0.0","@types/ember-resolver":"^5.0.13","@types/ember__modifier":"^4.0.3","eslint-config-prettier":"^8.5.0","eslint-plugin-prettier":"^4.2.1","@babel/preset-typescript":"^7.18.6","@types/ember__application":"^4.0.4","@types/ember__destroyable":"^4.0.1","@typescript-eslint/parser":"^5.45.1","ember-destroyable-polyfill":"^2.0.3","@babel/plugin-syntax-decorators":"^7.17.0","@typescript-eslint/eslint-plugin":"^5.46.0","@babel/plugin-proposal-decorators":"^7.20.5","@babel/plugin-proposal-class-properties":"^7.18.6"},"peerDependencies":{"ember-source":"*"},"peerDependenciesMeta":{"ember-source":{"optional":true}},"_npmOperationalInternal":{"tmp":"tmp/ember-modifier_4.0.0-beta.1-unstable.97f3b6b_1670559495538_0.6532255832128291","host":"s3://npm-registry-packages"}},"4.0.0-beta.1-unstable.1f2b8c6":{"name":"ember-modifier","version":"4.0.0-beta.1-unstable.1f2b8c6","keywords":["ember-addon"],"author":"","license":"MIT","_id":"ember-modifier@4.0.0-beta.1-unstable.1f2b8c6","maintainers":[{"name":"rwjblue","email":"me@rwjblue.com"},{"name":"chriskrycho","email":"chris@chriskrycho.com"},{"name":"pzuraq","email":"opensource@pzuraq.com"},{"name":"sergeastapov","email":"sergeastapov@gmail.com"}],"homepage":"https://github.com/ember-modifier/ember-modifier#readme","bugs":{"url":"https://github.com/ember-modifier/ember-modifier/issues"},"dist":{"shasum":"e180d73661757e3b067a47d0d8cde61cc6fb060b","tarball":"https://registry.npmjs.org/ember-modifier/-/ember-modifier-4.0.0-beta.1-unstable.1f2b8c6.tgz","fileCount":15,"integrity":"sha512-HD+MrEEe5rRzSmc+7L1rjaTptx23JeVGazkysvvgzlSzGZ+7Gd2mJQPYRrUSqTH8ODd0+8T6uvL/g2DS/DVHKw==","signatures":[{"sig":"MEUCIQCJK6t0GNtxDQkHGHg3nsxZYI9NOcaOvdEtCxN6Ljh+mQIgYRHntgHfwjWiWUL7400TW2X2nJGoSPeWphVCEiyYlUM=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":47088,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjkrt3ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmqb0Q//T8IJz30QYNQT5QribIjsy0YOpXKjdTLUWLsQUHsvb1j9BGuc\r\nz7vB3LHLuQf7Gbkq7/UDzidkGfYDZruxxY/wTkp7SkLcZlT0NahHU3e41gOg\r\ntg+6MXSKgfUKL+GiA8T1KI/NED7V1ZGiwnerf1SFh1QwAljIXGlx3P/nk/+D\r\nGe97rihXS+bZ6gTz150iG6ikRdGDc/PNXUEt3xMmLCFemojCNNp7Him6ws+x\r\nLahZnRyyQNrr8hsNBi8w8uZmAanOKkqAkeb8DSx4tXY4qV+35hX4w/5Oimjk\r\nQUmAcVKjZru4YGbehNMefqIlNQUm3PTeeIM+8XOpYFctE3kw5LCaopsNrxb3\r\nGgPWsFOE1HbJC/JnmsFJET06GvONf7jV8iUrCe2tKRXawn3DLjYSdVE37VsL\r\nkjAQAux7IaPxPRrkGaddCGfk80k97HKMxKlobuC/WxtiYZyNKYKP8dv9NcEe\r\n5HgK6JIgKjTZQ/ijBGIKuXytEjQnLDBXenSdnUJROu17D116MJHmBzLL5tFH\r\nK9qTWMbAgfXQ8tclnSEruX7jKCgjJJLR1vcsb5WoJa1h/GYset0E7H28+JMy\r\nPSakpAN0W3j2KYR8bBx5Ey1OSyNYKZpzOuqnh/ISE3jcE5HlVUkXFhSLS57J\r\ngXpjL0586teBTXQoAT8XEtql7pSk/3NYkaI=\r\n=f+pX\r\n-----END PGP SIGNATURE-----\r\n"},"ember":{"edition":"octane"},"volta":{"extends":"../package.json"},"readme":"ERROR: No README data found!","engines":{"node":"14.* || 16.* || >= 18"},"exports":{".":"./dist/index.js","./*":"./dist/*","./addon-main.js":"./addon-main.js"},"gitHead":"1f2b8c659b59cfeff961011c19ccd4cf65cd74c0","scripts":{"lint":"eslint . --cache --ext .ts,.js","test":"echo 'A v2 addon does not have tests, run tests in test-app'","build":"rollup --config","start":"rollup --config --watch","lint:fix":"eslint . --fix --ext .ts,.js","typecheck":"tsc --noEmit","prepublishOnly":"rollup --config"},"_npmUser":{"name":"sergeastapov","email":"sergeastapov@gmail.com"},"repository":{"url":"git+https://github.com/ember-modifier/ember-modifier.git","type":"git"},"_npmVersion":"8.19.3","description":"A library for writing Ember modifiers","directories":{},"ember-addon":{"main":"addon-main.js","type":"addon","version":2,"versionCompatibility":{"ember":"3.24 || >=4.0"}},"_nodeVersion":"14.21.1","dependencies":{"@embroider/addon-shim":"^1.8.4","ember-cli-string-utils":"^1.1.0","ember-cli-normalize-entity-name":"^1.0.0"},"publishConfig":{"registry":"https://registry.npmjs.org"},"typesVersions":{"*":{"*":["./dist/*"],".":["./dist/index.d.ts"],"./-private/signature":["./dist/-private/signature.d.ts"]}},"_hasShrinkwrap":false,"devDependencies":{"eslint":"^8.29.0","rollup":"^3.6.0","prettier":"^2.8.0","typescript":"^4.9.3","@babel/core":"^7.20.5","@types/rsvp":"^4.0.4","expect-type":"^0.15.0","@tsconfig/ember":"^1.1.0","rollup-plugin-ts":"^3.0.2","ember-cli-htmlbars":"^6.1.1","eslint-plugin-node":"^11.1.0","@types/ember__debug":"^4.0.3","@types/ember__owner":"^4.0.2","eslint-plugin-ember":"^11.2.1","@embroider/addon-dev":"^3.0.0","@types/ember-resolver":"^5.0.13","@types/ember__modifier":"^4.0.3","eslint-config-prettier":"^8.5.0","eslint-plugin-prettier":"^4.2.1","@babel/preset-typescript":"^7.18.6","@types/ember__application":"^4.0.4","@types/ember__destroyable":"^4.0.1","@typescript-eslint/parser":"^5.45.1","ember-destroyable-polyfill":"^2.0.3","@babel/plugin-syntax-decorators":"^7.17.0","@typescript-eslint/eslint-plugin":"^5.46.0","@babel/plugin-proposal-decorators":"^7.20.5","@babel/plugin-proposal-class-properties":"^7.18.6"},"peerDependencies":{"ember-source":"*"},"peerDependenciesMeta":{"ember-source":{"optional":true}},"_npmOperationalInternal":{"tmp":"tmp/ember-modifier_4.0.0-beta.1-unstable.1f2b8c6_1670560631608_0.9816927036991379","host":"s3://npm-registry-packages"}},"4.0.0-beta.1-unstable.3da5e16":{"name":"ember-modifier","version":"4.0.0-beta.1-unstable.3da5e16","keywords":["ember-addon"],"author":"","license":"MIT","_id":"ember-modifier@4.0.0-beta.1-unstable.3da5e16","maintainers":[{"name":"rwjblue","email":"me@rwjblue.com"},{"name":"chriskrycho","email":"chris@chriskrycho.com"},{"name":"pzuraq","email":"opensource@pzuraq.com"},{"name":"sergeastapov","email":"sergeastapov@gmail.com"}],"homepage":"https://github.com/ember-modifier/ember-modifier#readme","bugs":{"url":"https://github.com/ember-modifier/ember-modifier/issues"},"dist":{"shasum":"0a5ca7f542c3e6654ed9775e4f8a1aca86dbffe9","tarball":"https://registry.npmjs.org/ember-modifier/-/ember-modifier-4.0.0-beta.1-unstable.3da5e16.tgz","fileCount":15,"integrity":"sha512-fe/525eRngEg9ctKY+/UZ7N0NBQx/Y+IOV4+o89uF3Ga301l5GlESiIx4JRSaH4oeJ287AiJzP08WERgvU+FCA==","signatures":[{"sig":"MEUCIQD09DRJ3z44tJSPvO0lKJMUElnTfEtqhGMMFZX3J6xe6wIgAzJOZBzsHQCLy1JsaB/yNHBXLnGsDJSO3IzpJqrjEsU=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":47092,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjkyl6ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpEFw/+NRvCLts0KE060D3H5cNfvyaBnRgeFXwIaXh8udX+DFAw3XBT\r\nJHeLUy9lFqNwW5Rv8XfS2jA+eFoMJYbBzRP+zgJKbX6A8d64dt0K54t+pDVZ\r\nXBH65GwZiRA501xYVMMEONy5du12EVILcEEeggnEzcEgg4Geb/I+/4HaHu22\r\nvqfvzQzu2dGKuigfpnBLKlUxqwdpQ6bhqPRxuTm06Bl/Kjn00d6k7QaxmI2d\r\nJIdYVI97oUMXG58Xa6dUzdruILVzMFth7OY7TacwuRABE0ttKmHngq1GwW2x\r\nzBXbKJTrczrJEiL5+RwyQWI+4zRPGGTnf5zU2ILhqXp1VuMyXvTwzDotu/4U\r\nz2JU1HUijiV65oIL/Wa7V4xfxF6ZHNPXZ+dtrJ0UQQxCBxB3AorH9VMRMrUL\r\nz1qWFRWJkwQf12YNyNQDA9TWVYtcs5SnsOuv3w0OC7y1xAztVuphzZLgDkIX\r\nploLQ+I0uA/kh9Zap7REF52iFOkUpvupcHb9FEBGPL6A7M4BKghsIoqnLKcw\r\nf3jdk40O+fbVTX3dC3oN7hcuP7otlAzOO4yUo+TlMwvQF3G3UIa1mczHAv7S\r\nAS+uHi0cTOTxPjZInnTtnFapTbwEpRA6g9ImXW5xjO9LwmkWCObBbXZQYANb\r\nCTs/50GsPQoh9nOGF/A7DNJexlm1qOiPtmM=\r\n=q2aT\r\n-----END PGP SIGNATURE-----\r\n"},"ember":{"edition":"octane"},"volta":{"extends":"../package.json"},"readme":"ERROR: No README data found!","engines":{"node":"14.* || 16.* || >= 18"},"exports":{".":"./dist/index.js","./*":"./dist/*","./addon-main.js":"./addon-main.js"},"gitHead":"3da5e161b6c0c0a8c8260b68c1e63467975b5109","scripts":{"lint":"eslint . --cache --ext .ts,.js","test":"echo 'A v2 addon does not have tests, run tests in test-app'","build":"rollup --config","start":"rollup --config --watch","lint:fix":"eslint . --fix --ext .ts,.js","typecheck":"tsc --noEmit","prepublishOnly":"rollup --config"},"_npmUser":{"name":"sergeastapov","email":"sergeastapov@gmail.com"},"repository":{"url":"git+https://github.com/ember-modifier/ember-modifier.git","type":"git"},"_npmVersion":"8.19.3","description":"A library for writing Ember modifiers","directories":{},"ember-addon":{"main":"addon-main.js","type":"addon","version":2,"versionCompatibility":{"ember":"3.24 || >=4.0"}},"_nodeVersion":"14.21.1","dependencies":{"@embroider/addon-shim":"^1.8.4","ember-cli-string-utils":"^1.1.0","ember-cli-normalize-entity-name":"^1.0.0"},"publishConfig":{"registry":"https://registry.npmjs.org"},"typesVersions":{"*":{"*":["./dist/*"],".":["./dist/index.d.ts"],"./-private/signature":["./dist/-private/signature.d.ts"]}},"_hasShrinkwrap":false,"devDependencies":{"eslint":"^8.29.0","rollup":"^3.6.0","prettier":"^2.8.0","typescript":"^4.9.3","@babel/core":"^7.20.5","@types/rsvp":"^4.0.4","expect-type":"^0.15.0","@tsconfig/ember":"^1.1.0","rollup-plugin-ts":"^3.0.2","ember-cli-htmlbars":"^6.1.1","eslint-plugin-node":"^11.1.0","@types/ember__debug":"^4.0.3","@types/ember__owner":"^4.0.2","eslint-plugin-ember":"^11.2.1","@embroider/addon-dev":"^3.0.0","@types/ember-resolver":"^5.0.13","@types/ember__modifier":"^4.0.3","eslint-config-prettier":"^8.5.0","eslint-plugin-prettier":"^4.2.1","@babel/preset-typescript":"^7.18.6","@types/ember__application":"^4.0.5","@types/ember__destroyable":"^4.0.1","@typescript-eslint/parser":"^5.45.1","ember-destroyable-polyfill":"^2.0.3","@babel/plugin-syntax-decorators":"^7.17.0","@typescript-eslint/eslint-plugin":"^5.46.0","@babel/plugin-proposal-decorators":"^7.20.5","@babel/plugin-proposal-class-properties":"^7.18.6"},"peerDependencies":{"ember-source":"*"},"peerDependenciesMeta":{"ember-source":{"optional":true}},"_npmOperationalInternal":{"tmp":"tmp/ember-modifier_4.0.0-beta.1-unstable.3da5e16_1670588794652_0.10534032586229958","host":"s3://npm-registry-packages"}},"4.0.0-beta.1-unstable.824a041":{"name":"ember-modifier","version":"4.0.0-beta.1-unstable.824a041","keywords":["ember-addon"],"author":"","license":"MIT","_id":"ember-modifier@4.0.0-beta.1-unstable.824a041","maintainers":[{"name":"rwjblue","email":"me@rwjblue.com"},{"name":"chriskrycho","email":"chris@chriskrycho.com"},{"name":"pzuraq","email":"opensource@pzuraq.com"},{"name":"sergeastapov","email":"sergeastapov@gmail.com"}],"homepage":"https://github.com/ember-modifier/ember-modifier#readme","bugs":{"url":"https://github.com/ember-modifier/ember-modifier/issues"},"dist":{"shasum":"f1930cbe9502a22a0198c4f60258827f15452756","tarball":"https://registry.npmjs.org/ember-modifier/-/ember-modifier-4.0.0-beta.1-unstable.824a041.tgz","fileCount":15,"integrity":"sha512-gJT5fdXprpD7gm6AsKzWifIL0/+Rii7sQ0pn2MyfyS1njQM7qQEfsh5K0dTJd+8nJW0UWObzC9Bi4lhQE9MI6Q==","signatures":[{"sig":"MEUCIDA7RVZvyKoJ97ZKdkGCT3xVWH4s9xtHplJPDc4Y6+rnAiEAxji1X/2xS2rJuDfkjhQVWlyTuj5lUJT6mmcmjxihZ60=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":47088,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjkzJKACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpDlQ/7Bp9DyTqGB5bWEICY8RMsOXPXm7Nz7oPfDvrpi6w1VXUvKUDE\r\n1lfKc67IwnN7MRUXZ3oXm6bUVW6ILJUB3SfA+EGoz/w2c9EYv7J/1xy+G0r0\r\nR2F35kafQXiczt+/D2qzlGmayoFixfqWNepc0LTkkuTrOrkuDUuzNdLQh0sU\r\nZdirOU6uzSaym1v9sxfIzPUSvFe/gecQdkTee0EE5vd24fqGoyBzSX2RKkvA\r\nqsJI9agcjzKLoqfxnvlQhcOuzahTYzyz3GC/A4aryZa7zjI06B5Q5Xj5A5e4\r\nCRnv2SWkyf/IR/TciwDYuhHO6oqtQ2eKiDPTsZPdtAJYY7FrSlm5zQYbp6PI\r\nk5I1wjn6o35iMxOpWyrs8LsLpk5dt3pORXKj6vs/iMKL1vKET3vtyzu4jX8R\r\nEkzJ1G11Qu4405L9/k6cqQMJrn3qjQ6jcJCnJ/k38zJIbUlArvzHGd/4DgHf\r\nOAJeknulHkLr4BWM3Bnjr7yIcTA322JIFiZoNN17P1HoXojIM1nzMFcAbOOQ\r\npOEdvjHPqoQt8lB6zj8JPBvYFB9wrdRXfRn5Kt2ejJ4VNh2dSfsoFjHDOVAx\r\n0Qo8ObYpS/9RGJZclXl0MtJLZQ3kq6RPjgLX4kcmIEjpNbVdtlkbJHB9Op2U\r\ncPgIx265MjTzsTPI5uJP++tSUAkRkczoE8w=\r\n=vtdp\r\n-----END PGP SIGNATURE-----\r\n"},"ember":{"edition":"octane"},"volta":{"extends":"../package.json"},"readme":"ERROR: No README data found!","engines":{"node":"14.* || 16.* || >= 18"},"exports":{".":"./dist/index.js","./*":"./dist/*","./addon-main.js":"./addon-main.js"},"gitHead":"824a041e31fb557a61de37156b1d50d97da7ed6a","scripts":{"lint":"eslint . --cache --ext .ts,.js","test":"echo 'A v2 addon does not have tests, run tests in test-app'","build":"rollup --config","start":"rollup --config --watch","lint:fix":"eslint . --fix --ext .ts,.js","typecheck":"tsc --noEmit","prepublishOnly":"rollup --config"},"_npmUser":{"name":"sergeastapov","email":"sergeastapov@gmail.com"},"repository":{"url":"git+https://github.com/ember-modifier/ember-modifier.git","type":"git"},"_npmVersion":"8.19.3","description":"A library for writing Ember modifiers","directories":{},"ember-addon":{"main":"addon-main.js","type":"addon","version":2,"versionCompatibility":{"ember":"3.24 || >=4.0"}},"_nodeVersion":"14.21.1","dependencies":{"@embroider/addon-shim":"^1.8.4","ember-cli-string-utils":"^1.1.0","ember-cli-normalize-entity-name":"^1.0.0"},"publishConfig":{"registry":"https://registry.npmjs.org"},"typesVersions":{"*":{"*":["./dist/*"],".":["./dist/index.d.ts"],"./-private/signature":["./dist/-private/signature.d.ts"]}},"_hasShrinkwrap":false,"devDependencies":{"eslint":"^8.29.0","rollup":"^3.6.0","prettier":"^2.8.0","typescript":"^4.9.3","@babel/core":"^7.20.5","@types/rsvp":"^4.0.4","expect-type":"^0.15.0","@tsconfig/ember":"^1.1.0","rollup-plugin-ts":"^3.0.2","ember-cli-htmlbars":"^6.1.1","eslint-plugin-node":"^11.1.0","@types/ember__debug":"^4.0.3","@types/ember__owner":"^4.0.2","eslint-plugin-ember":"^11.2.1","@embroider/addon-dev":"^3.0.0","@types/ember-resolver":"^5.0.13","@types/ember__modifier":"^4.0.3","eslint-config-prettier":"^8.5.0","eslint-plugin-prettier":"^4.2.1","@babel/preset-typescript":"^7.18.6","@types/ember__application":"^4.0.5","@types/ember__destroyable":"^4.0.1","@typescript-eslint/parser":"^5.45.1","ember-destroyable-polyfill":"^2.0.3","@babel/plugin-syntax-decorators":"^7.17.0","@typescript-eslint/eslint-plugin":"^5.46.0","@babel/plugin-proposal-decorators":"^7.20.5","@babel/plugin-proposal-class-properties":"^7.18.6"},"peerDependencies":{"ember-source":"*"},"peerDependenciesMeta":{"ember-source":{"optional":true}},"_npmOperationalInternal":{"tmp":"tmp/ember-modifier_4.0.0-beta.1-unstable.824a041_1670591049948_0.9327932593161234","host":"s3://npm-registry-packages"}},"4.0.0-beta.1-unstable.31d1f4c":{"name":"ember-modifier","version":"4.0.0-beta.1-unstable.31d1f4c","keywords":["ember-addon"],"author":"","license":"MIT","_id":"ember-modifier@4.0.0-beta.1-unstable.31d1f4c","maintainers":[{"name":"rwjblue","email":"me@rwjblue.com"},{"name":"chriskrycho","email":"chris@chriskrycho.com"},{"name":"pzuraq","email":"opensource@pzuraq.com"},{"name":"sergeastapov","email":"sergeastapov@gmail.com"}],"homepage":"https://github.com/ember-modifier/ember-modifier#readme","bugs":{"url":"https://github.com/ember-modifier/ember-modifier/issues"},"dist":{"shasum":"2bb9a8a23b593bd4a4beb2a946da694397419a3d","tarball":"https://registry.npmjs.org/ember-modifier/-/ember-modifier-4.0.0-beta.1-unstable.31d1f4c.tgz","fileCount":15,"integrity":"sha512-Wg7gLXbn6eTP+CIZscUvc1l7PyrDKWpFnGCKBNQPXFOTSUSbtacqh6aPzjPAciUhzLgF0cjkNA99P120rgT3FQ==","signatures":[{"sig":"MEYCIQC6Ql9AMa4n++sUmKnOqZkSQ81EWRU69UEzw+a9re4dpQIhAP/Msm/YYzTbr15yPnme4cn3mNl10cjg1pE6hvI4z6tI","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":47088,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjlqrHACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmq+Bw/9HqOPtCoFTYhcDREZ6ha4jXZuw9Dh8fZIp2h1ktSYB4aGEM9J\r\n8BzwewKmS3Cvemv/boTgIyIEnceuFfTrvwZ4HOk83DOvfIKRzLRNMmqRO7in\r\n8QM5V4gazxQM3l5yZwEwgjiiTL2T7WG2JdHd8r6Qj8akQxt3VUhLyZu+CFLn\r\nq6e1cTLKMiiQMRitBLA3uYCNi2tH8bsHJmjU4IKUyfErFmyIP+kTyyHa92PJ\r\n4/hf8oio2IIpcVTV2KmMCxpdwndGRg3eCDeeKoBjXFsx6lIFHCTjRtEnT71C\r\nIkkXUGr8j7WJ197CSJG0WNcNm0QB1z+tbhv2Jf3YjlQb+0e/OdhO+vR1mpXA\r\neuUr00N6gmqQaD9OVtCvHqf06TPnTHEfX6V04Ea+ywPutXoU8JDRjx16j8OZ\r\n9TO7J+/5nqfbaX2zoq1QCeOO1Ceyw0Z6XIu47NUvOHK27Mu5Mk/RgYMBrsna\r\nwpUP9p12G4k17AXOZo/mv4YMvNi2+QBSNY/tDnHdjIPXImhjjcPnfDwAqtCT\r\nUt2j166Dm7OWh8qduTUOLBDqXfg/q6jP/DbPKbKABkGZXEL66uAdCjdmlz6F\r\nK4fczwAsaPgmo8eFv2+/4v3tWCVIGnSvrR5nlgLdeIlo0XnddxHSTiyLxBZr\r\nx4Xrg9mtJygPj8SNvrF54MlUEJNbNwbE95I=\r\n=i5/c\r\n-----END PGP SIGNATURE-----\r\n"},"ember":{"edition":"octane"},"volta":{"extends":"../package.json"},"readme":"ERROR: No README data found!","engines":{"node":"14.* || 16.* || >= 18"},"exports":{".":"./dist/index.js","./*":"./dist/*","./addon-main.js":"./addon-main.js"},"gitHead":"31d1f4ce156c70640b88e84dad759df5f68931eb","scripts":{"lint":"eslint . --cache --ext .ts,.js","test":"echo 'A v2 addon does not have tests, run tests in test-app'","build":"rollup --config","start":"rollup --config --watch","lint:fix":"eslint . --fix --ext .ts,.js","typecheck":"tsc --noEmit","prepublishOnly":"rollup --config"},"_npmUser":{"name":"sergeastapov","email":"sergeastapov@gmail.com"},"repository":{"url":"git+https://github.com/ember-modifier/ember-modifier.git","type":"git"},"_npmVersion":"8.19.3","description":"A library for writing Ember modifiers","directories":{},"ember-addon":{"main":"addon-main.js","type":"addon","version":2,"versionCompatibility":{"ember":"3.24 || >=4.0"}},"_nodeVersion":"14.21.1","dependencies":{"@embroider/addon-shim":"^1.8.4","ember-cli-string-utils":"^1.1.0","ember-cli-normalize-entity-name":"^1.0.0"},"publishConfig":{"registry":"https://registry.npmjs.org"},"typesVersions":{"*":{"*":["./dist/*"],".":["./dist/index.d.ts"],"./-private/signature":["./dist/-private/signature.d.ts"]}},"_hasShrinkwrap":false,"devDependencies":{"eslint":"^8.29.0","rollup":"^3.6.0","prettier":"^2.8.0","typescript":"^4.9.3","@babel/core":"^7.20.5","@types/rsvp":"^4.0.4","expect-type":"^0.15.0","@tsconfig/ember":"^1.1.0","rollup-plugin-ts":"^3.0.2","ember-cli-htmlbars":"^6.1.1","eslint-plugin-node":"^11.1.0","@types/ember__debug":"^4.0.3","@types/ember__owner":"^4.0.2","eslint-plugin-ember":"^11.2.1","@embroider/addon-dev":"^3.0.0","@types/ember-resolver":"^5.0.13","@types/ember__modifier":"^4.0.3","eslint-config-prettier":"^8.5.0","eslint-plugin-prettier":"^4.2.1","@babel/preset-typescript":"^7.18.6","@types/ember__application":"^4.0.5","@types/ember__destroyable":"^4.0.1","@typescript-eslint/parser":"^5.46.0","ember-destroyable-polyfill":"^2.0.3","@babel/plugin-syntax-decorators":"^7.17.0","@typescript-eslint/eslint-plugin":"^5.46.0","@babel/plugin-proposal-decorators":"^7.20.5","@babel/plugin-proposal-class-properties":"^7.18.6"},"peerDependencies":{"ember-source":"*"},"peerDependenciesMeta":{"ember-source":{"optional":true}},"_npmOperationalInternal":{"tmp":"tmp/ember-modifier_4.0.0-beta.1-unstable.31d1f4c_1670818503090_0.933423252787412","host":"s3://npm-registry-packages"}},"4.0.0-beta.1-unstable.4ea08e7":{"name":"ember-modifier","version":"4.0.0-beta.1-unstable.4ea08e7","keywords":["ember-addon"],"author":"","license":"MIT","_id":"ember-modifier@4.0.0-beta.1-unstable.4ea08e7","maintainers":[{"name":"rwjblue","email":"me@rwjblue.com"},{"name":"chriskrycho","email":"chris@chriskrycho.com"},{"name":"pzuraq","email":"opensource@pzuraq.com"},{"name":"sergeastapov","email":"sergeastapov@gmail.com"}],"homepage":"https://github.com/ember-modifier/ember-modifier#readme","bugs":{"url":"https://github.com/ember-modifier/ember-modifier/issues"},"dist":{"shasum":"a3fa6cc4bbe64ebe70e200c15e2ab3b3c58d3acd","tarball":"https://registry.npmjs.org/ember-modifier/-/ember-modifier-4.0.0-beta.1-unstable.4ea08e7.tgz","fileCount":15,"integrity":"sha512-9zIDjbgKadTob7gOjXkQh18Lhsv66q1DO54wa8HZQL/CIvOh+3BdfO61GtigJ8tkWCYT/GHOf4a3G4y+fQaVfw==","signatures":[{"sig":"MEUCIQCe+qzBqAtUi07zPpg6OXKMSSsHtsbsnmofVE/3MroY/QIgMaiVp8k+wbPeC4px9ZZEoaVk+mFSFX9XX84AKZGU7Gc=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":47092,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjlqrYACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqX8xAAhgZ90eWNxocK7QGAt8iI15FUUrH2baVFezLg6Uod2wA+DmhK\r\niyvh1X+x95S3lu2W+ywI/3r//21l5l79C9DCBX55FiZoI36JAdEFBx9Z8Ufl\r\njxeH2ia6ySzv28V3p+AvhAPo7bCV3dbAHWuwYIAjFMnDQYrvu87eh2RBAE36\r\nYEQTUbFBIQCA/qaY465Tz3stNZxw1KeTHU1D1dFLfilR2G6SQsynxdY6+CyX\r\nUvq72LUGfXblOP4chSFudhMWPDFQlHCpsLjwgmgmEonv4KC+gPD2MYTZ0ecM\r\nTAa0ivCYO3dqNH3B8o+O9NxoOJMSLUXPe7bVuIbHPCfcqo82UPk7jAY+X214\r\nXNolgbPF9cSYMI36hJh4BjGdXL8bCD2LRJNISVT5fuRtPWW7tQz4mVmA54sx\r\nyIUcDKA2PRMFg8ppqiwvYQ8xNroCqUctCk7wjzuhWNSpGRo+XIJvzcoayGUC\r\n9YC/s6LH2S/V1Qr7YQCQA4M54Z3+cz+DnXY7c96rjbh2QAcHcyUtLTbxHBln\r\nttvz06OZ+uIfgkYdrcIOtdSJQG1hHlHgGvcssDQKOQ20MXqs8B09X5dZPPLS\r\nhDlnyBVnXdI75XRS9JDcW09kGGUz4Wf9y/qz94ua/EK6SkcKYH/AdVnouUzY\r\nW5YFztJm7BADAcwn7B6VVwJGz2iGACQRz3o=\r\n=xeh1\r\n-----END PGP SIGNATURE-----\r\n"},"ember":{"edition":"octane"},"volta":{"extends":"../package.json"},"readme":"ERROR: No README data found!","engines":{"node":"14.* || 16.* || >= 18"},"exports":{".":"./dist/index.js","./*":"./dist/*","./addon-main.js":"./addon-main.js"},"gitHead":"4ea08e72c551c59366efbd26955993b4492e046f","scripts":{"lint":"eslint . --cache --ext .ts,.js","test":"echo 'A v2 addon does not have tests, run tests in test-app'","build":"rollup --config","start":"rollup --config --watch","lint:fix":"eslint . --fix --ext .ts,.js","typecheck":"tsc --noEmit","prepublishOnly":"rollup --config"},"_npmUser":{"name":"sergeastapov","email":"sergeastapov@gmail.com"},"repository":{"url":"git+https://github.com/ember-modifier/ember-modifier.git","type":"git"},"_npmVersion":"8.19.3","description":"A library for writing Ember modifiers","directories":{},"ember-addon":{"main":"addon-main.js","type":"addon","version":2,"versionCompatibility":{"ember":"3.24 || >=4.0"}},"_nodeVersion":"14.21.1","dependencies":{"@embroider/addon-shim":"^1.8.4","ember-cli-string-utils":"^1.1.0","ember-cli-normalize-entity-name":"^1.0.0"},"publishConfig":{"registry":"https://registry.npmjs.org"},"typesVersions":{"*":{"*":["./dist/*"],".":["./dist/index.d.ts"],"./-private/signature":["./dist/-private/signature.d.ts"]}},"_hasShrinkwrap":false,"devDependencies":{"eslint":"^8.29.0","rollup":"^3.7.3","prettier":"^2.8.0","typescript":"^4.9.3","@babel/core":"^7.20.5","@types/rsvp":"^4.0.4","expect-type":"^0.15.0","@tsconfig/ember":"^1.1.0","rollup-plugin-ts":"^3.0.2","ember-cli-htmlbars":"^6.1.1","eslint-plugin-node":"^11.1.0","@types/ember__debug":"^4.0.3","@types/ember__owner":"^4.0.2","eslint-plugin-ember":"^11.2.1","@embroider/addon-dev":"^3.0.0","@types/ember-resolver":"^5.0.13","@types/ember__modifier":"^4.0.3","eslint-config-prettier":"^8.5.0","eslint-plugin-prettier":"^4.2.1","@babel/preset-typescript":"^7.18.6","@types/ember__application":"^4.0.5","@types/ember__destroyable":"^4.0.1","@typescript-eslint/parser":"^5.46.0","ember-destroyable-polyfill":"^2.0.3","@babel/plugin-syntax-decorators":"^7.17.0","@typescript-eslint/eslint-plugin":"^5.46.0","@babel/plugin-proposal-decorators":"^7.20.5","@babel/plugin-proposal-class-properties":"^7.18.6"},"peerDependencies":{"ember-source":"*"},"peerDependenciesMeta":{"ember-source":{"optional":true}},"_npmOperationalInternal":{"tmp":"tmp/ember-modifier_4.0.0-beta.1-unstable.4ea08e7_1670818519736_0.06524931618312424","host":"s3://npm-registry-packages"}},"4.0.0-beta.1-unstable.4e1b20c":{"name":"ember-modifier","version":"4.0.0-beta.1-unstable.4e1b20c","keywords":["ember-addon"],"author":"","license":"MIT","_id":"ember-modifier@4.0.0-beta.1-unstable.4e1b20c","maintainers":[{"name":"rwjblue","email":"me@rwjblue.com"},{"name":"chriskrycho","email":"chris@chriskrycho.com"},{"name":"pzuraq","email":"opensource@pzuraq.com"},{"name":"sergeastapov","email":"sergeastapov@gmail.com"}],"homepage":"https://github.com/ember-modifier/ember-modifier#readme","bugs":{"url":"https://github.com/ember-modifier/ember-modifier/issues"},"dist":{"shasum":"1719dbd205c0f9560a58234d0dd85b5fd5292903","tarball":"https://registry.npmjs.org/ember-modifier/-/ember-modifier-4.0.0-beta.1-unstable.4e1b20c.tgz","fileCount":15,"integrity":"sha512-S23gwmKwkfcKMVhZLYlL2mLsYJW5wU1cYeFY9jRl0iGNTjltu95YtfWmRZ+WDJnYypSJmqRUNecRj4rrUB+YGw==","signatures":[{"sig":"MEQCIAKmb5KXhKoQwLM+h6NaQj2tn6/Nfqk2vTq5j8kGH0ydAiAald7kwXrKlnrUJo7QJx9zAuQ0hNPBelf+6yACC+etZA==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":47092,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjlrHxACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrZ1Q/8DfZ+uhOMd3MPY9tgdX9UlbPLbvAvx8sWXu6UK3W+7cmY7SRy\r\n5q1iQ+Nn08unc27PqvzqUpB3nf7sYf0jwSVzc4PqtMN41AELgTyyP7zHW7AV\r\nzZt3x6cJngXStacNcObs7SJNGvRm8aczx/ue/CxbisFBNJXsBB84Z7OZCLHd\r\nI91kJGgIEmnMU0SmiK0qqri74Q+KA01JFlbKMk1xqVWOLgXk3X/oaHctZnQ2\r\ntWDCZgSeWe1gU0f0PQxGVUbwcjvOxG1vTBKM5jsrFjfANJno/1adi0Jx8s0J\r\nlI0nnhEwTpM1IBOn3Da+iIp3TG5U8L93rzo3rNpFPUaGIyJKmxy9pfdQtJ7X\r\nkXHFCNuUOpEgEsFHstB44+uZBL/hEwKFrj7BVyjNn81tQwXtWwYtVwwpEjfG\r\nGem8kBxvorA9KjLl9LoLJYfY4t/JB8SBtrlV6N5DJ+wjylJNZu9+A9H6HCQQ\r\nBkL+Lr1yN8XBKjYU3dUoUdBeY55dUclaeqjJGTt3oZpPg0pTq5jNos4VQIKN\r\ngoC/o9GqyXnJxwoZkSLj5DaLYgLqT60/YcaPQ8J/7bFMm7s4Oi3FanAvdW/K\r\njPirzFcnRacNmgya+Dr2kHN+UyFgQZT0I90OSnwKCmx4Pu+o+NZix+00mbdc\r\nf1VnCwEjAsiVGAlmbc1Kr4gQ7J90HfQI55s=\r\n=Rfjr\r\n-----END PGP SIGNATURE-----\r\n"},"ember":{"edition":"octane"},"volta":{"extends":"../package.json"},"readme":"ERROR: No README data found!","engines":{"node":"14.* || 16.* || >= 18"},"exports":{".":"./dist/index.js","./*":"./dist/*","./addon-main.js":"./addon-main.js"},"gitHead":"4e1b20c5fd7c4c68df2e758b498877dddfc28dd9","scripts":{"lint":"eslint . --cache --ext .ts,.js","test":"echo 'A v2 addon does not have tests, run tests in test-app'","build":"rollup --config","start":"rollup --config --watch","lint:fix":"eslint . --fix --ext .ts,.js","typecheck":"tsc --noEmit","prepublishOnly":"rollup --config"},"_npmUser":{"name":"sergeastapov","email":"sergeastapov@gmail.com"},"repository":{"url":"git+https://github.com/ember-modifier/ember-modifier.git","type":"git"},"_npmVersion":"8.19.3","description":"A library for writing Ember modifiers","directories":{},"ember-addon":{"main":"addon-main.js","type":"addon","version":2,"versionCompatibility":{"ember":"3.24 || >=4.0"}},"_nodeVersion":"14.21.1","dependencies":{"@embroider/addon-shim":"^1.8.4","ember-cli-string-utils":"^1.1.0","ember-cli-normalize-entity-name":"^1.0.0"},"publishConfig":{"registry":"https://registry.npmjs.org"},"typesVersions":{"*":{"*":["./dist/*"],".":["./dist/index.d.ts"],"./-private/signature":["./dist/-private/signature.d.ts"]}},"_hasShrinkwrap":false,"devDependencies":{"eslint":"^8.29.0","rollup":"^3.7.3","prettier":"^2.8.1","typescript":"^4.9.3","@babel/core":"^7.20.5","@types/rsvp":"^4.0.4","expect-type":"^0.15.0","@tsconfig/ember":"^1.1.0","rollup-plugin-ts":"^3.0.2","ember-cli-htmlbars":"^6.1.1","eslint-plugin-node":"^11.1.0","@types/ember__debug":"^4.0.3","@types/ember__owner":"^4.0.2","eslint-plugin-ember":"^11.2.1","@embroider/addon-dev":"^3.0.0","@types/ember-resolver":"^5.0.13","@types/ember__modifier":"^4.0.3","eslint-config-prettier":"^8.5.0","eslint-plugin-prettier":"^4.2.1","@babel/preset-typescript":"^7.18.6","@types/ember__application":"^4.0.5","@types/ember__destroyable":"^4.0.1","@typescript-eslint/parser":"^5.46.0","ember-destroyable-polyfill":"^2.0.3","@babel/plugin-syntax-decorators":"^7.17.0","@typescript-eslint/eslint-plugin":"^5.46.0","@babel/plugin-proposal-decorators":"^7.20.5","@babel/plugin-proposal-class-properties":"^7.18.6"},"peerDependencies":{"ember-source":"*"},"peerDependenciesMeta":{"ember-source":{"optional":true}},"_npmOperationalInternal":{"tmp":"tmp/ember-modifier_4.0.0-beta.1-unstable.4e1b20c_1670820336910_0.19349426494904298","host":"s3://npm-registry-packages"}},"4.0.0":{"name":"ember-modifier","version":"4.0.0","keywords":["ember-addon"],"author":"","license":"MIT","_id":"ember-modifier@4.0.0","maintainers":[{"name":"rwjblue","email":"me@rwjblue.com"},{"name":"chriskrycho","email":"chris@chriskrycho.com"},{"name":"pzuraq","email":"opensource@pzuraq.com"},{"name":"sergeastapov","email":"sergeastapov@gmail.com"}],"homepage":"https://github.com/ember-modifier/ember-modifier#readme","bugs":{"url":"https://github.com/ember-modifier/ember-modifier/issues"},"dist":{"shasum":"0bb3fae11435fcbe0d3dfa852ce224d81d75ddb2","tarball":"https://registry.npmjs.org/ember-modifier/-/ember-modifier-4.0.0.tgz","fileCount":17,"integrity":"sha512-OdconmrqKP2haK4kBwNmtnA2NiC2MFmIJC3LgJ1WhwZ49GaktM+bRIuFxF/S5W0oaegzKs1qH2ZDlqMeO2L3nw==","signatures":[{"sig":"MEUCIGtScbw2V9KbrDfnuiKlhVFbONxdX5rBmvESasdZ6GNYAiEAgayoh1KqA1p/pYgNrjXiBXynxkqw250mNYNaBNEnBvw=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":78802,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjl+krACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmq7mg//cpy0c+xLbJGccUt4dg21Wcq52Lns8+YLrlQGrd/7i3cluqz8\r\nahHVOYa4q71XVpZe3wZc5fVxmIdmaxY/iaFqecjZorBlSDECx0+qIt0ykq3Z\r\n+ih81Ultq7t1L/ShFmbb0M4Bnm9lTKtT/oD9tcthz3Kz3yL+nfndKXE15c/L\r\nXu2z4J2J10qvmilY0Jh5lfodYrvTWfuaBOrMAuteOek7l3CGL1szUWks6HbU\r\n052K34QWzCYSt2DnDVzUSzx7Uar3k4DqiFf4WXkcd3uuRi1VXIVLD8RfQ+Fo\r\ngXluZMDU1HTZjwWKOFwLsxSK/nuR8gABhwZpQ8+28Dg89CSyOoPdjRe7vXtR\r\nGEZ+/Mz4nzC+CiS9puayY89alNsVxhRhScIqIx+IgebwkkPY6IH9EALCVuiB\r\nNwKOFC7s9olq+4josRNyne5mmpcn80zYSV5DSNcYjVYX2C1tpLZvkubdUqXb\r\n739B1JmYLoClDfxJvW0N9vIEQ4iOivLss5KPm9JI+LUy4lOZ9wdw34Jz+oui\r\nVyeYYGRsij6N+N/T7xhoLWora+LvnUR2rpGm334WZu+vnQk6K0NGC5+fnjTA\r\nSUduuEKTsrieXhtG7OZwKTvSGpJQeCUQmM1fOOOS8/+axUPPQCAWeI8yyLiI\r\ncs8GEv1TXVXnIAjoOFrEUv53EuhkoKoUgEU=\r\n=e8+M\r\n-----END PGP SIGNATURE-----\r\n"},"ember":{"edition":"octane"},"volta":{"extends":"../package.json"},"engines":{"node":"14.* || 16.* || >= 18"},"exports":{".":"./dist/index.js","./*":"./dist/*","./addon-main.js":"./addon-main.js"},"scripts":{"lint":"eslint . --cache --ext .ts,.js","test":"echo 'A v2 addon does not have tests, run tests in test-app'","build":"rollup --config","start":"rollup --config --watch","lint:fix":"eslint . --fix --ext .ts,.js","typecheck":"tsc --noEmit","prepublishOnly":"rollup --config"},"_npmUser":{"name":"sergeastapov","email":"sergeastapov@gmail.com"},"repository":{"url":"git+https://github.com/ember-modifier/ember-modifier.git","type":"git"},"_npmVersion":"6.14.17","description":"A library for writing Ember modifiers","directories":{},"ember-addon":{"main":"addon-main.js","type":"addon","version":2,"versionCompatibility":{"ember":"3.24 || >=4.0"}},"_nodeVersion":"14.21.1","dependencies":{"@embroider/addon-shim":"^1.8.4","ember-cli-string-utils":"^1.1.0","ember-cli-normalize-entity-name":"^1.0.0"},"publishConfig":{"registry":"https://registry.npmjs.org"},"typesVersions":{"*":{"*":["./dist/*"],".":["./dist/index.d.ts"],"./-private/signature":["./dist/-private/signature.d.ts"]}},"_hasShrinkwrap":false,"devDependencies":{"eslint":"^8.29.0","rollup":"^3.7.3","prettier":"^2.8.1","typescript":"^4.9.3","@babel/core":"^7.20.5","@types/rsvp":"^4.0.4","expect-type":"^0.15.0","@tsconfig/ember":"^1.1.0","rollup-plugin-ts":"^3.0.2","ember-cli-htmlbars":"^6.1.1","eslint-plugin-node":"^11.1.0","@types/ember__debug":"^4.0.3","@types/ember__owner":"^4.0.2","eslint-plugin-ember":"^11.2.1","@embroider/addon-dev":"^3.0.0","@types/ember-resolver":"^5.0.13","@types/ember__modifier":"^4.0.3","eslint-config-prettier":"^8.5.0","eslint-plugin-prettier":"^4.2.1","@babel/preset-typescript":"^7.18.6","@types/ember__application":"^4.0.5","@types/ember__destroyable":"^4.0.1","@typescript-eslint/parser":"^5.46.0","ember-destroyable-polyfill":"^2.0.3","@babel/plugin-syntax-decorators":"^7.17.0","@typescript-eslint/eslint-plugin":"^5.46.0","@babel/plugin-proposal-decorators":"^7.20.5","@babel/plugin-proposal-class-properties":"^7.18.6"},"peerDependencies":{"ember-source":"*"},"peerDependenciesMeta":{"ember-source":{"optional":true}},"_npmOperationalInternal":{"tmp":"tmp/ember-modifier_4.0.0_1670900010903_0.06944592366356872","host":"s3://npm-registry-packages"}},"4.0.0-unstable.461e4ad":{"name":"ember-modifier","version":"4.0.0-unstable.461e4ad","keywords":["ember-addon"],"author":"","license":"MIT","_id":"ember-modifier@4.0.0-unstable.461e4ad","maintainers":[{"name":"rwjblue","email":"me@rwjblue.com"},{"name":"chriskrycho","email":"chris@chriskrycho.com"},{"name":"pzuraq","email":"opensource@pzuraq.com"},{"name":"sergeastapov","email":"sergeastapov@gmail.com"}],"homepage":"https://github.com/ember-modifier/ember-modifier#readme","bugs":{"url":"https://github.com/ember-modifier/ember-modifier/issues"},"dist":{"shasum":"7a26f715b229b3a6bc7f6cd065d2232ed2e9eb8b","tarball":"https://registry.npmjs.org/ember-modifier/-/ember-modifier-4.0.0-unstable.461e4ad.tgz","fileCount":15,"integrity":"sha512-6dRIVdTOBBzSBTuofS/M/webG+pinOBbgSdv6snJ3BYP6WMwuUBlyDQqr50O6HLuUbp22eaOjfaNpVC4XEh31g==","signatures":[{"sig":"MEUCICKBPr+RWHHdn5jFn+ERxU7HiFMaiamKUyIeQn5vxbrmAiEAlvIkMVHChfKG2Q7WILhzTAQ8PF9He2rhK95rKTh4vqM=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":47081,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjl+k7ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmo36w/+Po0NAg4Wh85/3HWy0UhO8MQEFbaKwmFpv+Kpb/eqpeKzofkL\r\ndPfl7uUqlLe3idAnxuQ9qqvVin6R863VX+tqwfNYNOc36bjLP/kTsoUdlRz9\r\nst+fzlLx1WxDgLYoKGI+cKe1TWm4sOrcFv0RmgAyfUsRLGC68Ie3wZ0+8sU3\r\nc9o5cFiwybUBf9bAFhmViQHYCH6IGJSN+nr1gJbNUz15OQLCJfLnqAJz3dUs\r\nV9JiLnPsyuPoehbdzG1VYA2itXJVhxJxXmMdMzvjRwujCPKt12zTH/O2dprj\r\na84wGFcui8F1gqBSdOmgVWpK7Oib2LpjdvbKkyx5Xz2N3EmUsabmKe6UMZUs\r\nsVEmU0fMt1jwhESdYhX2eeirgAKnFW4LGw+jvyeenGsLr19rfO4EqwHa0nrF\r\n+LDP+3Bm7DQ5POzv4LYuvVE4fs59MdvJ+8wc4dvSPZXYq23+EgJTAVlhqZSK\r\nVBm60R6DmkHwmVx9RXokjwN2PCu9QmAFzr8Xo/yBD0VYsGaVnf2jNm0NsOZC\r\nhHPDdM+sAJ248+rkzievmiNnBCFvJCaIvDJRdoJGlmganzsBMVfj9pgWoRS1\r\ncYhq1XvKBYQMZXbzYPNNCa/MlxDHD9dw3HlccJrc9qMkoq09/lWpQza8Q01V\r\na4zQPqCZeokOYhPxNqUuIqxSVcX+iE/+VPY=\r\n=i6tv\r\n-----END PGP SIGNATURE-----\r\n"},"ember":{"edition":"octane"},"volta":{"extends":"../package.json"},"readme":"ERROR: No README data found!","engines":{"node":"14.* || 16.* || >= 18"},"exports":{".":"./dist/index.js","./*":"./dist/*","./addon-main.js":"./addon-main.js"},"gitHead":"461e4ad02a3cfc5ff2dc60a905588a1b7aede443","scripts":{"lint":"eslint . --cache --ext .ts,.js","test":"echo 'A v2 addon does not have tests, run tests in test-app'","build":"rollup --config","start":"rollup --config --watch","lint:fix":"eslint . --fix --ext .ts,.js","typecheck":"tsc --noEmit","prepublishOnly":"rollup --config"},"_npmUser":{"name":"sergeastapov","email":"sergeastapov@gmail.com"},"repository":{"url":"git+https://github.com/ember-modifier/ember-modifier.git","type":"git"},"_npmVersion":"8.19.3","description":"A library for writing Ember modifiers","directories":{},"ember-addon":{"main":"addon-main.js","type":"addon","version":2,"versionCompatibility":{"ember":"3.24 || >=4.0"}},"_nodeVersion":"14.21.1","dependencies":{"@embroider/addon-shim":"^1.8.4","ember-cli-string-utils":"^1.1.0","ember-cli-normalize-entity-name":"^1.0.0"},"publishConfig":{"registry":"https://registry.npmjs.org"},"typesVersions":{"*":{"*":["./dist/*"],".":["./dist/index.d.ts"],"./-private/signature":["./dist/-private/signature.d.ts"]}},"_hasShrinkwrap":false,"devDependencies":{"eslint":"^8.29.0","rollup":"^3.7.3","prettier":"^2.8.1","typescript":"^4.9.3","@babel/core":"^7.20.5","@types/rsvp":"^4.0.4","expect-type":"^0.15.0","@tsconfig/ember":"^1.1.0","rollup-plugin-ts":"^3.0.2","ember-cli-htmlbars":"^6.1.1","eslint-plugin-node":"^11.1.0","@types/ember__debug":"^4.0.3","@types/ember__owner":"^4.0.2","eslint-plugin-ember":"^11.2.1","@embroider/addon-dev":"^3.0.0","@types/ember-resolver":"^5.0.13","@types/ember__modifier":"^4.0.3","eslint-config-prettier":"^8.5.0","eslint-plugin-prettier":"^4.2.1","@babel/preset-typescript":"^7.18.6","@types/ember__application":"^4.0.5","@types/ember__destroyable":"^4.0.1","@typescript-eslint/parser":"^5.46.0","ember-destroyable-polyfill":"^2.0.3","@babel/plugin-syntax-decorators":"^7.17.0","@typescript-eslint/eslint-plugin":"^5.46.0","@babel/plugin-proposal-decorators":"^7.20.5","@babel/plugin-proposal-class-properties":"^7.18.6"},"peerDependencies":{"ember-source":"*"},"peerDependenciesMeta":{"ember-source":{"optional":true}},"_npmOperationalInternal":{"tmp":"tmp/ember-modifier_4.0.0-unstable.461e4ad_1670900027524_0.9707423018248842","host":"s3://npm-registry-packages"}},"4.0.0-unstable.8501b72":{"name":"ember-modifier","version":"4.0.0-unstable.8501b72","keywords":["ember-addon"],"author":"","license":"MIT","_id":"ember-modifier@4.0.0-unstable.8501b72","maintainers":[{"name":"rwjblue","email":"me@rwjblue.com"},{"name":"chriskrycho","email":"chris@chriskrycho.com"},{"name":"pzuraq","email":"opensource@pzuraq.com"},{"name":"sergeastapov","email":"sergeastapov@gmail.com"}],"homepage":"https://github.com/ember-modifier/ember-modifier#readme","bugs":{"url":"https://github.com/ember-modifier/ember-modifier/issues"},"dist":{"shasum":"ee5c8e81b0cceff104477c4943e00853c62aafc4","tarball":"https://registry.npmjs.org/ember-modifier/-/ember-modifier-4.0.0-unstable.8501b72.tgz","fileCount":15,"integrity":"sha512-unYwQehZ5Vt+Dt6bfrr4PVHSvV5bm7YI4+IOH6Ok857epSfd1LJxl8MEuDWsrGDX7B/mYLjmSzgq4Iq51nCN+w==","signatures":[{"sig":"MEUCICLxmDtWWAXial2poj2X9NnPRw96i066nUPZ0HYe7PPRAiEAw88EtVlvTVS9FZQp1PZmK4Dvpv24mZspaXwDHHhi3jM=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":47085,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjl+viACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmoAOA//ZnZGwcGxtZMCj7yAtmRd7MG5mJwgMi75F7Sv4OUmpgTzOG7a\r\nOxI48ALsuTRMGoN/HmXcHAvY5xY3L36HY1uz03/vPAVjklDe1JvsYzebkVN/\r\nzWDgicHSvQz93fV3dgs7DuorLr5Xo+op0IasT2MHqwdrMgDIrxvh2BE+0Ne9\r\nZMMfRI8G0Rk62q8mXwMG/Cr05g1Rznd9PPl3u9lFQ1oDgrG1utlb3UhgqA5X\r\nw+BaBWTjHb3J6yCArA+aVRTmbTOG/hQnCpnxiWsGVCTaXSC+MHfq7ZjfX50J\r\nE6K0njf8OQRkJfh7JfvkUDlkQDPvoQgxEz7oQCpgHmAKNPCNyKfFVcwIKc7j\r\nmFe6pOkJiVGoYmI2uuUZIkkWzlc9T6KqvLA0hdlh9YVAUlwa8GtWzSI8zmw6\r\naWdbIB02uXLuD7BUvkD/Hu8RsfXSVua3KnReTKPFeoBo+P8ZKwJUTtmP1fiE\r\n0hokHFHGf9h5SAH9lr3V51LwTY5bO4BlwiDMYoXPbEnJiu60WULtJIHbjkgo\r\npRtmIJgkwuCjUAVm5y2LQV/Gn2FmEnGCd+wRYPXS9Twg3is/D8MYioUVslMl\r\nUxwUVoGuvZUe9udI8DWKIB2WhI+Uv2FDwgekv2GjSVAPc/gdxgHmV42VMKO/\r\ncS4dFZ5BPregd5YNeSD/DEo5CAgTEo5NVK0=\r\n=ueiZ\r\n-----END PGP SIGNATURE-----\r\n"},"ember":{"edition":"octane"},"volta":{"extends":"../package.json"},"readme":"ERROR: No README data found!","engines":{"node":"14.* || 16.* || >= 18"},"exports":{".":"./dist/index.js","./*":"./dist/*","./addon-main.js":"./addon-main.js"},"gitHead":"8501b726208215fd697770c4536b6b77be957a73","scripts":{"lint":"eslint . --cache --ext .ts,.js","test":"echo 'A v2 addon does not have tests, run tests in test-app'","build":"rollup --config","start":"rollup --config --watch","lint:fix":"eslint . --fix --ext .ts,.js","typecheck":"tsc --noEmit","prepublishOnly":"rollup --config"},"_npmUser":{"name":"sergeastapov","email":"sergeastapov@gmail.com"},"repository":{"url":"git+https://github.com/ember-modifier/ember-modifier.git","type":"git"},"_npmVersion":"8.19.3","description":"A library for writing Ember modifiers","directories":{},"ember-addon":{"main":"addon-main.js","type":"addon","version":2,"versionCompatibility":{"ember":"3.24 || >=4.0"}},"_nodeVersion":"14.21.1","dependencies":{"@embroider/addon-shim":"^1.8.4","ember-cli-string-utils":"^1.1.0","ember-cli-normalize-entity-name":"^1.0.0"},"publishConfig":{"registry":"https://registry.npmjs.org"},"typesVersions":{"*":{"*":["./dist/*"],".":["./dist/index.d.ts"],"./-private/signature":["./dist/-private/signature.d.ts"]}},"_hasShrinkwrap":false,"devDependencies":{"eslint":"^8.29.0","rollup":"^3.7.3","prettier":"^2.8.1","typescript":"^4.9.3","@babel/core":"^7.20.5","@types/rsvp":"^4.0.4","expect-type":"^0.15.0","@tsconfig/ember":"^1.1.0","rollup-plugin-ts":"^3.0.2","ember-cli-htmlbars":"^6.1.1","eslint-plugin-node":"^11.1.0","@types/ember__debug":"^4.0.3","@types/ember__owner":"^4.0.2","eslint-plugin-ember":"^11.2.1","@embroider/addon-dev":"^3.0.0","@types/ember-resolver":"^5.0.13","@types/ember__modifier":"^4.0.3","eslint-config-prettier":"^8.5.0","eslint-plugin-prettier":"^4.2.1","@babel/preset-typescript":"^7.18.6","@types/ember__application":"^4.0.5","@types/ember__destroyable":"^4.0.1","@typescript-eslint/parser":"^5.46.0","ember-destroyable-polyfill":"^2.0.3","@babel/plugin-syntax-decorators":"^7.17.0","@typescript-eslint/eslint-plugin":"^5.46.0","@babel/plugin-proposal-decorators":"^7.20.5","@babel/plugin-proposal-class-properties":"^7.18.6"},"peerDependencies":{"ember-source":"*"},"peerDependenciesMeta":{"ember-source":{"optional":true}},"_npmOperationalInternal":{"tmp":"tmp/ember-modifier_4.0.0-unstable.8501b72_1670900706606_0.7126342002633759","host":"s3://npm-registry-packages"}},"4.0.0-unstable.badb262":{"name":"ember-modifier","version":"4.0.0-unstable.badb262","keywords":["ember-addon"],"author":"","license":"MIT","_id":"ember-modifier@4.0.0-unstable.badb262","maintainers":[{"name":"rwjblue","email":"me@rwjblue.com"},{"name":"chriskrycho","email":"chris@chriskrycho.com"},{"name":"pzuraq","email":"opensource@pzuraq.com"},{"name":"sergeastapov","email":"sergeastapov@gmail.com"}],"homepage":"https://github.com/ember-modifier/ember-modifier#readme","bugs":{"url":"https://github.com/ember-modifier/ember-modifier/issues"},"dist":{"shasum":"555552a0f1663937b376637b753d47acb97070d0","tarball":"https://registry.npmjs.org/ember-modifier/-/ember-modifier-4.0.0-unstable.badb262.tgz","fileCount":15,"integrity":"sha512-nzjuxIRvp1CFVH1VGnh2akRwpqJQTQLDFeRgs2EmjS9gaLXFo48p9berzCaT8uFxyUNgqWuw7J16L1j4wo2nkg==","signatures":[{"sig":"MEUCIGI83jf9LofZnu5wLrddKjzRv0CWLk7Umw0712xkHJT4AiEAw/dnNnZtwTjXmx2SQE9ofcVSewMWbndpla4FVK6X2rE=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":47081,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjmJYQACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqhLA//W/CSvNg/AZ/iATu29ttkxLNYWJLVtB9cTLnn1CnHBa0Hnb3H\r\n2D6l9jBOOOhlAM4YHdqeGKG9ZNCkchZh1Yn56eo2dwtHAFPVC7vMCrxsFHMr\r\nPifkyOMeSFzRj7TEoDZ6/1EOPrc2HBeIC73qzyz+TQVII6qoMnO5obsTN8fp\r\nASlz2xz2TKmfqe7wiZmR+OjolB+ejoLhGTtEFKP5+vF6u4sjBLb96H8rYu3Z\r\n3ohxnXthCD7nKwFIJJO8DoNeHOHKlOdcSOourkovpDHyY5xNoXOcJC65M0l3\r\nWo7lBhfaO3b72XD7KyNdgzY9j9ynBBOWojrV7Jbx9M0hahVaUsKGHZqqQDci\r\nN0Yg8JHnQbg4h/OnqTHBEoho5iuZfIHfNldwKK7nkclj//4QunBX7FlLvekF\r\nwL2LgNzBhTu9W3MuKUE91xYCbmkosY7f6FU22NJJHgecxC4ix1nbY7bA1Bas\r\n5pEOPoYGS8INFFhLmPl5Gz0Y8M8ZyJ8WdQfJJbaNUvjmKfV1PBxGFnHQgXlr\r\nsLbYDvx88koXcjVbaXoekIi0P2jCJs2Sp07jlsbBeFc3PvLexJDjswYxwx92\r\nPNe1T2Cxhk20mXK0/ITKeMnTQExtXW7yXqSUGsBdoTthXSjjLvBGMUG1vxYn\r\nrzbeNtuPI2UQZLMp5+c9W8Fwvt3cyyAWHiI=\r\n=dArv\r\n-----END PGP SIGNATURE-----\r\n"},"ember":{"edition":"octane"},"volta":{"extends":"../package.json"},"readme":"ERROR: No README data found!","engines":{"node":"14.* || 16.* || >= 18"},"exports":{".":"./dist/index.js","./*":"./dist/*","./addon-main.js":"./addon-main.js"},"gitHead":"badb262bf0f638854406162827336ad0ba129119","scripts":{"lint":"eslint . --cache --ext .ts,.js","test":"echo 'A v2 addon does not have tests, run tests in test-app'","build":"rollup --config","start":"rollup --config --watch","lint:fix":"eslint . --fix --ext .ts,.js","typecheck":"tsc --noEmit","prepublishOnly":"rollup --config"},"_npmUser":{"name":"sergeastapov","email":"sergeastapov@gmail.com"},"repository":{"url":"git+https://github.com/ember-modifier/ember-modifier.git","type":"git"},"_npmVersion":"8.19.3","description":"A library for writing Ember modifiers","directories":{},"ember-addon":{"main":"addon-main.js","type":"addon","version":2,"versionCompatibility":{"ember":"3.24 || >=4.0"}},"_nodeVersion":"14.21.1","dependencies":{"@embroider/addon-shim":"^1.8.4","ember-cli-string-utils":"^1.1.0","ember-cli-normalize-entity-name":"^1.0.0"},"publishConfig":{"registry":"https://registry.npmjs.org"},"typesVersions":{"*":{"*":["./dist/*"],".":["./dist/index.d.ts"],"./-private/signature":["./dist/-private/signature.d.ts"]}},"_hasShrinkwrap":false,"devDependencies":{"eslint":"^8.29.0","rollup":"^3.7.3","prettier":"^2.8.1","typescript":"^4.9.3","@babel/core":"^7.20.5","@types/rsvp":"^4.0.4","expect-type":"^0.15.0","@tsconfig/ember":"^1.1.0","rollup-plugin-ts":"^3.0.2","ember-cli-htmlbars":"^6.1.1","eslint-plugin-node":"^11.1.0","@types/ember__debug":"^4.0.3","@types/ember__owner":"^4.0.2","eslint-plugin-ember":"^11.2.1","@embroider/addon-dev":"^3.0.0","@types/ember-resolver":"^5.0.13","@types/ember__modifier":"^4.0.3","eslint-config-prettier":"^8.5.0","eslint-plugin-prettier":"^4.2.1","@babel/preset-typescript":"^7.18.6","@types/ember__application":"^4.0.5","@types/ember__destroyable":"^4.0.1","@typescript-eslint/parser":"^5.46.0","ember-destroyable-polyfill":"^2.0.3","@babel/plugin-syntax-decorators":"^7.17.0","@typescript-eslint/eslint-plugin":"^5.46.0","@babel/plugin-proposal-decorators":"^7.20.5","@babel/plugin-proposal-class-properties":"^7.18.6"},"peerDependencies":{"ember-source":"*"},"peerDependenciesMeta":{"ember-source":{"optional":true}},"_npmOperationalInternal":{"tmp":"tmp/ember-modifier_4.0.0-unstable.badb262_1670944272365_0.29429128352008016","host":"s3://npm-registry-packages"}},"4.0.0-unstable.4a53d89":{"name":"ember-modifier","version":"4.0.0-unstable.4a53d89","keywords":["ember-addon"],"author":"","license":"MIT","_id":"ember-modifier@4.0.0-unstable.4a53d89","maintainers":[{"name":"rwjblue","email":"me@rwjblue.com"},{"name":"chriskrycho","email":"chris@chriskrycho.com"},{"name":"pzuraq","email":"opensource@pzuraq.com"},{"name":"sergeastapov","email":"sergeastapov@gmail.com"}],"homepage":"https://github.com/ember-modifier/ember-modifier#readme","bugs":{"url":"https://github.com/ember-modifier/ember-modifier/issues"},"dist":{"shasum":"303b97b4fac4f47ba530ebb708f0462bd1235d2e","tarball":"https://registry.npmjs.org/ember-modifier/-/ember-modifier-4.0.0-unstable.4a53d89.tgz","fileCount":15,"integrity":"sha512-qzIOrhjETEKRHV4x3NaCRybAbcRncHlPSjiabYpv+7sc6H5Aww97XYo/MaJg1F/Up2oMPM2ekHCCCKcZ2BnGqQ==","signatures":[{"sig":"MEYCIQClolbDeK4E1D16GtvGaMnk/ckqqKkgMMfbtZauqkz/KAIhAIt2/xMWQCs/yIsq2tBV7u/BaeL3UONzSfmFZ+XLR4H4","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":47085,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjmLHTACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmo3Xw//bGMNx0pyyyL/t9HDLvb5IX63MBYz85TQKIruCuCXuaCUrIff\r\npcXwv7+LK0RdPyD8uLsEHC4pqYZzmRSIKOHMrVLUJZl9Rn/WX4NixyoXP6eh\r\nzzN0JZj1fQcdvV0QwGTbXGI7JnoSYwu6NPr9K1mo/5aDWlrRdYTg88dh2HUZ\r\ns2Sw24A6eI/mVAvLa1DyMffAIns702Pz24fFHMJU3tjPXPasUfPYnKL4T/pN\r\naAxcVJIJbHZs8Q/QZCUPU9MsB3cFrB5KKiwT4HgS7oUOT707xASt6tL8knUX\r\noV9NdIorlOdx+aW0cwfNWh7g5GWAk4LoQEdP0SSvny0IiBCEOxRBoogO8Z9P\r\nC7w8Z2yEhlOr6hLrN7MGg6L3qwS5m2qxvaCclK43logljlmUg0FipwZvrKp1\r\nB1vfCwul4pPtXWMePvw+2lRMi+lWjlOgBZ6/63VcqmFiddj1dTT5jaDujbtb\r\nJx31vwV7ACl6iBf9MsYaJV4YU4Gvl/e30+peFThPSeF70qYEQY7LgO/WEodS\r\n8GQKNoiRyFl3zv2bjBuqcyIua+MUtsA+uqfGnUfL6bp6ogqxOH19TH+1poR+\r\njn1/GoYBYkeT/OdfV19MYI8h4/EsPzZsHsQsGB8VooAzC4jy7dSm9Zr6XsZA\r\nwslr+ae8EjWLO1kEE6tTA+NdeymAOQk/h5k=\r\n=4asf\r\n-----END PGP SIGNATURE-----\r\n"},"ember":{"edition":"octane"},"volta":{"extends":"../package.json"},"readme":"ERROR: No README data found!","engines":{"node":"14.* || 16.* || >= 18"},"exports":{".":"./dist/index.js","./*":"./dist/*","./addon-main.js":"./addon-main.js"},"gitHead":"4a53d8999a42d6adc4208f4194c7d38fd84ade32","scripts":{"lint":"eslint . --cache --ext .ts,.js","test":"echo 'A v2 addon does not have tests, run tests in test-app'","build":"rollup --config","start":"rollup --config --watch","lint:fix":"eslint . --fix --ext .ts,.js","typecheck":"tsc --noEmit","prepublishOnly":"rollup --config"},"_npmUser":{"name":"sergeastapov","email":"sergeastapov@gmail.com"},"repository":{"url":"git+https://github.com/ember-modifier/ember-modifier.git","type":"git"},"_npmVersion":"8.19.3","description":"A library for writing Ember modifiers","directories":{},"ember-addon":{"main":"addon-main.js","type":"addon","version":2,"versionCompatibility":{"ember":"3.24 || >=4.0"}},"_nodeVersion":"14.21.1","dependencies":{"@embroider/addon-shim":"^1.8.4","ember-cli-string-utils":"^1.1.0","ember-cli-normalize-entity-name":"^1.0.0"},"publishConfig":{"registry":"https://registry.npmjs.org"},"typesVersions":{"*":{"*":["./dist/*"],".":["./dist/index.d.ts"],"./-private/signature":["./dist/-private/signature.d.ts"]}},"_hasShrinkwrap":false,"devDependencies":{"eslint":"^8.29.0","rollup":"^3.7.3","prettier":"^2.8.1","typescript":"^4.9.3","@babel/core":"^7.20.5","@types/rsvp":"^4.0.4","expect-type":"^0.15.0","@tsconfig/ember":"^1.1.0","rollup-plugin-ts":"^3.0.2","ember-cli-htmlbars":"^6.1.1","eslint-plugin-node":"^11.1.0","@types/ember__debug":"^4.0.3","@types/ember__owner":"^4.0.2","eslint-plugin-ember":"^11.2.1","@embroider/addon-dev":"^3.0.0","@types/ember-resolver":"^5.0.13","@types/ember__modifier":"^4.0.3","eslint-config-prettier":"^8.5.0","eslint-plugin-prettier":"^4.2.1","@babel/preset-typescript":"^7.18.6","@types/ember__application":"^4.0.5","@types/ember__destroyable":"^4.0.1","@typescript-eslint/parser":"^5.46.0","ember-destroyable-polyfill":"^2.0.3","@babel/plugin-syntax-decorators":"^7.17.0","@typescript-eslint/eslint-plugin":"^5.46.0","@babel/plugin-proposal-decorators":"^7.20.5","@babel/plugin-proposal-class-properties":"^7.18.6"},"peerDependencies":{"ember-source":"*"},"peerDependenciesMeta":{"ember-source":{"optional":true}},"_npmOperationalInternal":{"tmp":"tmp/ember-modifier_4.0.0-unstable.4a53d89_1670951379652_0.7478948572896249","host":"s3://npm-registry-packages"}},"4.0.0-unstable.9247db8":{"name":"ember-modifier","version":"4.0.0-unstable.9247db8","keywords":["ember-addon"],"author":"","license":"MIT","_id":"ember-modifier@4.0.0-unstable.9247db8","maintainers":[{"name":"rwjblue","email":"me@rwjblue.com"},{"name":"chriskrycho","email":"chris@chriskrycho.com"},{"name":"pzuraq","email":"opensource@pzuraq.com"},{"name":"sergeastapov","email":"sergeastapov@gmail.com"}],"homepage":"https://github.com/ember-modifier/ember-modifier#readme","bugs":{"url":"https://github.com/ember-modifier/ember-modifier/issues"},"dist":{"shasum":"71027fb5f632fb463502713cf0b840f2c0985f67","tarball":"https://registry.npmjs.org/ember-modifier/-/ember-modifier-4.0.0-unstable.9247db8.tgz","fileCount":15,"integrity":"sha512-WcLmV3km+OE50aAEvBzXJ7jHJiqM41z96nepmYI0irU98ntKHnigr30qP24q4SeAKFy/7U9STFrgjgXmvHNeeQ==","signatures":[{"sig":"MEQCICYY0wHDdH+FOUaZJ6q8ZdGWlx8gXGETpYQG+PgV+8r8AiBZNaI2BSLnMgyFRFQJM+4Nvxctp1B7JWiuOcJGmLc/2A==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":47081,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjpLTFACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmoFfg/+Jc9WWvG9LUqjzC5Hl722zuLWZJ34u3Tap/2eemoGxZ4y0KqM\r\n0s2L0ZZK7ZUiplMRmf0vjrRVbRPwlRuoHP6Ej0FqxILAlQeWS9ovj9lxiD2o\r\nXYxdW4b+vrSsrOqOb6r9jWn7WElehZQiy1tmfDhpYzXpzVlTuOI26t0VBbvk\r\naLxFy8OprdqOeuX5N1Z2kGIkteds2Wjmjk9yFsKV6Q74ywdwHadlAQVuCjlR\r\n/NVDshNkA9rPBk+JNSduld5aHxVmZWgE103IpNxOjX4RFQRTLO2l5yvIAaHi\r\nzwdnMdws6miFYnwS9V0pTBroSc71Z2IlD+PqRGExPca88FIpmnrIEl/c0Dw5\r\nxBXvdCSKVuCoUYLlJre0RIUgGqXL1PfzW22sHh5gQEUjLfJpo98faQDToM0k\r\neqT6DxCF5O9hG6fldvMeqVvlh9qxy2wM94SC5F8BGr1lIUpnnzvCsTqWQRh/\r\nVefQe/GSMlwmKm0NDw/P0xCW+LAKel+Y+HK6mw/iGDfaf7zdGDFl04r5EIAR\r\nnz1ahgh9ZQLHgJtoVzyoCZY05etzP16s0yXLdPGnAQHQAY5es8HGXrE54bSn\r\nxKYK/b0upuvNjY22Gn1tDs9cGNawRLQhTfSvj9qOnKwPgGkHJuSicGs5Sc6f\r\nODEdlyuPqp4y6PsxFlqSta7br4OMtuwXAMQ=\r\n=ie9Z\r\n-----END PGP SIGNATURE-----\r\n"},"ember":{"edition":"octane"},"volta":{"extends":"../package.json"},"readme":"ERROR: No README data found!","engines":{"node":"14.* || 16.* || >= 18"},"exports":{".":"./dist/index.js","./*":"./dist/*","./addon-main.js":"./addon-main.js"},"gitHead":"9247db826b6b8a9c3a72e40f752862a19ea5804d","scripts":{"lint":"eslint . --cache --ext .ts,.js","test":"echo 'A v2 addon does not have tests, run tests in test-app'","build":"rollup --config","start":"rollup --config --watch","lint:fix":"eslint . --fix --ext .ts,.js","typecheck":"tsc --noEmit","prepublishOnly":"rollup --config"},"_npmUser":{"name":"sergeastapov","email":"sergeastapov@gmail.com"},"repository":{"url":"git+https://github.com/ember-modifier/ember-modifier.git","type":"git"},"_npmVersion":"8.19.3","description":"A library for writing Ember modifiers","directories":{},"ember-addon":{"main":"addon-main.js","type":"addon","version":2,"versionCompatibility":{"ember":"3.24 || >=4.0"}},"_nodeVersion":"14.21.1","dependencies":{"@embroider/addon-shim":"^1.8.4","ember-cli-string-utils":"^1.1.0","ember-cli-normalize-entity-name":"^1.0.0"},"publishConfig":{"registry":"https://registry.npmjs.org"},"typesVersions":{"*":{"*":["./dist/*"],".":["./dist/index.d.ts"],"./-private/signature":["./dist/-private/signature.d.ts"]}},"_hasShrinkwrap":false,"devDependencies":{"eslint":"^8.29.0","rollup":"^3.7.4","prettier":"^2.8.1","typescript":"^4.9.3","@babel/core":"^7.20.5","@types/rsvp":"^4.0.4","expect-type":"^0.15.0","@tsconfig/ember":"^1.1.0","rollup-plugin-ts":"^3.0.2","ember-cli-htmlbars":"^6.1.1","eslint-plugin-node":"^11.1.0","@types/ember__debug":"^4.0.3","@types/ember__owner":"^4.0.2","eslint-plugin-ember":"^11.2.1","@embroider/addon-dev":"^3.0.0","@types/ember-resolver":"^5.0.13","@types/ember__modifier":"^4.0.3","eslint-config-prettier":"^8.5.0","eslint-plugin-prettier":"^4.2.1","@babel/preset-typescript":"^7.18.6","@types/ember__application":"^4.0.5","@types/ember__destroyable":"^4.0.1","@typescript-eslint/parser":"^5.46.1","ember-destroyable-polyfill":"^2.0.3","@babel/plugin-syntax-decorators":"^7.17.0","@typescript-eslint/eslint-plugin":"^5.46.0","@babel/plugin-proposal-decorators":"^7.20.5","@babel/plugin-proposal-class-properties":"^7.18.6"},"peerDependencies":{"ember-source":"*"},"peerDependenciesMeta":{"ember-source":{"optional":true}},"_npmOperationalInternal":{"tmp":"tmp/ember-modifier_4.0.0-unstable.9247db8_1671738564863_0.7342253541453765","host":"s3://npm-registry-packages"}},"4.0.0-unstable.640b9ff":{"name":"ember-modifier","version":"4.0.0-unstable.640b9ff","keywords":["ember-addon"],"author":"","license":"MIT","_id":"ember-modifier@4.0.0-unstable.640b9ff","maintainers":[{"name":"rwjblue","email":"me@rwjblue.com"},{"name":"chriskrycho","email":"chris@chriskrycho.com"},{"name":"pzuraq","email":"opensource@pzuraq.com"},{"name":"sergeastapov","email":"sergeastapov@gmail.com"}],"homepage":"https://github.com/ember-modifier/ember-modifier#readme","bugs":{"url":"https://github.com/ember-modifier/ember-modifier/issues"},"dist":{"shasum":"e4fe40e9d86b6505936dd5f9230f2e70ebcb2c90","tarball":"https://registry.npmjs.org/ember-modifier/-/ember-modifier-4.0.0-unstable.640b9ff.tgz","fileCount":15,"integrity":"sha512-Lir/T+6tUq7rqw2KfaGDlcJhpjR6Ll/4gsNaThFEzUGnTYpgma15V2+S2cqIbyMooNuikmiGllo5W1VAeVghsg==","signatures":[{"sig":"MEUCIBivFECf+JzXAtZxQ0S+7xSBASsGuC/m+JVRzT7rRe/HAiEA9nVlafh2MxfYLGS+atke5hk1Qb5T+ahrFq3u7Mwn7N0=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":47082,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJj3DNHACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmpu4Q/+KZYVNk2VQ68DdhV0GbR8S3E42QliD43R9ZoUipfBivrtZJMV\r\njEflcsEkhH07M2UG+b2jAMwp6vg5EKa96QfqISaUd0tiXvp6KsTvyMfl51OH\r\neM898TtI1cyTMiK70C4VcMeKVoMDzVbQ0daH/c2UFveWlVK/qu3Vsu1+qqrT\r\n0SkGq7UmOowC1Lz/UrUyZdLAKoo2PiiQ8d/doQ8P9EnWmn9tGkxsLsRS5Nj3\r\ng6RrjE5jur9aO53fvZJvFvgLHo5eIA+xOsdD2Iz0+ZjUsNdr57CJfvUcA8G1\r\nug0Kes89npAKAheHj3Jdd7bvgvTzKFh3QQSvuCHHzqw1pU/Qv+D8ZTv1ygok\r\ndX1/4B02P19MIvr2TTiJk90lK1ITMcj5bX/mlyPa+upE1I5aqcaY61B4MWK8\r\nEBBhfDrNHFoSX7rIZUpReF74PgLS+CRoQRZaGHq4afSy+dEIrVEwuyUAW1O4\r\n3Qb7+Q3c2U9hETSZbj7arLncP1GLwb27Gw1Cn5tPHCmr0QMS58gb3ngdcXw+\r\nDcXklr5iWJEt+sC7M8iQsczHRmrLkug0uPHdS9wPgUvZLQ7v5vvz/5len3na\r\nhjDNoQsY4mPxrWGalEYCrX4V2s7tYzGhD0pCWyxeNu4prPivetTKih+n7eEK\r\nPKDpoBQ7+8yHhrZK0LMhivQnOZsRyAKq2uo=\r\n=RtVQ\r\n-----END PGP SIGNATURE-----\r\n"},"ember":{"edition":"octane"},"volta":{"extends":"../package.json"},"readme":"ERROR: No README data found!","engines":{"node":"14.* || 16.* || >= 18"},"exports":{".":"./dist/index.js","./*":"./dist/*","./addon-main.js":"./addon-main.js"},"gitHead":"640b9ffbcd54cd5f117e404628d0a265d1c84f19","scripts":{"lint":"eslint . --cache --ext .ts,.js","test":"echo 'A v2 addon does not have tests, run tests in test-app'","build":"rollup --config","start":"rollup --config --watch","lint:fix":"eslint . --fix --ext .ts,.js","typecheck":"tsc --noEmit","prepublishOnly":"rollup --config"},"_npmUser":{"name":"sergeastapov","email":"sergeastapov@gmail.com"},"repository":{"url":"git+https://github.com/ember-modifier/ember-modifier.git","type":"git"},"_npmVersion":"8.19.3","description":"A library for writing Ember modifiers","directories":{},"ember-addon":{"main":"addon-main.js","type":"addon","version":2,"versionCompatibility":{"ember":"3.24 || >=4.0"}},"_nodeVersion":"14.21.2","dependencies":{"@embroider/addon-shim":"^1.8.4","ember-cli-string-utils":"^1.1.0","ember-cli-normalize-entity-name":"^1.0.0"},"publishConfig":{"registry":"https://registry.npmjs.org"},"typesVersions":{"*":{"*":["./dist/*"],".":["./dist/index.d.ts"],"./-private/signature":["./dist/-private/signature.d.ts"]}},"_hasShrinkwrap":false,"devDependencies":{"eslint":"^8.31.0","rollup":"^3.9.0","prettier":"^2.8.1","typescript":"^4.9.4","@babel/core":"^7.20.12","@types/rsvp":"^4.0.4","expect-type":"^0.15.0","@tsconfig/ember":"^2.0.0","rollup-plugin-ts":"~3.0.2","ember-cli-htmlbars":"^6.1.1","eslint-plugin-node":"^11.1.0","@types/ember__debug":"^4.0.3","@types/ember__owner":"^4.0.3","eslint-plugin-ember":"^11.3.1","@embroider/addon-dev":"^3.0.0","@types/ember-resolver":"^5.0.13","@types/ember__modifier":"^4.0.3","eslint-config-prettier":"^8.6.0","eslint-plugin-prettier":"^4.2.1","@babel/preset-typescript":"^7.18.6","@types/ember__application":"^4.0.5","@types/ember__destroyable":"^4.0.1","@typescript-eslint/parser":"^5.48.0","ember-destroyable-polyfill":"^2.0.3","@babel/plugin-syntax-decorators":"^7.17.0","@typescript-eslint/eslint-plugin":"^5.47.1","@babel/plugin-proposal-decorators":"^7.20.7","@babel/plugin-proposal-class-properties":"^7.18.6"},"peerDependencies":{"ember-source":"*"},"peerDependenciesMeta":{"ember-source":{"optional":true}},"_npmOperationalInternal":{"tmp":"tmp/ember-modifier_4.0.0-unstable.640b9ff_1675375431393_0.6485085700305195","host":"s3://npm-registry-packages"}},"4.1.0":{"name":"ember-modifier","version":"4.1.0","keywords":["ember-addon"],"author":"","license":"MIT","_id":"ember-modifier@4.1.0","maintainers":[{"name":"rwjblue","email":"me@rwjblue.com"},{"name":"chriskrycho","email":"chris@chriskrycho.com"},{"name":"pzuraq","email":"opensource@pzuraq.com"},{"name":"sergeastapov","email":"sergeastapov@gmail.com"}],"homepage":"https://github.com/ember-modifier/ember-modifier#readme","bugs":{"url":"https://github.com/ember-modifier/ember-modifier/issues"},"dist":{"shasum":"cb91efbf8ca4ff4a1a859767afa42dddba5a2bbd","tarball":"https://registry.npmjs.org/ember-modifier/-/ember-modifier-4.1.0.tgz","fileCount":17,"integrity":"sha512-YFCNpEYj6jdyy3EjslRb2ehNiDvaOrXTilR9+ngq+iUqSHYto2zKV0rleiA1XJQ27ELM1q8RihT29U6Lq5EyqQ==","signatures":[{"sig":"MEUCIQC7iZsUhfX5plevF4DCz0Tp1J602Jq32No4iVMJYIZskAIgAjc46IqkKQehO6It+GhodfTG9GtL7/d2j9cFN76XPmA=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":78488,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJj/X6tACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmonDBAAmGJWA8Bg3ZomOvSc2lVlxLf9rydQlbdprsEQRS+lnipsM7L4\r\nnsNIzfnNmVF8HDAr0iS+O4CKkSz+sX+TEgIYhzkWWykR8NsN1q6TzRtHsqAR\r\nskHkfVif/ENdeq/gLeEgggVLG8UKL68ldeAcHlX3bqbHwjmUzni4ILOZD6TT\r\nixEoe2JAqFK/RM/0KEnh2000AaVPN97uDj2AGDLTZNd0n+U0imrgOO9+RtbS\r\n61N4XFZ6eyB2PbirovD9AsjsMfSh2PRZ0rKk7SluRqBHNEL4dxrTCsBRNpi6\r\nOaP0DQW703jKEAoodVNF4eUwRSEGqnB8LffPeq49Z6sPsuVFrjIaJBkuXBFI\r\nSKwXgUgPlWwpzxRDEDJdMJXVIb0bvDHVyaNZ87ep0k34r7AAeLNakvG68fbz\r\nR9DMvivk1b6c5aGNMaxGFK3rOz4iUfDOBcveTqLqHkoYC1sg5ESAth23zUBg\r\ng1ohLr6dsg1eHYTSHSAIeU6ULEBB4rbRk3TkwCNNTncSC4UR+bEm6Yv/MYNJ\r\n2cCO2vrG+QT4gejyZuBYs8HPmPCR4pHTd2Ecw7mtZF9gjiJOtVGgmOK3ssTv\r\n/fC7yBTbbfSe8oZzu0Tlk9IxTHAnBYVSQthtSXv/busObl+hPx2An+icp9Zz\r\nv9/vfXF/y0ZV/OrVaaVT7QmpVVJ9sterY24=\r\n=+EhK\r\n-----END PGP SIGNATURE-----\r\n"},"ember":{"edition":"octane"},"volta":{"extends":"../package.json"},"exports":{".":"./dist/index.js","./*":"./dist/*","./addon-main.js":"./addon-main.js"},"gitHead":"cba8bb60ba7e6b31121b4eb33f1711fbe8b300a6","scripts":{"lint":"eslint . --cache --ext .ts,.js","test":"echo 'A v2 addon does not have tests, run tests in test-app'","build":"rollup --config","start":"rollup --config --watch","lint:fix":"eslint . --fix --ext .ts,.js","lint:tsc":"tsc --noEmit","typecheck":"tsc --noEmit","prepublishOnly":"rollup --config"},"_npmUser":{"name":"sergeastapov","email":"sergeastapov@gmail.com"},"repository":{"url":"git+https://github.com/ember-modifier/ember-modifier.git","type":"git"},"_npmVersion":"8.19.3","description":"A library for writing Ember modifiers","directories":{},"ember-addon":{"main":"addon-main.js","type":"addon","version":2,"versionCompatibility":{"ember":"3.24 || 3.28 || >=4.0"}},"_nodeVersion":"16.19.1","dependencies":{"@embroider/addon-shim":"^1.8.4","ember-cli-string-utils":"^1.1.0","ember-cli-normalize-entity-name":"^1.0.0"},"publishConfig":{"registry":"https://registry.npmjs.org"},"typesVersions":{"*":{"*":["./dist/*"],".":["./dist/index.d.ts"],"./-private/signature":["./dist/-private/signature.d.ts"]}},"_hasShrinkwrap":false,"devDependencies":{"eslint":"^8.31.0","rollup":"^3.15.0","prettier":"^2.8.4","typescript":"^4.9.5","@babel/core":"^7.20.12","@types/rsvp":"^4.0.4","expect-type":"^0.15.0","@tsconfig/ember":"^2.0.0","rollup-plugin-ts":"^3.2.0","ember-cli-htmlbars":"^6.1.1","eslint-plugin-node":"^11.1.0","eslint-plugin-ember":"^11.4.6","@embroider/addon-dev":"^3.0.0","eslint-config-prettier":"^8.6.0","eslint-plugin-prettier":"^4.2.1","@babel/preset-typescript":"^7.18.6","@typescript-eslint/parser":"^5.48.0","ember-destroyable-polyfill":"^2.0.3","@babel/plugin-syntax-decorators":"^7.17.0","@typescript-eslint/eslint-plugin":"^5.54.0","@babel/plugin-proposal-decorators":"^7.20.13","@babel/plugin-proposal-class-properties":"^7.18.6"},"peerDependencies":{"ember-source":"*"},"peerDependenciesMeta":{"ember-source":{"optional":true}},"_npmOperationalInternal":{"tmp":"tmp/ember-modifier_4.1.0_1677557421248_0.4822944659624333","host":"s3://npm-registry-packages"}},"4.2.0":{"name":"ember-modifier","version":"4.2.0","description":"A library for writing Ember modifiers","keywords":["ember-addon"],"repository":{"type":"git","url":"git+https://github.com/ember-modifier/ember-modifier.git"},"license":"MIT","author":"","exports":{".":{"types":"./declarations/index.d.ts","default":"./dist/index.js"},"./*":{"types":"./declarations/*.d.ts","default":"./dist/*.js"},"./addon-main.js":"./addon-main.cjs"},"typesVersions":{"*":{"*":["declarations/*"],"./-private/signature":["./dist/-private/signature.d.ts"]}},"dependencies":{"@embroider/addon-shim":"^1.8.7","decorator-transforms":"^2.0.0","ember-cli-normalize-entity-name":"^1.0.0","ember-cli-string-utils":"^1.1.0"},"devDependencies":{"@babel/core":"^7.23.6","@babel/plugin-transform-typescript":"^7.23.6","@babel/runtime":"^7.17.0","@embroider/addon-dev":"^4.1.0","@glint/core":"^1.4.0","@glint/environment-ember-loose":"^1.4.0","@glint/environment-ember-template-imports":"^1.4.0","@glint/template":"^1.4.0","@rollup/plugin-babel":"^6.0.4","@tsconfig/ember":"^3.0.2","@types/rsvp":"^4.0.9","@typescript-eslint/eslint-plugin":"^6.14.0","@typescript-eslint/parser":"^6.14.0","babel-plugin-ember-template-compilation":"^2.2.1","concurrently":"^8.2.2","eslint":"^8.56.0","eslint-config-prettier":"^9.1.0","eslint-plugin-ember":"^11.12.0","eslint-plugin-import":"^2.29.1","eslint-plugin-n":"^16.4.0","eslint-plugin-prettier":"^5.0.1","expect-type":"^0.15.0","prettier":"^3.1.1","prettier-plugin-ember-template-tag":"^2.0.2","rollup":"^4.9.1","typescript":"^5.3.3"},"peerDependencies":{"ember-source":"^3.24 || >=4.0"},"peerDependenciesMeta":{"ember-source":{"optional":true}},"volta":{"extends":"../package.json"},"publishConfig":{"registry":"https://registry.npmjs.org"},"ember":{"edition":"octane"},"ember-addon":{"version":2,"type":"addon","main":"addon-main.cjs","versionCompatibility":{"ember":"3.24 || 3.28 || >=4.0"}},"scripts":{"build":"concurrently 'pnpm:build:*'","build:js":"rollup --config","build:types":"glint --declaration","lint":"concurrently 'pnpm:lint:*(!fix)' --names 'lint:'","lint:fix":"concurrently 'pnpm:lint:*:fix' --names 'fix:'","lint:js":"eslint . --cache","lint:js:fix":"eslint . --fix","lint:types":"glint","start":"concurrently 'pnpm:start:*'","start:js":"rollup --config --watch --no-watch.clearScreen","start:types":"glint --declaration --watch","test":"echo 'A v2 addon does not have tests, run tests in test-app'"},"bugs":{"url":"https://github.com/ember-modifier/ember-modifier/issues"},"homepage":"https://github.com/ember-modifier/ember-modifier#readme","_id":"ember-modifier@4.2.0","_integrity":"sha512-BJ48eTEGxD8J7+lofwVmee7xDgNDgpr5dd6+MSu4gk+I6xb35099RMNorXY5hjjwMJEyi/IRR6Yn3M7iJMz8Zw==","_resolved":"/private/var/folders/8c/fcls35f55h7_blwppv78cd8c0000gn/T/346f1a7d4f078362fb56f123151ba3eb/ember-modifier-4.2.0.tgz","_from":"file:ember-modifier-4.2.0.tgz","_nodeVersion":"18.17.0","_npmVersion":"9.6.7","dist":{"integrity":"sha512-BJ48eTEGxD8J7+lofwVmee7xDgNDgpr5dd6+MSu4gk+I6xb35099RMNorXY5hjjwMJEyi/IRR6Yn3M7iJMz8Zw==","shasum":"f99cb817b9b85c5188c63f853cd06aa62e8dde57","tarball":"https://registry.npmjs.org/ember-modifier/-/ember-modifier-4.2.0.tgz","fileCount":28,"unpackedSize":88520,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDm3oMWEVfq5UMactYW211Mq27Q9Z2WPrDs4tkFmaUOzgIgb2PSk5Vag0jGUWSSf+h/NfShPhOwne8J8ZcOFVCOUUI="}]},"_npmUser":{"name":"sergeastapov","email":"sergeastapov@gmail.com"},"directories":{},"maintainers":[{"name":"rwjblue","email":"me@rwjblue.com"},{"name":"chriskrycho","email":"chris@chriskrycho.com"},{"name":"pzuraq","email":"opensource@pzuraq.com"},{"name":"sergeastapov","email":"sergeastapov@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ember-modifier_4.2.0_1720064808423_0.7002715691828716"},"_hasShrinkwrap":false}},"time":{"created":"2019-10-17T18:54:04.418Z","modified":"2024-07-04T03:46:48.675Z","1.0.0":"2019-10-17T18:54:04.679Z","1.0.1":"2019-10-17T18:55:15.960Z","1.0.2":"2019-10-31T22:02:19.890Z","1.0.3":"2020-01-23T21:15:34.301Z","1.0.4":"2020-07-30T22:59:45.944Z","2.0.0":"2020-07-30T23:15:59.180Z","2.0.1":"2020-07-31T18:11:52.384Z","2.1.0":"2020-08-02T23:16:59.315Z","1.0.5":"2020-09-15T18:54:39.231Z","2.1.1":"2020-09-17T21:40:07.701Z","2.1.2":"2021-05-28T22:07:13.961Z","3.0.0":"2021-10-27T00:14:13.476Z","3.1.0":"2022-01-25T03:07:41.510Z","3.2.0":"2022-03-29T02:06:36.178Z","3.2.1":"2022-03-31T01:49:01.769Z","3.2.2":"2022-03-31T19:55:01.726Z","3.2.3":"2022-04-05T22:56:36.516Z","3.2.4":"2022-04-06T00:16:19.179Z","3.2.5":"2022-04-06T15:49:52.929Z","3.2.6":"2022-04-07T23:13:48.354Z","3.2.7":"2022-04-08T14:24:37.462Z","4.0.0-beta.1":"2022-04-22T22:37:54.613Z","4.0.0-beta.1-unstable.2f19c32":"2022-05-10T16:42:59.918Z","4.0.0-beta.1-unstable.a4fec35":"2022-05-11T19:55:42.204Z","4.0.0-beta.1-unstable.9301aec":"2022-05-16T13:54:40.150Z","4.0.0-beta.1-unstable.4a5c2b6":"2022-05-16T13:54:53.099Z","4.0.0-beta.1-unstable.ede0053":"2022-10-19T00:55:54.316Z","4.0.0-beta.1-unstable.0a0dd32":"2022-11-09T03:24:27.007Z","4.0.0-beta.1-unstable.6060d56":"2022-11-10T03:34:04.286Z","4.0.0-beta.1-unstable.593e9f9":"2022-11-10T04:01:13.996Z","4.0.0-beta.1-unstable.e12131e":"2022-11-10T04:07:11.760Z","4.0.0-beta.1-unstable.4f9046a":"2022-11-10T12:08:32.571Z","4.0.0-beta.1-unstable.958eb4a":"2022-11-11T13:54:09.511Z","4.0.0-beta.1-unstable.782c457":"2022-11-14T04:41:12.332Z","4.0.0-beta.1-unstable.0519b2e":"2022-11-15T12:43:26.390Z","4.0.0-beta.1-unstable.4ff97cc":"2022-11-15T12:44:16.333Z","4.0.0-beta.1-unstable.a3dc543":"2022-11-15T15:31:09.594Z","4.0.0-beta.1-unstable.1b3ffd1":"2022-11-15T18:31:44.130Z","4.0.0-beta.1-unstable.5f74e60":"2022-11-16T04:54:34.552Z","4.0.0-beta.1-unstable.782f5e9":"2022-11-18T04:27:31.353Z","4.0.0-beta.1-unstable.b931c9f":"2022-11-22T04:08:23.020Z","4.0.0-beta.1-unstable.f00347c":"2022-11-22T04:13:14.107Z","4.0.0-beta.1-unstable.07dc94a":"2022-11-23T04:19:05.591Z","4.0.0-beta.1-unstable.3e4d7b4":"2022-11-24T04:10:49.047Z","4.0.0-beta.1-unstable.8e440ce":"2022-11-25T04:09:02.537Z","4.0.0-beta.1-unstable.6ce5aae":"2022-11-28T04:45:54.741Z","4.0.0-beta.1-unstable.71126f4":"2022-12-01T14:29:17.078Z","4.0.0-beta.1-unstable.c0f3d28":"2022-12-01T14:29:43.189Z","4.0.0-beta.1-unstable.2f9731f":"2022-12-01T14:49:15.365Z","4.0.0-beta.1-unstable.9824f43":"2022-12-01T14:49:28.638Z","4.0.0-beta.1-unstable.ff3973f":"2022-12-01T16:11:23.818Z","4.0.0-beta.1-unstable.be9f0aa":"2022-12-02T04:15:52.894Z","4.0.0-beta.1-unstable.18d4281":"2022-12-02T04:16:23.228Z","4.0.0-beta.1-unstable.0a11f76":"2022-12-02T04:16:42.087Z","4.0.0-beta.1-unstable.c034bb7":"2022-12-02T04:17:09.531Z","4.0.0-beta.1-unstable.05942a0":"2022-12-02T04:26:16.587Z","4.0.0-beta.1-unstable.3980470":"2022-12-02T04:30:08.743Z","4.0.0-beta.1-unstable.f08fb44":"2022-12-02T04:35:06.669Z","4.0.0-beta.1-unstable.0bd0a4a":"2022-12-05T04:19:13.888Z","4.0.0-beta.1-unstable.6045865":"2022-12-05T04:23:29.716Z","4.0.0-beta.1-unstable.cd4821c":"2022-12-05T04:38:57.806Z","4.0.0-beta.1-unstable.494a4a5":"2022-12-06T12:15:59.694Z","4.0.0-beta.1-unstable.65f02b3":"2022-12-07T04:09:36.180Z","4.0.0-beta.1-unstable.2b3475c":"2022-12-07T12:47:25.714Z","4.0.0-beta.1-unstable.87601a9":"2022-12-08T04:17:56.416Z","4.0.0-beta.1-unstable.370b2be":"2022-12-09T04:11:51.810Z","4.0.0-beta.1-unstable.97f3b6b":"2022-12-09T04:18:15.704Z","4.0.0-beta.1-unstable.1f2b8c6":"2022-12-09T04:37:11.773Z","4.0.0-beta.1-unstable.3da5e16":"2022-12-09T12:26:34.823Z","4.0.0-beta.1-unstable.824a041":"2022-12-09T13:04:10.121Z","4.0.0-beta.1-unstable.31d1f4c":"2022-12-12T04:15:03.257Z","4.0.0-beta.1-unstable.4ea08e7":"2022-12-12T04:15:19.993Z","4.0.0-beta.1-unstable.4e1b20c":"2022-12-12T04:45:37.099Z","4.0.0":"2022-12-13T02:53:31.068Z","4.0.0-unstable.461e4ad":"2022-12-13T02:53:47.768Z","4.0.0-unstable.8501b72":"2022-12-13T03:05:06.754Z","4.0.0-unstable.badb262":"2022-12-13T15:11:12.615Z","4.0.0-unstable.4a53d89":"2022-12-13T17:09:39.815Z","4.0.0-unstable.9247db8":"2022-12-22T19:49:25.071Z","4.0.0-unstable.640b9ff":"2023-02-02T22:03:51.567Z","4.1.0":"2023-02-28T04:10:21.448Z","4.2.0":"2024-07-04T03:46:48.546Z"},"maintainers":[{"name":"rwjblue","email":"me@rwjblue.com"},{"name":"chriskrycho","email":"chris@chriskrycho.com"},{"name":"pzuraq","email":"opensource@pzuraq.com"},{"name":"sergeastapov","email":"sergeastapov@gmail.com"}],"repository":{"type":"git","url":"git+https://github.com/ember-modifier/ember-modifier.git"},"keywords":["ember-addon"],"license":"MIT","homepage":"https://github.com/ember-modifier/ember-modifier#readme","bugs":{"url":"https://github.com/ember-modifier/ember-modifier/issues"},"readme":"ember-modifier\n==============================================================================\n\nThis addon provides an API for authoring [element modifiers] in Ember. It\nmirrors Ember's [helper] API, with variations for writing both simple\nfunction-based modifiers and more complicated class-based modifiers.\n\n[element modifiers]: https://blog.emberjs.com/2019/03/06/coming-soon-in-ember-octane-part-4.html\n[helper]: https://octane-guides-preview.emberjs.com/release/templates/writing-helpers\n\n**NOTE:** this is the README for the v4 release. For the v3 README, see [here](https://github.com/ember-modifier/ember-modifier/blob/v3/README.md).\n\n- [Compatibility](#compatibility)\n  - [TypeScript](#typescript)\n- [Installation](#installation)\n- [Philosophy](#philosophy)\n  - [Whoa whoa whoa, hold on, what's a _\"side effect\"_?](#whoa-whoa-whoa-hold-on-whats-a-side-effect)\n  - [Managing \"side effects\" effectively](#managing-side-effects-effectively)\n- [Usage](#usage)\n  - [Function-Based Modifiers](#function-based-modifiers)\n    - [Generating a Function-Based Modifier](#generating-a-function-based-modifier)\n    - [Example without Cleanup](#example-without-cleanup)\n    - [Example with Cleanup](#example-with-cleanup)\n    - [Ember Inspector Support](#ember-inspector-support)\n  - [Class-Based Modifiers](#class-based-modifiers)\n    - [Generating a Class Modifier](#generating-a-class-modifier)\n    - [Example without Cleanup](#example-without-cleanup-1)\n    - [Example with Cleanup](#example-with-cleanup-1)\n    - [Example with Service Injection](#example-with-service-injection)\n    - [API](#api)\n- [TypeScript](#typescript-1)\n  - [The `Signature` type](#the-signature-type)\n  - [Examples with TypeScript](#examples-with-typescript)\n    - [Function-based modifier](#function-based-modifier)\n    - [Class-based](#class-based)\n- [Contributing](#contributing)\n- [License](#license)\n\nCompatibility\n------------------------------------------------------------------------------\n\n* Ember.js v3.24 or above\n* Embroider or ember-auto-import v2.0.0 or above (this is [v2 addon](https://emberjs.github.io/rfcs/0507-embroider-v2-package-format.html))\n\n### TypeScript\n\nThis project follows the current draft of [the Semantic Versioning for TypeScript Types][semver] proposal.\n\n- **Currently supported TypeScript versions:** v5.0 - v5.5\n- **Compiler support policy:** [simple majors][sm]\n- **Public API:** all published types not in a `-private` module are public\n\n[semver]: https://github.com/emberjs/rfcs/blob/master/text/0730-semver-for-ts.md\n[sm]: https://github.com/emberjs/rfcs/blob/master/text/0730-semver-for-ts.md#simple-majors\n\n\nInstallation\n------------------------------------------------------------------------------\n\n```\nember install ember-modifier\n```\n\n\nPhilosophy\n------------------------------------------------------------------------------\n\nModifiers are a basic primitive for interacting with the DOM in Ember. For\nexample, Ember ships with a built-in modifier, `{{on}}`:\n\n```hbs\n<button {{on \"click\" @onClick}}>\n  {{@text}}\n</button>\n```\n\nAll modifiers get applied to elements directly this way (if you see a similar\nvalue that _isn't_ in an element, it is probably a _helper_ instead), and they\nare passed the element when applying their effects.\n\nConceptually, modifiers take _tracked, derived state_, and turn it into some\nsort of _side effect_ related in some way to the DOM element they are applied\nto.\n\n### Whoa whoa whoa, hold on, what's a _\"side effect\"_?\n\nA \"side effect\" is something that happens in programming all the time. Here's an\nexample of one in an Ember component that attempts to make a button like in the\nfirst example, but without modifiers:\n\n```js\n// 🛑 DO NOT COPY THIS 🛑\nimport Component from '@glimmer/component';\n\nexport default class MyButton extends Component {\n  get setupEventHandler() {\n    document.querySelector('#my-button').addEventListener(this.args.onClick);\n\n    return undefined;\n  }\n}\n```\n```hbs\n<button id=\"#my-button\">\n  {{this.setupEventHandler}}\n\n  {{@text}}\n</button>\n```\n\nWe can see by looking at the `setupEventListener` getter that it isn't actually\nreturning a value. Instead, it always returns `undefined`. However, it also adds\nthe `@onClick` argument as an _event listener_ to the button in the template\nwhen the getter is run, as the template is rendering, which is a _side effect_\n- it is an effect of running the code that doesn't have anything to do with the\n\"main\" purpose of that code, in this case to return a dynamically computed\nvalue. In fact, this code doesn't compute a value at all, so this component is\n_misusing_ the getter in order to run its side effect whenever it is rendered in\nthe template.\n\nUnmanaged side effects can make code very difficult to reason about, since any\nfunction could be updating a value elsewhere. In fact, the code above is very\nbuggy:\n\n1. If the `@onClick` argument ever changes, it won't remove the old event\n   listener, it'll just keep adding new ones.\n2. It won't remove the old event listener when the component is removed.\n3. It uses a document element selector that may not be unique, and it has no\n   guarantee that the element will exist when it runs.\n4. It _will_ run in Fastboot/Server Side Rendering, where no DOM exists at all,\n   and it'll throw errors because of this.\n\nHowever, there are lots of times where its difficult to write code that\n_doesn't_ have side effects. Sometimes it would mean having to rewrite a large\nportion of an application. Sometimes, like in the case of modifying DOM, there\nisn't a clear way to do it at _all_ with just getters and components.\n\nThis is where _modifiers_ come in. Modifiers exist as a way to bridge the gap\nbetween derived state and side effects in way that is _contained_ and\n_consistent_, so that users of a modifier don't have to think about them.\n\n### Managing \"side effects\" effectively\n\nLet's look again at our original example:\n\n```hbs\n<button {{on \"click\" @onClick}}>\n  {{@text}}\n</button>\n```\n\nWe can see pretty clearly from this template that Ember will:\n\n1. Create a `<button>` element\n2. Append the contents of the `@text` argument to that button\n3. Add a click event handler to the button that runs the `@onClick` argument\n\nIf `@text` or `@onClick` ever change, Ember will keep everything in sync for us.\nWe don't ever have to manually set `element.textContent` or update anything\nourselves. In this way, we can say the template is _declarative_ - it tells\nEmber what we want the output to be, and Ember handles all of the bookkeeping\nitself.\n\nHere's how we could _implement_ the `{{on}}` modifier so that it always keeps\nthings in sync correctly:\n\n```js\nimport { modifier } from 'ember-modifier';\n\nexport default modifier((element, [eventName, handler]) => {\n  element.addEventListener(eventName, handler);\n\n  return () => {\n    element.removeEventListener(eventName, handler);\n  }\n});\n```\n\nHere, we setup the event listener using the positional parameters passed to the\nmodifier. Then, we return a _destructor_ - a function that _undoes_ our setup,\nand is effectively the _opposite_ side effect. This way, if the `@onClick`\nhandler ever changes, we first teardown the first event listener we added -\nleaving the element in its _original_ state before the modifier ever ran - and\nthen setup the new handler.\n\nThis is what allows us to treat the `{{on}}` modifier as if it were just like\nthe `{{@text}}` value we put in the template. While it _is_ side effecting, it\nknows how to setup and teardown that side effect and manage its state. The side\neffect is _contained_ - it doesn't escape into the rest of our application, it\ndoesn't cause other unrelated changes, and we can think about it as another\npiece of declarative, derived state. Just another part of the template!\n\nIn general, when writing modifiers, especially general purpose/reusable\nmodifiers, they should be designed with this in mind. Which specific effects are\nthey trying to accomplish, how to manage them effectively, and how to do it in\na way that is _transparent_ to the user of the modifier.\n\nUsage\n------------------------------------------------------------------------------\n\nThis addon does not provide any modifiers out of the box. Instead, this library\nallows you to write your own. There are two ways to write modifiers:\n\n1. Function-based modifiers\n2. Class-based modifiers\n\nThese are analogous to Ember's Helper APIs, `helper` and `Helper`.\n\n### Function-Based Modifiers\n\n`modifier` is an API for writing simple modifiers. For instance, you could\nimplement Ember's built-in `{{on}}` modifier like so with `modifier`:\n\n```js\n// /app/modifiers/on.js\nimport { modifier } from 'ember-modifier';\n\nexport default modifier((element, [eventName, handler]) => {\n  element.addEventListener(eventName, handler);\n\n  return () => {\n    element.removeEventListener(eventName, handler);\n  }\n});\n```\n\nFunction-based modifiers consist of a function that receives:\n\n1. The `element`\n2. An array of positional arguments\n3. An object of named arguments\n\n```js\nmodifier((element, positional, named) => { /* */ });\n```\n\nThis function runs the first time when the element the modifier was applied to\nis inserted into the DOM, and it _autotracks_ while running. Any tracked values\nthat it accesses will be tracked, including the arguments it receives, and if\nany of them changes, the function will run again.[^changes]\n\nThe modifier can also optionally return a _destructor_. The destructor function\nwill be run just before the next update, and when the element is being removed\nentirely. It should generally clean up the changes that the modifier made in the\nfirst place.\n\n[^changes]: As with autotracking in general, “changes” here actually means that the tracked property was set—even if it was set to the same value. This is because autotracking does not cache the *values* of properties, only the last time they changed. See [this blog post](https://v5.chriskrycho.com/journal/autotracking-elegant-dx-via-cutting-edge-cs/) for a deep dive on how it works!\n\n#### Generating a Function-Based Modifier\n\nTo create a modifier (and a corresponding integration test), run:\n\n```\nember g modifier scroll-top\n```\n\n#### Example without Cleanup\n\nFor example, if you wanted to implement your own `scrollTop` modifier (similar\nto [this][scroll-example]), you may do something like this:\n\n[scroll-example]: https://github.com/emberjs/ember-render-modifiers#example-scrolling-an-element-to-a-position\n\n```js\n// app/modifiers/scroll-top.js\nimport { modifier } from 'ember-modifier';\n\nexport default modifier((element, [scrollPosition]) => {\n  element.scrollTop = scrollPosition;\n})\n```\n```hbs\n<div class=\"scroll-container\" {{scroll-top @scrollPosition}}>\n  {{yield}}\n</div>\n```\n\n#### Example with Cleanup\n\nIf the functionality you add in the modifier needs to be torn down when the\nelement is removed, you can return a function for the teardown method.\n\nFor example, if you wanted to have your elements dance randomly on the page\nusing `setInterval`, but you wanted to make sure that was canceled when the\nelement was removed, you could do:\n\n```js\n// app/modifiers/move-randomly.js\nimport { modifier } from 'ember-modifier';\n\nconst { random, round } = Math;\n\nexport default modifier(element => {\n  const id = setInterval(() => {\n    const top = round(random() * 500);\n    const left = round(random() * 500);\n    element.style.transform = `translate(${left}px, ${top}px)`;\n  }, 1000);\n\n  return () => clearInterval(id);\n});\n\n```\n```hbs\n<button {{move-randomly}}>\n  {{yield}}\n</button>\n```\n\n#### Ember Inspector Support\n\nEmber Inspector supports showing modifiers. For Function-Based Modifiers it shows the function name as modifier name.\nBy default arrow functions or unamed functions will be shown as \\<unknown\\>. To have a name shown in the inspector use a named function or pass an extra option.\n```js\nexport default modifier(element => {\n  ...\n}, { name: 'my-fn-modifier' });\n```\n\n\n### Class-Based Modifiers\n\nSometimes you may need to do something more complicated than what can be handled\nby function-based modifiers. For instance:\n\n1. You may need to inject services and access them\n2. You may need fine-grained control of updates, either for performance or\n   convenience reasons, and don't want to teardown the state of your modifier\n   every time only to set it up again.\n3. You may need to store some local state within your modifier.\n\nIn these cases, you can use a _class-based modifier_ instead. Here's how you\nwould implement the `{{on}}` modifier with a class:\n\n```js\nimport Modifier from 'ember-modifier';\nimport { registerDestructor } from '@ember/destroyable';\n\nfunction cleanup(instance: OnModifier) {\n  let { element, event, handler } = instance;\n\n  if (element && event && handler) {\n    element.removeEventListener(event, handler);\n\n    instance.element = null;\n    instance.event = null;\n    instance.handler = null;\n  }\n}\n\nexport default class OnModifier extends Modifier {\n  element = null;\n  event = null;\n  handler = null;\n\n  modify(element, [event, handler]) {\n    this.addEventListener(element, event, handler);\n    registerDestructor(this, cleanup)\n  }\n\n  // methods for reuse\n  addEventListener = (element, event, handler) => {\n    // Store the current element, event, and handler for when we need to remove\n    // them during cleanup.\n    this.element = element;\n    this.event = event;\n    this.handler = handler;\n\n    element.addEventListener(event, handler);\n  };\n}\n```\n\nWhile this is slightly more complicated than the function-based version, but\nthat complexity comes along with much more _control_.\n\nAs with function-based modifiers, the lifecycle hooks of class modifiers are\n_tracked_. When they run, then any values they access will be added to the\nmodifier, and the modifier will update if any of those values change.\n\n#### Generating a Class Modifier\n\nTo create a modifier (and a corresponding integration test), run:\n\n```\nember g modifier scroll-top --class\n```\n\n#### Example without Cleanup\n\nFor example, let's say you want to implement your own `{{scroll-position}}`\nmodifier (similar to [this](https://github.com/emberjs/ember-render-modifiers#example-scrolling-an-element-to-a-position)).\n\nThis modifier can be attached to any element and accepts a single positional\nargument. When the element is inserted, and whenever the argument is updated, it\nwill set the element's `scrollTop` property to the value of its argument.\n\n(Note that this example does not require the use of a class, and could be\nimplemented equally well with a function-based modifier!)\n\n```js\n// app/modifiers/scroll-position.js\nimport Modifier from 'ember-modifier';\n\nexport default class ScrollPositionModifier extends Modifier {\n  modify(element, [scrollPosition], { relative }) {\n    if(relative) {\n      element.scrollTop += scrollPosition;\n    } else {\n      element.scrollTop = scrollPosition;\n    }\n  }\n}\n```\n\nUsage:\n\n```handlebars\n{{!-- app/components/scroll-container.hbs --}}\n\n<div\n  class=\"scroll-container\"\n  style=\"width: 300px; heigh: 300px; overflow-y: scroll\"\n  {{scroll-position this.scrollPosition relative=false}}\n>\n  {{yield this.scrollToTop}}\n</div>\n```\n\n```js\n// app/components/scroll-container.js\n\nimport Component from '@glimmer/component';\nimport { tracked } from '@glimmer/tracking';\nimport { action } from '@ember/object';\n\nexport default class ScrollContainerComponent extends Component {\n  @tracked scrollPosition = 0;\n\n  @action scrollToTop() {\n    this.scrollPosition = 0;\n  }\n}\n```\n\n```handlebars\n{{!-- app/templates/application.hbs --}}\n\n<ScrollContainer as |scroll|>\n  A lot of content...\n\n  <button {{on \"click\" scroll}}>Back To Top</button>\n</ScrollContainer>\n```\n\n#### Example with Cleanup\n\nIf the functionality you add in the modifier needs to be torn down when the\nmodifier is removed, you can use `registerDestructor` from `@ember/destroyable`.\n\nFor example, if you want to have your elements dance randomly on the page using\n`setInterval`, but you wanted to make sure that was canceled when the modifier\nwas removed, you could do this:\n\n```js\n// app/modifiers/move-randomly.js\n\nimport Modifier from 'ember-modifier';\nimport { registerDestructor } from '@ember/destroyable'\n\nconst { random, round } = Math;\nconst DEFAULT_DELAY = 1000;\n\nfunction cleanup(instance) {\n  if (instance.setIntervalId !== null) {\n    clearInterval(instance.setIntervalId);\n    instance.setIntervalId = null;\n  }\n}\n\nexport default class MoveRandomlyModifier extends Modifier {\n  element = null;\n  setIntervalId = null;\n\n  constructor(owner, args) {\n    super(owner, args);\n    registerDestructor(this, cleanup);\n  }\n\n  modify(element, _, { delay }) {\n    // Save off the element the first time for convenience with #moveElement\n    if (!this.element) {\n      this.element = element;\n    }\n\n    // Reset from any previous state.\n    cleanup(this);\n\n    this.setIntervalId = setInterval(this.#moveElement, delay ?? DEFAULT_DELAY);\n  }\n\n  #moveElement = (element) => {\n    let top = round(random() * 500);\n    let left = round(random() * 500);\n    this.element.style.transform = `translate(${left}px, ${top}px)`;\n  };\n}\n```\n\nUsage:\n\n```hbs\n<div {{move-randomly}}>\n  Catch me if you can!\n</div>\n```\n\n#### Example with Service Injection\n\nYou can also use services into your modifier, just like any other class in Ember.\n\nFor example, suppose you wanted to track click events with `ember-metrics`:\n\n```js\n// app/modifiers/track-click.js\n\nimport { inject as service } from '@ember/service';\nimport Modifier from 'ember-modifier';\nimport { registerDestructor } from '@ember/destroyable';\n\nfunction cleanup(instance) {\n  instance.element?.removeEventListener('click', instance.onClick, true);\n}\n\nexport default class TrackClick extends Modifier {\n  @service metrics;\n\n  constructor(owner, args) {\n    super(owner, args);\n    registerDestructor(this, this.cleanup);\n  }\n\n  modify(element, [eventName], options) {\n    this.element = element;\n    this.eventName = eventName;\n    this.options = options;\n\n    this.cleanup();\n    element.addEventListener('click', this.onClick, true);\n  }\n\n  onClick = () => {\n    this.metrics.trackEvent(this.eventName, this.options);\n  };\n}\n```\n\nUsage:\n\n```hbs\n<button {{track-click \"like-button-click\" page=\"some page\" title=\"some title\"}}>\n  Click Me!\n</button>\n```\n\n#### API\n\n<dl>\n<dt><code>constructor(owner, args)</code>\n<dd>Constructor for the modifier. You must call <code>super(...arguments)</code> before performing other initialization.</dd>\n<dt><code>modify(element, positionalArgs, namedArgs)</code>\n<dd>The primary hook for running a modifier. It gets called when the modifier is installed on the element, and any time any tracked state it uses changes. That tracked state can be from its arguments, which are auto-tracked, or from any other kind of tracked state, including but not limited to state on injected services.</dd>\n</dl>\n\n## TypeScript\n\nBoth the function- and class-based APIs can be used with TypeScript!\n\nBefore checking out the [Examples with Typescript](#examples-with-type-script) below, there is an important caveat you should understand about type safety!\n\nThere are, today, two basic approaches you can take to dealing with your modifier's arguments and element in a type safe way:\n\n1. You can use a type definition which specifies those for the outside world, relying on tooling like [Glint][glint] to check that the invocation is correct, and treat input as safe accordingly.\n2. You can provide the minimal public interface which *all* modifiers conform to, and do runtime type checking with `assert` calls to make your internal implementation safe.\n\nIf you have a code base which is strictly typed from end to end, including with template type checking via Glint, then (1) is a great choice. If you have a mixed code base, or are publishing an addon for others to use, then [it's usually best to do both (1) *and* (2)][safe-ts-libs]!\n\n[glint]: https://github.com/typed-ember/glint\n[safe-ts-libs]: https://v5.chriskrycho.com/journal/writing-robust-typescript-libraries/s\n\nTo handle runtime checking, for non-type-checked templates (including projects not yet using Glint or supporting external callers), you should *act* as though the arguments passed to your modifier can be *anything*. They’re typed as `unknown` by default, which means by default TypeScript will *require* you to work out the type passed to you at runtime. For example, with the `ScrollPositionModifier` shown above, you can combine TypeScript’s [type narrowing] with the default types for the class to provide runtime errors if the caller passes the wrong types, while providing safety throughout the rest of the body of the modifier. Here, `modify` would be *guaranteed* to have the correct types for `scrollPosition` and `relative`:\n\n[type narrowing]: https://www.typescriptlang.org/docs/handbook/advanced-types.html#type-guards-and-differentiating-types\n\n```ts\nimport Modifier from 'ember-modifier';\nimport { assert } from '@ember/debug';\n\nexport class ScrollPositionModifier extends Modifier {\n  modify(element, [scrollPosition], { relative }) {\n    assert(,\n      `first argument to 'scroll-position' must be a number, but ${scrollPosition} was ${typeof scrollPosition}`,\n      typeof scrollPosition === \"number\"\n    );\n\n    assert(\n      `'relative' argument to 'scroll-position' must be a boolean, but ${relative} was ${typeof relative}`,\n      typeof relative === \"boolean\"\n    );\n\n    if (relative) {\n      element.scrollTop += scrollPosition;\n    } else {\n      element.scrollTop = scrollPosition;\n    }\n  }\n}\n```\n\nIf you were writing for a fully-typed context, you can define your `Modifier` with a `Signature` interface, similar to the way you would define your signature for a Glimmer Component:\n\n```ts\n// app/modifiers/scroll-position.ts\nimport Modifier from 'ember-modifier';\n\ninterface ScrollPositionModifierSignature {\n  Args: {\n    Positional: [number];\n    Named: {\n      relative: boolean;\n    };\n  };\n}\n\nexport default class ScrollPositionModifier\n    extends Modifier<ScrollPositionModifierSignature> {\n  modify(element, [scrollPosition], { relative }) {\n    if (relative) {\n      element.scrollTop += scrollPosition;\n    } else {\n      element.scrollTop = scrollPosition;\n    }\n  }\n}\n```\n\nBesides supporting integration with [Glint][glint], this also provides nice hooks for documentation tooling. Note, however, that it can result in *much worse* feedback in tests or at runtime if someone passes the wrong kind of arguments to your modifier and you *haven't* included assertions: users who pass the wrong thing will just have the modifier fail. For example, if you fail to pass the positional argument, `scrollPosition` would simply be `undefined`, and then `element.scrollTop` could end up being set to `NaN`. Whoops! For that reason, if your modifier will be used by non-TypeScript consumers, you should both publish the types for it *and* add dev-time assertions:\n\n```ts\n// app/modifiers/scroll-position.ts\nimport Modifier from 'ember-modifier';\n\ninterface ScrollPositionModifierSignature {\n  Args: {\n    Positional: [scrollPosition: number];\n    Named: {\n      relative: boolean;\n    };\n  };\n  Element: Element; // not required: it'll be set by default\n}\n\nexport default class ScrollPositionModifier\n    extends Modifier<ScrollPositionModifierSignature> {\n  modify(element, [scrollPosition], { relative }) {\n    assert(,\n      `first argument to 'scroll-position' must be a number, but ${scrollPosition} was ${typeof scrollPosition}`,\n      typeof scrollPosition === \"number\"\n    );\n\n    assert(\n      `'relative' argument to 'scroll-position' must be a boolean, but ${relative} was ${typeof relative}`,\n      typeof relative === \"boolean\"\n    );\n\n    if (relative) {\n      element.scrollTop += scrollPosition;\n    } else {\n      element.scrollTop = scrollPosition;\n    }\n  }\n}\n```\n\n### The `Signature` type\n\nThe `Signature` for a modifier is the combination of the positional and named arguments it receives and the element to which it may be applied.\n\n```ts\ninterface Signature {\n  Args: {\n    Named: {\n      [argName: string]: unknown;\n    };\n    Positional: unknown[];\n  };\n  Element: Element;\n}\n```\n\nWhen writing a signature yourself, all of those are optional: the types for modifiers will fall back to the correct defaults of `Element`, an object for named arguments, and an array for positional arguments. You can apply a signature when defining either a function-based or a class-based modifier.\n\nIn a function-based modifier, the callback arguments will be inferred from the signature, so you do not need to specify the types twice:\n\n```ts\ninterface MySignature {\n  Element: HTMLMediaElement;\n  Args: {\n    Named: {\n      when: boolean;\n    };\n    Positional: [];\n  };\n}\n\nconst play = modifier<MySignature>((el, _, { when: shouldPlay }) => {\n  if (shouldPlay) {\n    el.play();\n  } else {\n    el.pause();\n  }\n})\n```\n\nYou never *need* to specify a signature in this way for a function-based modifier: you can simply write the types inline instead:\n\n```ts\nconst play = modifier(\n  (el: HTMLMediaElement, _: [], { when: shouldPlay }: { when: boolean}) => {\n    if (shouldPlay) {\n      el.play();\n    } else {\n      el.pause();\n    }\n  }\n);\n```\n\nHowever, the explicit `modifier<Signature>(...)` form is tested to keep working, since it can be useful for documentation!\n\nThe same basic approach works with a class-based modifier:\n\n```ts\ninterface MySignature {\n  // ...\n}\n\nexport default class MyModifier extends Modifier<MySignature> {\n  // ...\n}\n```\n\nIn that case, the `element` and `args` will always have the right types throughout the body. Since the type of `args` in the constructor are derived from the signature, you can use the `ArgsFor` type helper to avoid having to write the type out separately:\n\n```ts\nimport Modifier, { ArgsFor } from 'ember-modifier';\n\ninterface MySignature {\n  // ...\n}\n\nexport default class MyModifier extends Modifier<MySignature> {\n  constructor(owner: unknown, args: ArgsFor<MySignature>) {\n    // ...\n  }\n}\n```\n\n`ArgsFor` isn't magic: it just takes the `Args` from the `Signature` you provide and turns it into the right shape for the constructor: the `Named` type ends up as the `named` field and the `Positional` type ends up as the type for `args.positional`, so you could write it out yourself if you preferred:\n\n```ts\nimport Modifier from 'ember-modifier';\n\ninterface MySignature {\n  // ...\n}\n\nexport default class MyModifier extends Modifier<MySignature> {\n  constructor(\n    owner: unknown,\n    args: {\n      named: MySignature['Args']['Named'];\n      positional: MySignature['Args']['Positional'];\n    }\n  ) {\n    // ...\n  }\n}\n```\n\n### Examples with TypeScript\n\n#### Function-based modifier\n\nLet’s look at a variant of the `move-randomly` example from above, implemented in TypeScript, and now requiring a named argument, the maximum offset. Using the recommended combination of types and runtime type-checking, it would look like this:\n\n```ts\n// app/modifiers/move-randomly.js\nimport { modifier } from 'ember-modifier';\nimport { assert } from '@ember/debug';\n\nconst { random, round } = Math;\n\nexport default modifier(\n  (element: HTMLElement, _: [], named: { maxOffset: number }\n) => {\n  assert(\n    'move-randomly can only be installed on HTML elements!',\n    element instanceof HTMLElement\n  );\n\n  const { maxOffset } = named;\n  assert(\n    `The 'max-offset' argument to 'move-randomly' must be a number, but was ${typeof maxOffset}`,\n    typeof maxOffset === \"number\"\n  );\n\n  const id = setInterval(() => {\n    const top = round(random() * maxOffset);\n    const left = round(random() * maxOffset);\n    element.style.transform = `translate(${left}px, ${top}px)`;\n  }, 1000);\n\n  return () => clearInterval(id);\n});\n```\n\nA few things to notice here:\n\n1.  TypeScript correctly infers the *base* types of the arguments for the function passed to the modifier; you don't need to specify what `element` or `positional` or `named` are unless you are doing like we are in this example and providing a usefully more-specific type to callers.\n\n2.  If we returned a teardown function which had the wrong type signature, that would also be an error.\n\n    If we return a value instead of a function, for example:\n\n    ```ts\n    export default modifier((element, _, named) => {\n      // ...\n\n      return id;\n    });\n    ```\n\n    TypeScript will report:\n\n    > ```\n    > Type 'Timeout' is not assignable to type 'void | Teardown'.\n    > ```\n\n    Likewise, if we return a function with the wrong signature, we will see the same kinds of errors. If we expected to receive an argument in the teardown callback, like this:\n\n    ```ts\n    export default modifier((element, _, named) => {\n      // \n\n      return (interval: number) => clearTimeout(interval);\n    });\n    ```\n\n    TypeScript will report:\n\n    > ```\n    > Type '(interval: number) => void' is not assignable to type 'void | Teardown'.\n    > ```\n\n####  Class-based\n\nTo support correctly typing `args` in the `constructor` for the case where you do runtime type checking, we supply an `ArgsFor` type utility. (This is useful because the `Signature` type, matching Glimmer Component and other \"invokable\" items in Ember/Glimmer, has capital letters for the names of the types, while `args.named` and `args.positional` are lower-case.) Here’s how that would look with a fully typed modifier that alerts \"This is a typesafe modifier!\" an amount of time after receiving arguments that depends on the length of the first argument and an *optional* multiplier (a nonsensical thing to do, but one that illustrates a fully type-safe class-based modifier):\n\n```ts\nimport Modifier, { ArgsFor, PositionalArgs, NamedArgs } from 'ember-modifier';\nimport { assert } from '@ember/debug';\n\ninterface NeatSignature {\n  Args: {\n    Named: {\n      multiplier?: number;\n    };\n    Positional: [string];\n  }\n}\n\n\nfunction cleanup(instance: Neat) => {\n  if (instance.interval) {\n    clearInterval(instance.interval);\n  }\n}\n\nexport default class Neat extends Modifier<NeatSignature> {\n  interval?: number;\n\n  constructor(owner: unknown, args: ArgsFor<NeatSignature>) {\n    super(owner, args);\n    registerDestructor(this, cleanup);\n  }\n\n  modify(\n    element: Element,\n    [lengthOfInput]: PositionalArgs<NeatSignature>,\n    { multiplier }: NamedArgs<NeatSignature>\n  ) {\n    assert(\n  \t  `positional arg must be 'string' but was ${typeof lengthOfInput}`,\n  \t  typeof lengthOfInput === 'string'\n  \t);\n\n    assert(\n    \t`'multiplier' arg must be a number but was ${typeof multiplier}`,\n    \tmultiplier ? typeof multiplier === \"number\" : true\n    );\n\n    multiplier = modifier ?? 1000;\n\n    let updateTime = multiplier * lengthOfInput;\n    this.interval = setInterval(() => {\n      element.innerText =\n        `Behold, a type safe modifier moved after ${updateTime / 1000}s`;\n    }, updateTime)\n  }\n}\n```\n\nContributing\n------------------------------------------------------------------------------\n\nSee the [Contributing](CONTRIBUTING.md) guide for details.\n\n\nLicense\n------------------------------------------------------------------------------\n\nThis project is licensed under the [MIT License](LICENSE.md).\n","readmeFilename":"README.md"}